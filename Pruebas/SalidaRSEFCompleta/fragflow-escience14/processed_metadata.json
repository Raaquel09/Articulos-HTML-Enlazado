[
    {
        "title": "FragFlow Automated Fragment Detection in Scientific Workflows",
        "implementation_urls": [],
        "doi": "10.1109/escience.2014.32",
        "arxiv": null,
        "abstract": "Abstract—Scientific workflows provide the means to define, execute and reproduce computational experiments.  However, reusing existing workflows still poses challenges for workflow designers. Workflows are often too large and too specific to reuse in their entirety, so reuse is more likely to happen for fragments of workflows. These fragments may be identified manually by users as sub-workflows, or detected automatically.  In this paper we present the FragFlow approach, which detects workflow fragments automatically by analyzing existing workflow corpora with graph mining algorithms.  FragFlow detects the most common workflow fragments, links them to the original workflows and visualizes them. We evaluate our approach by comparing FragFlow results against user-defined sub-workflows from three different corpora of the LONI Pipeline system.  Based on this evaluation, we discuss how automated workflow fragment detection could facilitate workflow reuse. Keywords—scientific workflow; workflow fragment; workflow reuse; LONI pipeline.  I.  INTRODUCTION  Scientific workflows are templates that define the set of steps and data dependencies needed to execute computational experiments. They are usually created for executing research methods and sharing them with a community of users [21] [8], even in cases where the community is small (e.g., a research lab). Scientific workflows can ease data management among different steps [9] [15], facilitate collaborative development through a common interface and simplify access to computational resources (e.g., clusters, grids, etc.).  Different scientific workflows often share part of their functionality (common preprocessing steps, data manipulation for a particular visualization, reformatting, etc). A prior study analyzing workflows from different workflow systems and domains showed that almost 20% percent of the analyzed workflows were composed of other workflows [6]. Some systems even allow users to define hierarchical workflows to exploit these commonalities and split workflows into smaller reusable parts [15] [21]. However, there is not much support for the automatic detection of sub-workflows at the moment. In our work, we aim to automatically discover and expose common workflow fragments from a given corpus of workflows. Capturing common workflow fragments may bring in several benefits to workflows users and designers: they simplify the visualization of the workflow (simpler visualizations lead to better organization and comprehension), they make the workflow easier to understand, they modularize the functionality (by separating the different reusable parts of the workflow) and they save time in workflow design (designers are more likely to reuse fragments rather than complete workflows, which are more specific). Our approach combines exact and inexact graph mining ",
        "publication_date": "2014-10-01",
        "authors": "Daniel Garijo, Óscar Corcho, Yolanda Gil, Boris A. Gutman, Ivo D. Dinov, Paul M. Thompson, Arthur W. Toga",
        "file_name": "20250512001219.pdf",
        "file_path": "../Pruebas/SalidaRSEFCompleta/fragflow-escience14/PDFs/20250512001219.pdf",
        "pdf_link": "https://dgarijo.com/papers/fragflow-escience14.pdf"
    }
]