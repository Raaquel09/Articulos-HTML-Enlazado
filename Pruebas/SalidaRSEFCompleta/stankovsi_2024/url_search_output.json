[
    {
        "title": "RepoFromPaper: An Approach to Extract Software Code Implementations from Scientific Publications",
        "implementation_urls": [
            {
                "identifier": "https://github.com/StankovskiA/RepoFromPaper",
                "type": "git",
                "paper_frequency": 3,
                "extraction_methods": [
                    {
                        "type": "unidir",
                        "location": "../Pruebas/SalidaRSEFCompleta/stankovsi_2024/PDFs/20250511232730.pdf",
                        "location_type": "PAPER",
                        "source_paragraph": "In summary, the number of implementation links found only by the bi-directional approach was 4, the 14 RepoFromPaper is available at https://github.com/StankovskiA/RepoFromPaper 15 https://arxiv.org/list/cs.AI/recent 16 https://arxiv.org/list/cs.SE/recent 7 Discussion Our approach produces high evaluation results, presents several limitations."
                    }
                ]
            }
        ],
        "doi": "10.1007/978-3-031-65794-8_7",
        "abstract": "Abstract. An increasing amount of scientists link to their research soft-ware code implementations in their academic publications in order tosupport the reusability of their results. However, research papers usuallycontain many code links (e.g., from reused tools or existing compet-ing efforts) making it challenging to automatically establish clear linksbetween papers and their corresponding implementations. This paperpresents RepoFromPaper, an approach for automatically extracting themain code implementation associated with a research paper, based on thecontext in which that link is mentioned. Our approach uses fine-tunedlanguage models to retrieve the top candidate sentences where a code im-plementation may be found, and uses custom heuristics to link candidatesentences back to their corresponding URL (footnote, reference or full-text mention). We evaluated RepoFromPaper on 150 research papers,obtaining an F1 score of 0.94. We also run our approach on nearly 1800papers from the CS.AI Arxiv category, discovering 604 paper-repositorylinks and making them available to the community.Keywords: Information extraction · Research Software · Software repos-itory · Open Science.1 IntroductionResearch Software, i.e., the source code files, algorithms, scripts, computationalworkflows and executables that were created during the research process [2] isbecoming recognized as a first class citizen in scientific curricula.1 In order tosupport the results described in academic publications, scientists often include alink to a code repository (e.g., GitHub, Gitlab) with their technical implemen-tations details.While efforts have been made by the scientific community to establish princi-ples[16] and formats for software citation [5], detecting the code repository linkassociated with a publication has two main challenges. First, authors often citeresearch software inconsistently, employing diverse formats and locations such as1 https://sfdora.org/read/2 A. Stankovski and D. Garijofull-text repository mentions (cases where the link is written in the paragraphs),footnotes, or references to refer to a software component [8]. Second, a publi-cation may contain several code repository links (from tools that are reused, orcompeting with the proposed approach) making it challenging to automaticallydetect the right code implementation.This paper introduces a methodology designed to address these challenges byautomatically extracting the software implementation repository link associatedwith a research paper, based on the context in which the link is mentioned. Thecore contributions of our work include:1. Training and validation datasets of labeled sentences designed to fine-tune and evaluate our approach [17]. The training dataset includes 61 re-search papers related to software engineering available on the PapersWith-Code2 platform. The validation dataset includes 150 software engineering re-search articles extracted from Arxiv. Both datasets encompass various typesof implementation mention sentences to cover the diverse ways authors ref-erence the implementation repository.2. RepoFromPaper3, a tool to automatically extract the code implementa-tion repository from a research paper, including PDF-to-Text conversion,sentence extraction, sentence classification and link search, as well as three",
        "publication_date": "2024-01-01",
        "authors": "Aleksandar Stankovski, Daniel Garijo",
        "file_name": "20250511232730.pdf",
        "file_path": "../Pruebas/SalidaRSEFCompleta/stankovsi_2024/PDFs/20250511232730.pdf",
        "pdf_link": "https://dgarijo.com/papers/stankovsi_2024.pdf"
    }
]