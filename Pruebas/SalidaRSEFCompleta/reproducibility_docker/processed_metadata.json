[
    {
        "title": "March 2, 2022 11:13 WSPC/INSTRUCTION FILE output",
        "implementation_urls": [
            {
                "identifier": "https://github.com/quay/clair",
                "type": "git",
                "paper_frequency": 1,
                "extraction_methods": [
                    {
                        "type": "regex",
                        "location": "",
                        "location_type": "",
                        "source": "",
                        "source_paragraph": ""
                    }
                ]
            }
        ],
        "doi": null,
        "arxiv": null,
        "abstract": "1.1 concepts and abstract syntax, W3C recommendation 25(02) (2014) 1–22.[27] I. Santana-Perez, R. F. da Silva, M. Rynge, E. Deelman, M. S. Pérez-Hernández andO. Corcho, Reproducibility of execution environments in computational science usingsemantics and clouds, Future Generation Computer Systems 67 (2017) 354–367.[28] Docker manifest specification v2.2. Accessed from https://docs.docker.com/registry/spec/manifest-v2-2/.[29] Clair GitHub repository. Accessed from https://github.com/quay/clair.[30] Quai main page. Accessed from http://status.quay.io.[31] Conda documentation page. Accessed from https://conda.io/docs.[32] Digital Ocean main page. Accessed from https://www.digitalocean.com/.[33] Common vulnerabilities and exposures database home page. Accessed from https://cve.mitre.org/.[34] CVE reports. Accessed from https://ubuntu.com/security/cve.[35] Debian security bug tracker home page. Accessed from https://security-tracker.debian.org/tracker/.[36] Red Hat Product Security Data Homepage. Accessed from https://access.redhat.com/security/data.[37] Alpine Security Database of Backported fixes. Accessed from https://github.com/alpinelinux/alpine-secdb.[38] M. Osorio and C. Buil-Aranda, Dockerpedia dataset (December 2018), doi: https://doi.org/10.5281/zenodo.1897809.[39] M. Osorio, C. Buil-Aranda, I. Santana-Pérezand D. Garijo, Queries used to illustrate the DockerPedia Knowledge Graph (Jun2021), doi: 10.6084/m9.figshare.14718450.v1.[40] Dash package documentation page. Accessed from http://manpages.ubuntu.com/manpages/xenial/man1/dash.1.html.[41] M. Osorio, dockerpedia/soykb: thesis (December 2018), doi: https://doi.org/10.5281/zenodo.1889356.[42] Dockerpedia package vulnerability visualization page. Accessed from https://dockerpedia.inf.utfsm.cl/visualization.[43] P. Amstutz, M. R. Crusoe, N. Tijanić, B. Chapman, J. Chilton, M. Heuer,A. Kartashov, D. Leehr, H. Ménager, M. Nedeljkovich, M. Scales, S. Soiland-Reyes and L. Stojanovic, Common Workflow Language, v1.0 (7 2016), doi:10.6084/m9.figshare.3115156.v2.[44] D. Garijo, Y. Gil and O. Corcho, Abstract, link, publish, exploit: An end to endframework for workflow sharing, Future Generation Computer Systems 75 (2017).[45] K. Belhajjame, M. Roos, E. Garcia-Cuesta, G. Klyne, J. Zhao, D. De Roure, C. Goble,J. M. Gomez-Perez, K. Hettne and A. Garrido, Why workflows break — understand-ing and combating decay in taverna workflows, in Proceedings of the 2012 IEEE 8thInternational Conference on E-Science (e-Science), E-SCIENCE ’12, (IEEE Com-puter Society, Washington, DC, USA, 2012), pp. 1–9.[46] N. D. Rollins, C. M. Barton, S. Bergin, M. A. Janssen and A. Lee, A computationalmodel library for publishing model documentation and code, Environ. Model. Softw.March 2, 2022 11:13 WSPC/INSTRUCTION FILE output20 Osorio et. al.61 (November 2014) 59–64.[47] F. Chirigati, D. Shasha and J. Freire, Reprozip: Using provenance to support com-putational reproducibility, in Presented as part of the 5th {USENIX} Workshop onthe Theory and Practice of Provenance, 2013.[48] V. Steeves, R. Rampin and F. Chirigati, Using ReproZip for reproducibility and",
        "publication_date": null,
        "authors": "",
        "file_name": "20250511235549.pdf",
        "file_path": "../Pruebas/SalidaRSEFCompleta/reproducibility_docker/PDFs/20250511235549.pdf",
        "pdf_link": "https://dgarijo.com/papers/reproducibility_docker.pdf"
    }
]