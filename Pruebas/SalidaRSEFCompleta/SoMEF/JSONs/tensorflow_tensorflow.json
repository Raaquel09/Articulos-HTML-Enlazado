{"somef_provenance": {"somef_version": "0.9.9", "somef_schema_version": "1.0.0", "date": "2025-05-11 23:23:44"}, "code_repository": [{"result": {"value": "https://github.com/tensorflow/tensorflow", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "https://www.tensorflow.org/tfrc/", "type": "Url"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/profiler/pip_package/setup.py"}, {"result": {"value": "https://cloud.google.com/tpu/", "type": "Url"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/client/pip_package/setup.py"}], "owner": [{"result": {"value": "tensorflow", "type": "Organization"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2015-11-07T01:19:20Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2025-05-11T20:41:12Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/apache-2.0", "type": "License", "name": "Apache License 2.0", "url": "https://api.github.com/licenses/apache-2.0", "spdx_id": "Apache-2.0"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n## Some of TensorFlow's code is derived from Caffe, which is subject to the following copyright notice:\n\nCOPYRIGHT\n\nAll contributions by the University of California:\n\nCopyright (c) 2014, The Regents of the University of California (Regents)\nAll rights reserved.\n\nAll other contributions:\n\nCopyright (c) 2014, the respective contributors\nAll rights reserved.\n\nCaffe uses a shared copyright model: each contributor holds copyright over\ntheir contributions to Caffe. The project versioning records all such\ncontribution and copyright details. If a contributor wants to further mark\ntheir specific copyright on a particular contribution, they should indicate\ntheir copyright solely in the commit message of the change when it is\ncommitted.\n\nLICENSE\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n   ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n   ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n   (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nCONTRIBUTION AGREEMENT\n\nBy contributing to the BVLC/caffe repository through pull-request, comment,\nor otherwise, the contributor releases their content to the\nlicense and copyright terms herein.", "type": "File_dump", "name": "Apache License 2.0", "spdx_id": "Apache-2.0"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/LICENSE"}, {"result": {"value": "Apache 2.0", "type": "License"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/profiler/pip_package/setup.py"}, {"result": {"value": "Apache 2.0", "type": "License"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/client/pip_package/setup.py"}, {"result": {"value": "[Apache License 2.0](LICENSE)\n", "type": "Text_excerpt", "original_header": "License"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}], "description": [{"result": {"value": "An Open Source Machine Learning Framework for Everyone", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Trace and profile Cloud TPU performance", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/profiler/pip_package/setup.py"}, {"result": {"value": "Client for using Cloud TPUs", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/client/pip_package/setup.py"}, {"result": {"type": "Text_excerpt", "value": "**If you want to contribute to TensorFlow, be sure to review the\n[contribution guidelines](CONTRIBUTING.md). This project adheres to TensorFlow's\n[code of conduct](CODE_OF_CONDUCT.md). By participating, you are expected to\nuphold this code.** \n**We use [GitHub issues](https://github.com/tensorflow/tensorflow/issues) for\ntracking requests and bugs, please see\n[TensorFlow Forum](https://discuss.tensorflow.org/) for general questions and\ndiscussion, and please direct specific questions to\n[Stack Overflow](https://stackoverflow.com/questions/tagged/tensorflow).** \n", "original_header": "Contribution guidelines"}, "confidence": 0.8831255876644255, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "Follow these steps to patch a specific version of TensorFlow, for example, to\napply fixes to bugs or security vulnerabilities: \n*   Clone the TensorFlow repo and switch to the corresponding branch for your\n    desired TensorFlow version, for example, branch `r2.8` for version 2.8.\n*   Apply (that is, cherry-pick) the desired changes and resolve any code\n    conflicts.\n*   Run TensorFlow tests and ensure they pass.\n*   [Build](https://www.tensorflow.org/install/source) the TensorFlow pip\n    package from source.\n \n", "original_header": "Patching guidelines"}, "confidence": 0.8735132326264237, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "You can find more community-supported platforms and configurations in the\n[TensorFlow SIG Build community builds table](https://github.com/tensorflow/build#community-supported-tensorflow-builds).\n \n", "original_header": "Continuous build status"}, "confidence": 0.8405694869069006, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}, {"result": {"type": "Text_excerpt", "value": " is an end-to-end open source platform\nfor machine learning. It has a comprehensive, flexible ecosystem of\n,\n, and\n resources that lets\nresearchers push the state-of-the-art in ML and developers easily build and\ndeploy ML-powered applications. \nTensorFlow was originally developed by researchers and engineers working within\nthe Machine Intelligence team at Google Brain to conduct research in machine\nlearning and neural networks. However, the framework is versatile enough to be\nused in other areas as well. \nTensorFlow provides stable \nand  APIs, as well as a\nnon-guaranteed backward compatible API for\n. \n"}, "confidence": 0.9427668142743705, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}], "name": [{"result": {"value": "tensorflow", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "tensorflow/tensorflow", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/tensorflow/tensorflow/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/tensorflow/tensorflow/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 189884, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "deep-learning, deep-neural-networks, distributed, machine-learning, ml, neural-network, python, tensorflow", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "tensorflow performance tpu", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/profiler/pip_package/setup.py"}, {"result": {"value": "tensorflow tpu", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/client/pip_package/setup.py"}], "forks_count": [{"result": {"value": 74670, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/tensorflow/tensorflow/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "C++", "name": "C++", "type": "Programming_language", "size": 101147723}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 45826738}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "MLIR", "name": "MLIR", "type": "Programming_language", "size": 11984946}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "HTML", "name": "HTML", "type": "Programming_language", "size": 7662661}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Starlark", "name": "Starlark", "type": "Programming_language", "size": 7343098}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Go", "name": "Go", "type": "Programming_language", "size": 2173656}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "C", "name": "C", "type": "Programming_language", "size": 1248139}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Java", "name": "Java", "type": "Programming_language", "size": 1178817}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Jupyter Notebook", "name": "Jupyter Notebook", "type": "Programming_language", "size": 805762}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Shell", "name": "Shell", "type": "Programming_language", "size": 705231}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Objective-C++", "name": "Objective-C++", "type": "Programming_language", "size": 279654}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Objective-C", "name": "Objective-C", "type": "Programming_language", "size": 169277}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "CMake", "name": "CMake", "type": "Programming_language", "size": 148613}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Smarty", "name": "Smarty", "type": "Programming_language", "size": 138615}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Swift", "name": "Swift", "type": "Programming_language", "size": 81677}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Dockerfile", "name": "Dockerfile", "type": "Programming_language", "size": 38834}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "C#", "name": "C#", "type": "Programming_language", "size": 13585}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Batchfile", "name": "Batchfile", "type": "Programming_language", "size": 12126}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Ruby", "name": "Ruby", "type": "Programming_language", "size": 8898}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Perl", "name": "Perl", "type": "Programming_language", "size": 7536}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Roff", "name": "Roff", "type": "Programming_language", "size": 5034}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Linker Script", "name": "Linker Script", "type": "Programming_language", "size": 4497}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Cython", "name": "Cython", "type": "Programming_language", "size": 3899}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Makefile", "name": "Makefile", "type": "Programming_language", "size": 2845}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "CSS", "name": "CSS", "type": "Programming_language", "size": 2761}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Vim Snippet", "name": "Vim Snippet", "type": "Programming_language", "size": 58}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Python", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/profiler/pip_package/setup.py"}, {"result": {"value": "Python", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/profiler/pip_package/setup.py"}, {"result": {"value": "Python", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/profiler/pip_package/setup.py"}, {"result": {"value": "Python", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/profiler/pip_package/setup.py"}, {"result": {"value": "Python", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/profiler/pip_package/setup.py"}, {"result": {"value": "Python", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/profiler/pip_package/setup.py"}, {"result": {"value": "Python", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/client/pip_package/setup.py"}, {"result": {"value": "Python", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/client/pip_package/setup.py"}, {"result": {"value": "Python", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/client/pip_package/setup.py"}, {"result": {"value": "Python", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/client/pip_package/setup.py"}], "releases": [{"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/205156020", "tag": "v2.18.1", "name": "TensorFlow 2.18.1", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.18.1\r\n\r\n### Security\r\n* Updates curl to `8.11.0` to handle [CVE-2024-2004](https://github.com/advisories/GHSA-97xx-95pm-5qv6), [CVE-2024-2379](https://github.com/advisories/GHSA-wr4c-gwg7-p734), [CVE-2024-2398](https://github.com/advisories/GHSA-mq8w-c2j9-rqxc), [CVE-2024-2466](https://github.com/advisories/GHSA-9xr6-qf7m-2jv5), [CVE-2024-6197](https://github.com/advisories/GHSA-x3h8-3mf2-v794), [CVE-2024-7264](https://github.com/advisories/GHSA-97c4-2w4v-c7r8), [CVE-2024-8096](https://github.com/advisories/GHSA-gv3v-x3f3-7fxm) and [CVE-2024-9681](https://github.com/advisories/GHSA-g337-g667-mjvw).\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* Loosen `ml_dtypes` upperbound to `< 1.0.0` to reduce conflicts when installed with other ML ecosystem components.  \r\n\r\n### Breaking Changes\r\n\r\n* `tf.lite`\r\n    * Interpreter:\r\n      * `tf.lite.Interpreter` gives warning of future deletion and a redirection notice to its new location at `ai_edge_litert.interpreter`. See the [migration guide](https://ai.google.dev/edge/litert/migration) for details.\r\n* Tensorflow-tpu for this patch is skipped due to some sparsecore related bugs. We suggest to upgrade to 2.19.0 instead.", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.18.1", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.18.1", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.18.1", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/205156020", "release_id": 205156020, "date_created": "2025-03-07T22:33:29Z", "date_published": "2025-03-11T23:49:16Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/205165244", "tag": "v2.19.0", "name": "TensorFlow 2.19.0", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.19.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `LiteRT`, a.k.a. `tf.lite`:\r\n    * C++ API:\r\n      * The public constants `tflite::Interpreter:kTensorsReservedCapacity` and `tflite::Interpreter:kTensorsCapacityHeadroom` are now const references, rather than `constexpr` compile-time constants. (This is to enable better API compatibility for TFLite in Play services while preserving the implementation flexibility to change the values of these constants in the future.)\r\n    * Python API:\r\n      * `tf.lite.Interpreter` gives deprecation warning redirecting to its new location at `ai_edge_litert.interpreter`, as the API `tf.lite.Interpreter` will be deleted in TF 2.20. See the [migration guide](https://ai.google.dev/edge/litert/migration) for details.\r\n\r\n### Known Caveats\r\n\r\n### Major Features and Improvements\r\n\r\n*  `tf.lite`\r\n    * `tfl.Cast` op is now supporting `bfloat16` in runtime kernel.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* We have stopped publishing `libtensorflow` packages but it can still be unpacked from the PyPI package.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAkhil Goel, akhilgoe, Alain Flaischer, Alex, Alexander Pivovarov, Alexander Shadchin, Alexis Praga, Amrinfathima-Mcw, Andrey Pikas, Andrey Portnoy, Ankur Singh, Ashiq Imran, Assoap, c8ef, charleshofer, Chase Riley Roberts, Chenhao Jiang, Chongyun Lee, Claudio Desouza, Corentin Godeau, Crefeda Rodrigues, Danny Burrow, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, Elfie Guo, Emmanuel Ferdman, fiberflow, flyingcat, Gary Yi-Hung Chen, Georg Stefan Schmid, Gerwout Van Der Veen, Harsha H S, Harshit Monish, Hugo Mano, i.Pear, Ilia Sergachev, Jane Liu, Jaroslav Sevcik, Jc (Jonathan Chen), Jerry Ge, Jian Li, johndoknjas, Johnny, Jonathan Albrecht, Kaixi Hou, Kanvi Khanna, keerthanakadiri, Kevin Ji, Kiran Sai Ramineni, kwoncy2020, LakshmiKalaKadali, Lee, Jun Seok, Mahmoud Abuzaina, Matt Bahr, mayuyuace, Melissa Weber Mendon\u00e7a, misterBart, Mkarpushin-Enhancelab, Mmakevic-Amd, mraunak, nallave, Nayana Thorat, Nayana-Ibm, nick.camarena, Nicolas Castet, Om Thakkar, oyzh, Parsa Homayouni, Patrick Toulme, Pavel Emeliyanenko, Pavithra Eswaramoorthy, Pearu Peterson, pemeliya, Philipp Hack, Ravi Kumar Soni, redwrasse, Ruturaj Vaidya, Sallenkey-Wei, Sandeep Gupta, Sergey Kozub, Sevin Fide Varoglu, Shanbin Ke, Shaogang Wang, Shixin Zhang, Shraiysh, Shu Wang, Silvio Traversaro, snadampal, Sunita Nadampalli, Tai Ly, Tatwai Chong, tchatow, tdanyluk, Terry Sun, Tilak, Tj Xu, Trevor Morris, Twice, vfdev, Vladimir Silyaev, Weisser, Pascal, wokron, Won Jeon, Xuefei Jiang, Zentrik, Zoranjovanovic-Ns", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.19.0", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.19.0", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.19.0", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/205165244", "release_id": 205165244, "date_created": "2025-03-05T22:02:00Z", "date_published": "2025-03-12T00:56:36Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/202111809", "tag": "v2.19.0-rc0", "name": "TensorFlow 2.19.0-rc0", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.19.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `LiteRT`, a.k.a. `tf.lite`:\r\n  * C++ API:\r\n    * The public constants `tflite::Interpreter:kTensorsReservedCapacity` and `tflite::Interpreter:kTensorsCapacityHeadroom` are now const references, rather than `constexpr` compile-time constants. (This is to enable better API compatibility for TFLite in Play services while preserving the implementation flexibility to change the values of these constants in the future.)\r\n    * Interpreter:\r\n      * `tf.lite.Interpreter` gives deprecation warning redirecting to its new location at `ai_edge_litert.interpreter`, as the API `tf.lite.Interpreter` will be deleted in TF 2.20. See the [migration guide](https://ai.google.dev/edge/litert/migration) for details.\r\n\r\n### Known Caveats\r\n\r\n### Major Features and Improvements\r\n\r\n*  `tf.lite`\r\n    * `tfl.Cast` op is now supporting `bfloat16` in runtime kernel.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* We have stopped publishing `libtensorflow` packages but it can still be unpacked from the PyPI package.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAkhil Goel, akhilgoe, Alain Flaischer, Alex, Alexander Pivovarov, Alexander Shadchin, Alexis Praga, Amrinfathima-Mcw, Andrey Pikas, Andrey Portnoy, Ankur Singh, Ashiq Imran, Assoap, c8ef, charleshofer, Chase Riley Roberts, Chenhao Jiang, Chongyun Lee, Claudio Desouza, Corentin Godeau, Crefeda Rodrigues, Danny Burrow, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, Elfie Guo, Emmanuel Ferdman, fiberflow, flyingcat, Gary Yi-Hung Chen, Georg Stefan Schmid, Gerwout Van Der Veen, Harsha H S, Harshit Monish, Hugo Mano, i.Pear, Ilia Sergachev, Jane Liu, Jaroslav Sevcik, Jc (Jonathan Chen), Jerry Ge, Jian Li, johndoknjas, Johnny, Jonathan Albrecht, Kaixi Hou, Kanvi Khanna, keerthanakadiri, Kevin Ji, Kiran Sai Ramineni, kwoncy2020, LakshmiKalaKadali, Lee, Jun Seok, Mahmoud Abuzaina, Matt Bahr, mayuyuace, Melissa Weber Mendon\u00e7a, misterBart, Mkarpushin-Enhancelab, Mmakevic-Amd, mraunak, nallave, Nayana Thorat, Nayana-Ibm, nick.camarena, Nicolas Castet, Om Thakkar, oyzh, Parsa Homayouni, Patrick Toulme, Pavel Emeliyanenko, Pavithra Eswaramoorthy, Pearu Peterson, pemeliya, Philipp Hack, Ravi Kumar Soni, redwrasse, Ruturaj Vaidya, Sallenkey-Wei, Sandeep Gupta, Sergey Kozub, Sevin Fide Varoglu, Shanbin Ke, Shaogang Wang, Shixin Zhang, Shraiysh, Shu Wang, Silvio Traversaro, snadampal, Sunita Nadampalli, Tai Ly, Tatwai Chong, tchatow, tdanyluk, Terry Sun, Tilak, Tj Xu, Trevor Morris, Twice, vfdev, Vladimir Silyaev, Weisser, Pascal, wokron, Won Jeon, Xuefei Jiang, Zentrik, Zoranjovanovic-Ns", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.19.0-rc0", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.19.0-rc0", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.19.0-rc0", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/202111809", "release_id": 202111809, "date_created": "2025-02-20T20:32:44Z", "date_published": "2025-02-24T19:00:56Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/181833222", "tag": "v2.18.0", "name": "TensorFlow 2.18.0", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.18.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `tf.lite`\r\n    * C API:\r\n      * An optional, fourth parameter was added `TfLiteOperatorCreate` as a step forward towards a cleaner API for `TfLiteOperator`. Function `TfLiteOperatorCreate` was added recently, in TensorFlow Lite version 2.17.0, released on 7/11/2024, and we do not expect there will be much code using this function yet. Any code breakages can be easily resolved by passing nullptr as the new, 4th parameter.\r\n\r\n* TensorRT support is disabled in CUDA builds for code health improvement.\r\n\r\n* Hermetic CUDA support is added.\r\n\r\n  Hermetic CUDA uses a specific downloadable version of CUDA instead of the user\u2019s locally installed CUDA. Bazel will download CUDA, CUDNN and NCCL distributions, and then use CUDA libraries and tools as dependencies in various Bazel targets. This enables more reproducible builds for Google ML projects and supported CUDA versions. \r\n\r\n### Known Caveats\r\n\r\n### Major Features and Improvements\r\n\r\n* TensorFlow now supports and is compiled with NumPy 2.0 by default. Please see the [NumPy 2 release notes](https://numpy.org/doc/stable/release/2.0.0-notes.html) and the [NumPy 2 migration guide](https://numpy.org/devdocs/numpy_2_0_migration_guide.html#numpy-2-migration-guide).\r\n   * Note that NumPy's type promotion rules have been changed(See [NEP 50](https://numpy.org/neps/nep-0050-scalar-promotion.html#nep50)for details). This may change the precision at which computations happen, leading either to type errors or to numerical changes to results.\r\n   * Tensorflow will continue to support NumPy 1.26 until 2025, aligning with community standard deprecation timeline [here](https://scientific-python.org/specs/spec-0000/).\r\n*   `tf.lite`:\r\n    *   The LiteRT [repo](https://github.com/google-ai-edge/LiteRT) is live (see [announcement](https://developers.googleblog.com/en/tensorflow-lite-is-now-litert/)), which means that in the coming months there will be changes to the development experience for TFLite. The TF Lite Runtime source will be moved later this year, and sometime after that we will start accepting contributions through that repo.\r\n* SignatureRunner is now supported for models with no signatures.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.data`\r\n    * Add optional `synchronous` argument to `map`, to specify that the `map` should run synchronously, as opposed to be parallelizable when `options.experimental_optimization.map_parallelization=True`. This saves memory compared to setting `num_parallel_calls=1`.\r\n    * Add optional `use_unbounded_threadpool` argument to `map`, to specify that the `map` should use an unbounded threadpool instead of the default pool that is based on the number of cores on the machine. This can improve throughput for map functions which perform IO or otherwise release the CPU.\r\n    * Add [`tf.data.experimental.get_model_proto`](https://www.tensorflow.org/api_docs/python/tf/data/experimental/get_model_proto) to allow users to peek into the analytical model inside of a dataset iterator.\r\n\r\n* `tf.lite`\r\n    * `Dequantize` op supports `TensorType_INT4`.\r\n        * This change includes per-channel dequantization.\r\n    * Add support for `stablehlo.composite`.\r\n    * `EmbeddingLookup` op supports per-channel quantization and `TensorType_INT4` values.\r\n    * `FullyConnected` op supports `TensorType_INT16` activation and `TensorType_Int4` weight per-channel quantization.\r\n\r\n* `tf.tensor_scatter_update`, `tf.tensor_scatter_add` and of other reduce types.\r\n    * Support `bad_indices_policy`.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAkhil Goel, akhilgoe, Alexander Pivovarov, Amir Samani, Andrew Goodbody, Andrey Portnoy, Anthony Platanios, bernardoArcari, Brett Taylor, buptzyb, Chao, Christian Clauss, Cocoa, Daniil Kutz, Darya Parygina, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, Elfie Guo, eukub, Faijul Amin, flyingcat, Fr\u00e9d\u00e9ric Bastien, ganyu.08, Georg Stefan Schmid, Grigory Reznikov, Harsha H S, Harshit Monish, Heiner, Ilia Sergachev, Jan, Jane Liu, Jaroslav Sevcik, Kaixi Hou, Kanvi Khanna, Kristof Maar, Krist\u00f3f Ma\u00e1r, LakshmiKalaKadali, Lbertho-Gpsw, lingzhi98, MarcoFalke, Masahiro Hiramori, Mmakevic-Amd, mraunak, Nobuo Tsukamoto, Notheisz57, Olli Lupton, Pearu Peterson, pemeliya, Peyara Nando, Philipp Hack, Phuong Nguyen, Pol Dellaiera, Rahul Batra, Ruturaj Vaidya, sachinmuradi, Sergey Kozub, Shanbin Ke, Sheng Yang, shengyu, Shraiysh, Shu Wang, Surya, sushreebarsa, Swatheesh-Mcw, syzygial, Tai Ly, terryysun, tilakrayal, Tj Xu, Trevor Morris, Tzung-Han Juang, wenchenvincent, wondertx, Xuefei Jiang, Ye Huang, Yimei Sun, Yunlong Liu, Zahid Iqbal, Zhan Lu, Zoranjovanovic-Ns, Zuri Obozuwa", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.18.0", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.18.0", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.18.0", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/181833222", "release_id": 181833222, "date_created": "2024-10-21T23:10:20Z", "date_published": "2024-10-24T23:51:36Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/181828227", "tag": "v2.17.1", "name": "TensorFlow 2.17.1", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.17.1\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* Add necessary header files in the aar library. These are needed if developers build apps with header files unpacked from tflite aar files from maven.\r\n* Implement Name() for GCSWritableFile to fix the profiler trace viewer cache file generation.\r\n* Fix `cstring.h` missing file issue with the Libtensorflow archive.", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.17.1", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.17.1", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.17.1", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/181828227", "release_id": 181828227, "date_created": "2024-10-15T18:13:05Z", "date_published": "2024-10-24T22:49:35Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/180289063", "tag": "v2.18.0-rc2", "name": "TensorFlow 2.18.0-rc2", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.18.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `tf.lite`\r\n    * C API:\r\n      * An optional, fourth parameter was added `TfLiteOperatorCreate` as a step forward towards a cleaner API for `TfLiteOperator`. Function `TfLiteOperatorCreate` was added recently, in TensorFlow Lite version 2.17.0, released on 7/11/2024, and we do not expect there will be much code using this function yet. Any code breakages can be easily resolved by passing nullptr as the new, 4th parameter.\r\n    * SignatureRunner is now supported for models with no signatures.\r\n\r\n* TensorRT support is disabled in CUDA builds for code health improvement.\r\n\r\n* Hermetic CUDA support is added.\r\n\r\n  Hermetic CUDA uses a specific downloadable version of CUDA instead of the user\u2019s locally installed CUDA. Bazel will download CUDA, CUDNN and NCCL distributions, and then use CUDA libraries and tools as dependencies in various Bazel targets. This enables more reproducible builds for Google ML projects and supported CUDA versions. \r\n\r\n### Known Caveats\r\n\r\n### Major Features and Improvements\r\n\r\n* TensorFlow now supports and is compiled with NumPy 2.0 by default. Please see the [NumPy 2 release notes](https://numpy.org/doc/stable/release/2.0.0-notes.html) and the [NumPy 2 migration guide](https://numpy.org/devdocs/numpy_2_0_migration_guide.html#numpy-2-migration-guide).\r\n   * Note that NumPy's type promotion rules have been changed(See [NEP 50](https://numpy.org/neps/nep-0050-scalar-promotion.html#nep50) for details). This may change the precision at which computations happen, leading either to type errors or to numerical changes to results.\r\n   * Tensorflow will continue to support NumPy 1.26 until 2025, aligning with community standard deprecation timeline [here](https://scientific-python.org/specs/spec-0000/).\r\n*   `tf.lite`:\r\n    *   The LiteRT [repo](https://github.com/google-ai-edge/LiteRT) is live (see [announcement](https://developers.googleblog.com/en/tensorflow-lite-is-now-litert/)), which means that in the coming months there will be changes to the development experience for TFLite. The TF Lite Runtime source will be moved later this year, and sometime after that we will start accepting contributions through that repo.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.data`\r\n    * Add optional `synchronous` argument to `map`, to specify that the `map` should run synchronously, as opposed to be parallelizable when `options.experimental_optimization.map_parallelization=True`. This saves memory compared to setting `num_parallel_calls=1`.\r\n    * Add optional `use_unbounded_threadpool` argument to `map`, to specify that the `map` should use an unbounded threadpool instead of the default pool that is based on the number of cores on the machine. This can improve throughput for map functions which perform IO or otherwise release the CPU.\r\n    * Add [`tf.data.experimental.get_model_proto`](https://www.tensorflow.org/api_docs/python/tf/data/experimental/get_model_proto) to allow users to peek into the analytical model inside of a dataset iterator.\r\n\r\n* `tf.lite`\r\n    * `Dequantize` op supports `TensorType_INT4`.\r\n        * This change includes per-channel dequantization.\r\n    * Add support for `stablehlo.composite`.\r\n    * `EmbeddingLookup` op supports per-channel quantization and `TensorType_INT4` values.\r\n    * `FullyConnected` op supports `TensorType_INT16` activation and `TensorType_Int4` weight per-channel quantization.\r\n\r\n* `tf.tensor_scatter_update`, `tf.tensor_scatter_add` and of other reduce types.\r\n    * Support `bad_indices_policy`.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAkhil Goel, akhilgoe, Alexander Pivovarov, Amir Samani, Andrew Goodbody, Andrey Portnoy, Anthony Platanios, bernardoArcari, Brett Taylor, buptzyb, Chao, Christian Clauss, Cocoa, Daniil Kutz, Darya Parygina, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, Elfie Guo, eukub, Faijul Amin, flyingcat, Fr\u00e9d\u00e9ric Bastien, ganyu.08, Georg Stefan Schmid, Grigory Reznikov, Harsha H S, Harshit Monish, Heiner, Ilia Sergachev, Jan, Jane Liu, Jaroslav Sevcik, Kaixi Hou, Kanvi Khanna, Kristof Maar, Krist\u00f3f Ma\u00e1r, LakshmiKalaKadali, Lbertho-Gpsw, lingzhi98, MarcoFalke, Masahiro Hiramori, Mmakevic-Amd, mraunak, Nobuo Tsukamoto, Notheisz57, Olli Lupton, Pearu Peterson, pemeliya, Peyara Nando, Philipp Hack, Phuong Nguyen, Pol Dellaiera, Rahul Batra, Ruturaj Vaidya, sachinmuradi, Sergey Kozub, Shanbin Ke, Sheng Yang, shengyu, Shraiysh, Shu Wang, Surya, sushreebarsa, Swatheesh-Mcw, syzygial, Tai Ly, terryysun, tilakrayal, Tj Xu, Trevor Morris, Tzung-Han Juang, wenchenvincent, wondertx, Xuefei Jiang, Ye Huang, Yimei Sun, Yunlong Liu, Zahid Iqbal, Zhan Lu, Zoranjovanovic-Ns, Zuri Obozuwa", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.18.0-rc2", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.18.0-rc2", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.18.0-rc2", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/180289063", "release_id": 180289063, "date_created": "2024-10-10T21:39:34Z", "date_published": "2024-10-16T18:23:00Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/178792855", "tag": "v2.18.0-rc1", "name": "TensorFlow 2.18.0-rc1", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.18.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `tf.lite`\r\n    * C API:\r\n      * An optional, fourth parameter was added `TfLiteOperatorCreate` as a step forward towards a cleaner API for `TfLiteOperator`. Function `TfLiteOperatorCreate` was added recently, in TensorFlow Lite version 2.17.0, released on 7/11/2024, and we do not expect there will be much code using this function yet. Any code breakages can be easily resolved by passing nullptr as the new, 4th parameter.\r\n    * SignatureRunner is now supported for models with no signatures.\r\n\r\n* TensorRT support is disabled in CUDA builds for code health improvement.\r\n\r\n* Hermetic CUDA support is added.\r\n\r\n  Hermetic CUDA uses a specific downloadable version of CUDA instead of the user\u2019s locally installed CUDA. Bazel will download CUDA, CUDNN and NCCL distributions, and then use CUDA libraries and tools as dependencies in various Bazel targets. This enables more reproducible builds for Google ML projects and supported CUDA versions. \r\n\r\n### Known Caveats\r\n\r\n### Major Features and Improvements\r\n\r\n* TensorFlow now supports and is compiled with NumPy 2.0 by default. Please see the [NumPy 2 release notes](https://numpy.org/doc/stable/release/2.0.0-notes.html) and the [NumPy 2 migration guide](https://numpy.org/devdocs/numpy_2_0_migration_guide.html#numpy-2-migration-guide).\r\n   * Note that NumPy's type promotion rules have been changed(See [NEP 50](https://numpy.org/neps/nep-0050-scalar-promotion.html#nep50)for details). This may change the precision at which computations happen, leading either to type errors or to numerical changes to results.\r\n   * Tensorflow will continue to support NumPy 1.26 until 2025, aligning with community standard deprecation timeline [here](https://scientific-python.org/specs/spec-0000/).\r\n*   `tf.lite`:\r\n    *   The LiteRT [repo](https://github.com/google-ai-edge/LiteRT) is live (see [announcement](https://developers.googleblog.com/en/tensorflow-lite-is-now-litert/)), which means that in the coming months there will be changes to the development experience for TFLite. The TF Lite Runtime source will be moved later this year, and sometime after that we will start accepting contributions through that repo.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.data`\r\n    * Add optional `synchronous` argument to `map`, to specify that the `map` should run synchronously, as opposed to be parallelizable when `options.experimental_optimization.map_parallelization=True`. This saves memory compared to setting `num_parallel_calls=1`.\r\n    * Add optional `use_unbounded_threadpool` argument to `map`, to specify that the `map` should use an unbounded threadpool instead of the default pool that is based on the number of cores on the machine. This can improve throughput for map functions which perform IO or otherwise release the CPU.\r\n    * Add [`tf.data.experimental.get_model_proto`](https://www.tensorflow.org/api_docs/python/tf/data/experimental/get_model_proto) to allow users to peek into the analytical model inside of a dataset iterator.\r\n\r\n* `tf.lite`\r\n    * `Dequantize` op supports `TensorType_INT4`.\r\n        * This change includes per-channel dequantization.\r\n    * Add support for `stablehlo.composite`.\r\n    * `EmbeddingLookup` op supports per-channel quantization and `TensorType_INT4` values.\r\n    * `FullyConnected` op supports `TensorType_INT16` activation and `TensorType_Int4` weight per-channel quantization.\r\n\r\n* `tf.tensor_scatter_update`, `tf.tensor_scatter_add` and of other reduce types.\r\n    * Support `bad_indices_policy`.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAkhil Goel, akhilgoe, Alexander Pivovarov, Amir Samani, Andrew Goodbody, Andrey Portnoy, Anthony Platanios, bernardoArcari, Brett Taylor, buptzyb, Chao, Christian Clauss, Cocoa, Daniil Kutz, Darya Parygina, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, Elfie Guo, eukub, Faijul Amin, flyingcat, Fr\u00e9d\u00e9ric Bastien, ganyu.08, Georg Stefan Schmid, Grigory Reznikov, Harsha H S, Harshit Monish, Heiner, Ilia Sergachev, Jan, Jane Liu, Jaroslav Sevcik, Kaixi Hou, Kanvi Khanna, Kristof Maar, Krist\u00f3f Ma\u00e1r, LakshmiKalaKadali, Lbertho-Gpsw, lingzhi98, MarcoFalke, Masahiro Hiramori, Mmakevic-Amd, mraunak, Nobuo Tsukamoto, Notheisz57, Olli Lupton, Pearu Peterson, pemeliya, Peyara Nando, Philipp Hack, Phuong Nguyen, Pol Dellaiera, Rahul Batra, Ruturaj Vaidya, sachinmuradi, Sergey Kozub, Shanbin Ke, Sheng Yang, shengyu, Shraiysh, Shu Wang, Surya, sushreebarsa, Swatheesh-Mcw, syzygial, Tai Ly, terryysun, tilakrayal, Tj Xu, Trevor Morris, Tzung-Han Juang, wenchenvincent, wondertx, Xuefei Jiang, Ye Huang, Yimei Sun, Yunlong Liu, Zahid Iqbal, Zhan Lu, Zoranjovanovic-Ns, Zuri Obozuwa", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.18.0-rc1", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.18.0-rc1", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.18.0-rc1", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/178792855", "release_id": 178792855, "date_created": "2024-10-03T20:49:39Z", "date_published": "2024-10-07T23:56:35Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/177654529", "tag": "v2.18.0-rc0", "name": "TensorFlow 2.18.0-rc0", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.18.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `tf.lite`\r\n    * C API:\r\n      * An optional, fourth parameter was added `TfLiteOperatorCreate` as a step forward towards a cleaner API for `TfLiteOperator`. Function `TfLiteOperatorCreate` was added recently, in TensorFlow Lite version 2.17.0, released on 7/11/2024, and we do not expect there will be much code using this function yet. Any code breakages can be easily resolved by passing nullptr as the new, 4th parameter.\r\n    * SignatureRunner is now supported for models with no signatures.\r\n\r\n* TensorRT support is disabled in CUDA builds for code health improvement.\r\n\r\n* Hermetic CUDA support is added.\r\n\r\n  Hermetic CUDA uses a specific downloadable version of CUDA instead of the user\u2019s locally installed CUDA. Bazel will download CUDA, CUDNN and NCCL distributions, and then use CUDA libraries and tools as dependencies in various Bazel targets. This enables more reproducible builds for Google ML projects and supported CUDA versions. \r\n\r\n### Known Caveats\r\n\r\n### Major Features and Improvements\r\n\r\n* TensorFlow now supports and is compiled with NumPy 2.0 by default. Please see the [NumPy 2 release notes](https://numpy.org/doc/stable/release/2.0.0-notes.html) and the [NumPy 2 migration guide](https://numpy.org/devdocs/numpy_2_0_migration_guide.html#numpy-2-migration-guide).\r\n   * Note that NumPy's type promotion rules have been changed(See [NEP 50](https://numpy.org/neps/nep-0050-scalar-promotion.html#nep50)for details). This may change the precision at which computations happen, leading either to type errors or to numerical changes to results.\r\n   * Tensorflow will continue to support NumPy 1.26 until 2025, aligning with community standard deprecation timeline [here](https://scientific-python.org/specs/spec-0000/).\r\n*   `tf.lite`:\r\n    *   The LiteRT [repo](https://github.com/google-ai-edge/LiteRT) is live (see [announcement](https://developers.googleblog.com/en/tensorflow-lite-is-now-litert/)), which means that in the coming months there will be changes to the development experience for TFLite. The TF Lite Runtime source will be moved later this year, and sometime after that we will start accepting contributions through that repo.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.data`\r\n    * Add optional `synchronous` argument to `map`, to specify that the `map` should run synchronously, as opposed to be parallelizable when `options.experimental_optimization.map_parallelization=True`. This saves memory compared to setting `num_parallel_calls=1`.\r\n    * Add optional `use_unbounded_threadpool` argument to `map`, to specify that the `map` should use an unbounded threadpool instead of the default pool that is based on the number of cores on the machine. This can improve throughput for map functions which perform IO or otherwise release the CPU.\r\n    * Add [`tf.data.experimental.get_model_proto`](https://www.tensorflow.org/api_docs/python/tf/data/experimental/get_model_proto) to allow users to peek into the analytical model inside of a dataset iterator.\r\n\r\n* `tf.lite`\r\n    * `Dequantize` op supports `TensorType_INT4`.\r\n        * This change includes per-channel dequantization.\r\n    * Add support for `stablehlo.composite`.\r\n    * `EmbeddingLookup` op supports per-channel quantization and `TensorType_INT4` values.\r\n    * `FullyConnected` op supports `TensorType_INT16` activation and `TensorType_Int4` weight per-channel quantization.\r\n\r\n* `tf.tensor_scatter_update`, `tf.tensor_scatter_add` and of other reduce types.\r\n    * Support `bad_indices_policy`.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAkhil Goel, akhilgoe, Alexander Pivovarov, Amir Samani, Andrew Goodbody, Andrey Portnoy, Anthony Platanios, bernardoArcari, Brett Taylor, buptzyb, Chao, Christian Clauss, Cocoa, Daniil Kutz, Darya Parygina, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, Elfie Guo, eukub, Faijul Amin, flyingcat, Fr\u00e9d\u00e9ric Bastien, ganyu.08, Georg Stefan Schmid, Grigory Reznikov, Harsha H S, Harshit Monish, Heiner, Ilia Sergachev, Jan, Jane Liu, Jaroslav Sevcik, Kaixi Hou, Kanvi Khanna, Kristof Maar, Krist\u00f3f Ma\u00e1r, LakshmiKalaKadali, Lbertho-Gpsw, lingzhi98, MarcoFalke, Masahiro Hiramori, Mmakevic-Amd, mraunak, Nobuo Tsukamoto, Notheisz57, Olli Lupton, Pearu Peterson, pemeliya, Peyara Nando, Philipp Hack, Phuong Nguyen, Pol Dellaiera, Rahul Batra, Ruturaj Vaidya, sachinmuradi, Sergey Kozub, Shanbin Ke, Sheng Yang, shengyu, Shraiysh, Shu Wang, Surya, sushreebarsa, Swatheesh-Mcw, syzygial, Tai Ly, terryysun, tilakrayal, Tj Xu, Trevor Morris, Tzung-Han Juang, wenchenvincent, wondertx, Xuefei Jiang, Ye Huang, Yimei Sun, Yunlong Liu, Zahid Iqbal, Zhan Lu, Zoranjovanovic-Ns, Zuri Obozuwa", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.18.0-rc0", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.18.0-rc0", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.18.0-rc0", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/177654529", "release_id": 177654529, "date_created": "2024-09-26T22:11:03Z", "date_published": "2024-09-30T18:05:31Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/165041338", "tag": "v2.17.0", "name": "TensorFlow 2.17.0", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.17.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* GPU\r\n    * Support for NVIDIA GPUs with compute capability 5.x (Maxwell generation) has been removed from TF binary distributions (Python wheels).\r\n\r\n### Major Features and Improvements\r\n\r\n*   Add `is_cpu_target_available`, which indicates whether or not TensorFlow was built with support for a given CPU target. This can be useful for skipping target-specific tests if a target is not supported.\r\n\r\n*   `tf.data`\r\n    * Support `data.experimental.distribued_save`. `distribued_save` uses tf.data service (https://www.tensorflow.org/api_docs/python/tf/data/experimental/service) to write distributed dataset snapshots. The call is non-blocking and returns without waiting for the snapshot to finish. Setting `wait=True` to `tf.data.Dataset.load` allows the snapshots to be read while they are being written.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* GPU\r\n    * Support for NVIDIA GPUs with compute capability 8.9 (e.g. L4 & L40) has been added to TF binary distributions (Python wheels).\r\n* Replace `DebuggerOptions` of TensorFlow Quantizer, and migrate to `DebuggerConfig` of StableHLO Quantizer.\r\n* Add TensorFlow to StableHLO converter to TensorFlow pip package.\r\n* TensorRT support: this is the last release supporting TensorRT. It will be removed in the next release.\r\n* NumPy 2.0 support: TensorFlow is going to support NumPy 2.0 in the next release. It may break some edge cases of TensorFlow API usage.\r\n\r\n* `tf.lite`\r\n    * Quantization for `FullyConnected` layer is switched from per-tensor to per-channel scales for dynamic range quantization use case (`float32` inputs / outputs and `int8` weights). The change enables new quantization schema globally in the converter and inference engine. The new behaviour can be disabled via experimental flag `converter._experimental_disable_per_channel_quantization_for_dense_layers = True`.\r\n    * C API:\r\n        * The experimental `TfLiteRegistrationExternal` type has been renamed as `TfLiteOperator`, and likewise for the corresponding API functions.\r\n    * The Python TF Lite Interpreter bindings now have an option `experimental_default_delegate_latest_features` to enable all default delegate features.\r\n    * Flatbuffer version update:\r\n        * `GetTemporaryPointer()` bug fixed.\r\n\r\n* `tf.data`\r\n    * Add `wait` to `tf.data.Dataset.load`. If `True`, for snapshots written with `distributed_save`, it reads the snapshot while it is being written. For snapshots written with regular `save`, it waits for the snapshot until it's finished. The default is `False` for backward compatibility. Users of `distributed_save` are recommended to set it to `True`.\r\n\r\n* `tf.tpu.experimental.embedding.TPUEmbeddingV2`\r\n    * Add `compute_sparse_core_stats` for sparse core users to profile the  data with this API to get the `max_ids` and `max_unique_ids`. These numbers will be needed to configure the sparse core embedding mid level api.\r\n    * Remove the `preprocess_features` method since that's no longer needed.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAbdulaziz Aloqeely, Ahmad-M-Al-Khateeb, Akhil Goel, akhilgoe, Alexander Pivovarov, Amir Samani, Andrew Goodbody, Andrey Portnoy, Ashiq Imran, Ben Olson, Chao, Chase Riley Roberts, Clemens Giuliani, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, ekuznetsov139, Elfie Guo, Faijul Amin, Gauri1 Deshpande, Georg Stefan Schmid, guozhong.zhuang, Hao Wu, Haoyu (Daniel), Harsha H S, Harsha Hs, Harshit Monish, Ilia Sergachev, Jane Liu, Jaroslav Sevcik, Jinzhe Zeng, Justin Dhillon, Kaixi Hou, Kanvi Khanna, LakshmiKalaKadali, Learning-To-Play, lingzhi98, Lu Teng, Matt Bahr, Max Ren, Meekail Zain, Mmakevic-Amd, mraunak, neverlva, nhatle, Nicola Ferralis, Olli Lupton, Om Thakkar, orangekame3, ourfor, pateldeev, Pearu Peterson, pemeliya, Peng Sun, Philipp Hack, Pratik Joshi, prrathi, rahulbatra85, Raunak, redwrasse, Robert Kalmar, Robin Zhang, RoboSchmied, Ruturaj Vaidya, sachinmuradi, Shawn Wang, Sheng Yang, Surya, Thibaut Goetghebuer-Planchon, Thomas Preud'Homme, tilakrayal, Tj Xu, Trevor Morris, wenchenvincent, Yimei Sun, zahiqbal, Zhu Jianjiang, Zoranjovanovic-Ns", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.17.0", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.17.0", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.17.0", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/165041338", "release_id": 165041338, "date_created": "2024-07-09T22:13:22Z", "date_published": "2024-07-11T16:28:57Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/163442906", "tag": "v2.17.0-rc1", "name": "TensorFlow 2.17.0-rc1", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.17.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* GPU\r\n    * Support for NVIDIA GPUs with compute capability 5.x (Maxwell generation) has been removed from TF binary distributions (Python wheels).\r\n\r\n### Major Features and Improvements\r\n\r\n*   Add `is_cpu_target_available`, which indicates whether or not TensorFlow was built with support for a given CPU target. This can be useful for skipping target-specific tests if a target is not supported.\r\n\r\n*   `tf.data`\r\n    * Support `data.experimental.distribued_save`. `distribued_save` uses tf.data service (https://www.tensorflow.org/api_docs/python/tf/data/experimental/service) to write distributed dataset snapshots. The call is non-blocking and returns without waiting for the snapshot to finish. Setting `wait=True` to `tf.data.Dataset.load` allows the snapshots to be read while they are being written.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* GPU\r\n    * Support for NVIDIA GPUs with compute capability 8.9 (e.g. L4 & L40) has been added to TF binary distributions (Python wheels).\r\n* Replace `DebuggerOptions` of TensorFlow Quantizer, and migrate to `DebuggerConfig` of StableHLO Quantizer.\r\n* Add TensorFlow to StableHLO converter to TensorFlow pip package.\r\n* TensorRT support: this is the last release supporting TensorRT. It will be removed in the next release.\r\n* NumPy 2.0 support: TensorFlow is going to support NumPy 2.0 in the next release. It may break some edge cases of TensorFlow API usage.\r\n\r\n* `tf.lite`\r\n    * Quantization for `FullyConnected` layer is switched from per-tensor to per-channel scales for dynamic range quantization use case (`float32` inputs / outputs and `int8` weights). The change enables new quantization schema globally in the converter and inference engine. The new behaviour can be disabled via experimental flag `converter._experimental_disable_per_channel_quantization_for_dense_layers = True`.\r\n    * C API:\r\n        * The experimental `TfLiteRegistrationExternal` type has been renamed as `TfLiteOperator`, and likewise for the corresponding API functions.\r\n    * The Python TF Lite Interpreter bindings now have an option `experimental_default_delegate_latest_features` to enable all default delegate features.\r\n    * Flatbuffer version update:\r\n        * `GetTemporaryPointer()` bug fixed.\r\n\r\n* `tf.data`\r\n    * Add `wait` to `tf.data.Dataset.load`. If `True`, for snapshots written with `distributed_save`, it reads the snapshot while it is being written. For snapshots written with regular `save`, it waits for the snapshot until it's finished. The default is `False` for backward compatibility. Users of `distributed_save` are recommended to set it to `True`.\r\n\r\n* `tf.tpu.experimental.embedding.TPUEmbeddingV2`\r\n    * Add `compute_sparse_core_stats` for sparse core users to profile the  data with this API to get the `max_ids` and `max_unique_ids`. These numbers will be needed to configure the sparse core embedding mid level api.\r\n    * Remove the `preprocess_features` method since that's no longer needed.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAbdulaziz Aloqeely, Ahmad-M-Al-Khateeb, Akhil Goel, akhilgoe, Alexander Pivovarov, Amir Samani, Andrew Goodbody, Andrey Portnoy, Ashiq Imran, Ben Olson, Chao, Chase Riley Roberts, Clemens Giuliani, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, ekuznetsov139, Elfie Guo, Faijul Amin, Gauri1 Deshpande, Georg Stefan Schmid, guozhong.zhuang, Hao Wu, Haoyu (Daniel), Harsha H S, Harsha Hs, Harshit Monish, Ilia Sergachev, Jane Liu, Jaroslav Sevcik, Jinzhe Zeng, Justin Dhillon, Kaixi Hou, Kanvi Khanna, LakshmiKalaKadali, Learning-To-Play, lingzhi98, Lu Teng, Matt Bahr, Max Ren, Meekail Zain, Mmakevic-Amd, mraunak, neverlva, nhatle, Nicola Ferralis, Olli Lupton, Om Thakkar, orangekame3, ourfor, pateldeev, Pearu Peterson, pemeliya, Peng Sun, Philipp Hack, Pratik Joshi, prrathi, rahulbatra85, Raunak, redwrasse, Robert Kalmar, Robin Zhang, RoboSchmied, Ruturaj Vaidya, sachinmuradi, Shawn Wang, Sheng Yang, Surya, Thibaut Goetghebuer-Planchon, Thomas Preud'Homme, tilakrayal, Tj Xu, Trevor Morris, wenchenvincent, Yimei Sun, zahiqbal, Zhu Jianjiang, Zoranjovanovic-Ns", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.17.0-rc1", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.17.0-rc1", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.17.0-rc1", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/163442906", "release_id": 163442906, "date_created": "2024-06-28T17:52:50Z", "date_published": "2024-07-02T04:17:28Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/163045699", "tag": "v2.16.2", "name": "TensorFlow 2.16.2", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.16.2\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*  Fixed: Incorrect dependency metadata in TensorFlow Python packages causing installation failures with certain package managers such as Poetry.", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.16.2", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.16.2", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.16.2", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/163045699", "release_id": 163045699, "date_created": "2024-06-25T15:45:39Z", "date_published": "2024-06-28T18:56:30Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/161128135", "tag": "v2.17.0-rc0", "name": "TensorFlow 2.17.0-rc0", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.17.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* GPU\r\n    * Support for NVIDIA GPUs with compute capability 5.x (Maxwell generation) has been removed from TF binary distributions (Python wheels).\r\n\r\n### Major Features and Improvements\r\n\r\n*   Add `is_cpu_target_available`, which indicates whether or not TensorFlow was built with support for a given CPU target. This can be useful for skipping target-specific tests if a target is not supported.\r\n\r\n*   `tf.data`\r\n    * Support `data.experimental.distribued_save`. `distribued_save` uses tf.data service (https://www.tensorflow.org/api_docs/python/tf/data/experimental/service) to write distributed dataset snapshots. The call is non-blocking and returns without waiting for the snapshot to finish. Setting `wait=True` to `tf.data.Dataset.load` allows the snapshots to be read while they are being written.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* GPU\r\n    * Support for NVIDIA GPUs with compute capability 8.9 (e.g. L4 & L40) has been added to TF binary distributions (Python wheels).\r\n* Replace `DebuggerOptions` of TensorFlow Quantizer, and migrate to `DebuggerConfig` of StableHLO Quantizer.\r\n* Add TensorFlow to StableHLO converter to TensorFlow pip package.\r\n* TensorRT support: this is the last release supporting TensorRT. It will be removed in the next release.\r\n* NumPy 2.0 support: TensorFlow is going to support NumPy 2.0 in the next release. It may break some edge cases of TensorFlow API usage.\r\n\r\n* `tf.lite`\r\n    * Quantization for `FullyConnected` layer is switched from per-tensor to per-channel scales for dynamic range quantization use case (`float32` inputs / outputs and `int8` weights). The change enables new quantization schema globally in the converter and inference engine. The new behaviour can be disabled via experimental flag `converter._experimental_disable_per_channel_quantization_for_dense_layers = True`.\r\n    * C API:\r\n        * The experimental `TfLiteRegistrationExternal` type has been renamed as `TfLiteOperator`, and likewise for the corresponding API functions.\r\n    * The Python TF Lite Interpreter bindings now have an option `experimental_default_delegate_latest_features` to enable all default delegate features.\r\n    * Flatbuffer version update:\r\n        * `GetTemporaryPointer()` bug fixed.\r\n\r\n* `tf.data`\r\n    * Add `wait` to `tf.data.Dataset.load`. If `True`, for snapshots written with `distributed_save`, it reads the snapshot while it is being written. For snapshots written with regular `save`, it waits for the snapshot until it's finished. The default is `False` for backward compatibility. Users of `distributed_save` are recommended to set it to `True`.\r\n\r\n* `tf.tpu.experimental.embedding.TPUEmbeddingV2`\r\n    * Add `compute_sparse_core_stats` for sparse core users to profile the  data with this API to get the `max_ids` and `max_unique_ids`. These numbers will be needed to configure the sparse core embedding mid level api.\r\n    * Remove the `preprocess_features` method since that's no longer needed.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAbdulaziz Aloqeely, Ahmad-M-Al-Khateeb, Akhil Goel, akhilgoe, Alexander Pivovarov, Amir Samani, Andrew Goodbody, Andrey Portnoy, Ashiq Imran, Ben Olson, Chao, Chase Riley Roberts, Clemens Giuliani, dependabot[bot], Dimitris Vardoulakis, Dragan Mladjenovic, ekuznetsov139, Elfie Guo, Faijul Amin, Gauri1 Deshpande, Georg Stefan Schmid, guozhong.zhuang, Hao Wu, Haoyu (Daniel), Harsha H S, Harsha Hs, Harshit Monish, Ilia Sergachev, Jane Liu, Jaroslav Sevcik, Jinzhe Zeng, Justin Dhillon, Kaixi Hou, Kanvi Khanna, LakshmiKalaKadali, Learning-To-Play, lingzhi98, Lu Teng, Matt Bahr, Max Ren, Meekail Zain, Mmakevic-Amd, mraunak, neverlva, nhatle, Nicola Ferralis, Olli Lupton, Om Thakkar, orangekame3, ourfor, pateldeev, Pearu Peterson, pemeliya, Peng Sun, Philipp Hack, Pratik Joshi, prrathi, rahulbatra85, Raunak, redwrasse, Robert Kalmar, Robin Zhang, RoboSchmied, Ruturaj Vaidya, sachinmuradi, Shawn Wang, Sheng Yang, Surya, Thibaut Goetghebuer-Planchon, Thomas Preud'Homme, tilakrayal, Tj Xu, Trevor Morris, wenchenvincent, Yimei Sun, zahiqbal, Zhu Jianjiang, Zoranjovanovic-Ns", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.17.0-rc0", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.17.0-rc0", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.17.0-rc0", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/161128135", "release_id": 161128135, "date_created": "2024-06-12T16:54:11Z", "date_published": "2024-06-18T20:41:46Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/145540492", "tag": "v2.15.1", "name": "TensorFlow 2.15.1", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.15.1\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   `ml_dtypes` runtime dependency is updated to `0.3.1` to fix package conflict issues", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.15.1", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.15.1", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.15.1", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/145540492", "release_id": 145540492, "date_created": "2024-03-08T02:19:10Z", "date_published": "2024-03-08T19:09:29Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/145321997", "tag": "v2.16.1", "name": "TensorFlow 2.16.1", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.16.1\r\n\r\n## TensorFlow\r\n\r\n*   TensorFlow Windows Build:\r\n    *   Clang is now the default compiler to build TensorFlow CPU wheels on the Windows Platform starting with this release. The currently supported version is LLVM/clang 17. The official Wheels-published on PyPI will be based on Clang; however, users retain the option to build wheels using the MSVC compiler following the steps mentioned in https://www.tensorflow.org/install/source_windows as has been the case before\r\n *   TensorFlow 2.16 will be released as TF 2.16.1 (instead of 2.16.0). The patch release will be done as 2.16.2 during the next release cycle.\r\n\r\n### Breaking Changes\r\n\r\n*   `tf.summary.trace_on` now takes a `profiler_outdir` argument. This must be set if `profiler` arg is set to `True`.\r\n    *   `tf.summary.trace_export`'s `profiler_outdir` arg is now a no-op. Enabling the profiler now requires setting `profiler_outdir` in `trace_on`.\r\n\r\n*   `tf.estimator`\r\n    *   The tf.estimator API is removed.\r\n    *   To continue using tf.estimator, you will need to use TF 2.15 or an earlier version.\r\n\r\n*   Keras 3.0 will be the default Keras version. You may need to update your script to use Keras 3.0.\r\n\r\n*   Please refer to the new Keras documentation for Keras 3.0  (https://keras.io/keras_3).\r\n\r\n*   To continue using Keras 2.0, do the following.\r\n\r\n*   1.  Install `tf-keras` via `pip install tf-keras~=2.16`\r\n\r\n    1.  To switch `tf.keras` to use Keras 2 (`tf-keras`), set the environment variable `TF_USE_LEGACY_KERAS=1` directly or in your python program with `import os;os.environ[\"TF_USE_LEGACY_KERAS\"]=\"1\"`. Please note that this will set it for all packages in your Python runtime program\r\n\r\n    1.  Change the keras import: replace `import tensorflow.keras as keras` or `import keras` with `import tf_keras as keras`. Update any `tf.keras` references to `keras`.\r\n       \r\n* **Apple Silicon users:** If you previously installed TensorFlow using `pip install tensorflow-macos`, please update your installation method. Use `pip install tensorflow` from now on.\r\n* **Mac x86 users:** Mac x86 builds are being deprecated and will no longer be\r\n  released as a Pip package from TF 2.17 onwards. \r\n\r\n### Known Caveats\r\n\r\n*  Full aarch64 Linux and Arm64 macOS wheels are now published to the `tensorflow` pypi repository and no longer redirect to a separate package.\r\n\r\n### Major Features and Improvements\r\n\r\n*  Support for Python 3.12 has been added.\r\n*  [tensorflow-tpu](https://pypi.org/project/tensorflow-tpu/) package is now available for easier TPU based installs.\r\n*  TensorFlow pip packages are now built with CUDA 12.3 and cuDNN 8.9.7\r\n*  Added experimental support for float16 auto-mixed precision using the new\r\n   AMX-FP16 instruction set on X86 CPUs.\r\n\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.lite`\r\n    * Added support for `stablehlo.gather`.\r\n    * Added support for `stablehlo.add`.\r\n    * Added support for `stablehlo.multiply`.\r\n    * Added support for `stablehlo.maximum`.\r\n    * Added support for `stablehlo.minimum`.\r\n    * Added boolean parameter support for `tfl.gather_nd`.\r\n    * C API:\r\n        * New API functions:\r\n            * `tensorflow/lite/c/c_api_experimental.h`:\r\n                * `TfLiteInterpreterGetVariableTensorCount`\r\n                * `TfLiteInterpreterGetVariableTensor`\r\n                * `TfLiteInterpreterGetBufferHandle`\r\n                * `TfLiteInterpreterSetBufferHandle`\r\n            * `tensorflow/lite/c/c_api_opaque.h`:\r\n                * `TfLiteOpaqueTensorSetAllocationTypeToDynamic`\r\n        * API functions promoted from experimental to stable:\r\n            * `tensorflow/lite/c/c_api.h`:\r\n                * `TfLiteInterpreterOptionsEnableCancellation`\r\n                * `TfLiteInterpreterCancel`\r\n    * C++ API:\r\n        * New virtual methods in the `tflite::SimpleDelegateInterface` class in `tensorflow/lite/delegates/utils/simple_delegate.h`,\r\n          and likewise in the `tflite::SimpleOpaqueDelegateInterface` class in `tensorflow/lite/delegates/utils/simple_opaque_delegate.h`:\r\n            * `CopyFromBufferHandle`\r\n            * `CopyToBufferHandle`\r\n            * `FreeBufferHandle`\r\n\r\n* `tf.train.CheckpointOptions` and `tf.saved_model.SaveOptions`\r\n    * These now take in a new argument called `experimental_sharding_callback`. This is a callback function wrapper that will be executed to determine how tensors will be split into shards when the saver writes the checkpoint shards to disk. `tf.train.experimental.ShardByTaskPolicy` is the default sharding behavior, but `tf.train.experimental.MaxShardSizePolicy` can be used to shard the checkpoint with a maximum shard file size. Users with advanced use cases can also write their own custom `tf.train.experimental.ShardingCallback`s.\r\n\r\n* `tf.train.CheckpointOptions`\r\n    * Added `experimental_skip_slot_variables` (a boolean option) to skip restoring of optimizer slot variables in a checkpoint.\r\n\r\n*   `tf.saved_model.SaveOptions`\r\n\r\n    * `SaveOptions` now takes a new argument called `experimental_debug_stripper`. When enabled, this strips the debug nodes from both the node defs and the function defs of the graph. Note that this currently only strips the `Assert` nodes from the graph and converts them into `NoOp`s instead.\r\n\r\n## Keras\r\n\r\n*  `keras.layers.experimental.DynamicEmbedding`\r\n    * Added `DynamicEmbedding` Keras layer\r\n    * Added 'UpdateEmbeddingCallback`\r\n    * `DynamicEmbedding` layer allows for the continuous updating of the vocabulary and embeddings during the training process. This layer maintains a hash table to track the most up-to-date vocabulary based on the inputs received by the layer and the eviction policy. When this layer is used with an `UpdateEmbeddingCallback`, which is a time-based callback, the vocabulary lookup tensor is updated at the time interval set in the `UpdateEmbeddingCallback` based on the most up-to-date vocabulary hash table maintained by the layer. If this layer is not used in conjunction with `UpdateEmbeddingCallback` the behavior of the layer would be same as `keras.layers.Embedding`.\r\n*  `keras.optimizers.Adam`\r\n    * Added the option to set adaptive epsilon to match implementations with Jax and PyTorch equivalents.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAakar Dwivedi, Akhil Goel, Alexander Grund, Alexander Pivovarov, Andrew Goodbody, Andrey Portnoy, Aneta Kaczy\u0144ska, AnetaKaczynska, ArkadebMisra, Ashiq Imran, Ayan Moitra, Ben Barsdell, Ben Creech, Benedikt Lorch, Bhavani Subramanian, Bianca Van Schaik, Chao, Chase Riley Roberts, Connor Flanagan, David Hall, David Svantesson, David Svantesson-Yeung, dependabot[bot], Dr. Christoph Mittendorf, Dragan Mladjenovic, ekuznetsov139, Eli Kobrin, Eugene Kuznetsov, Faijul Amin, Fr\u00e9d\u00e9ric Bastien, fsx950223, gaoyiyeah, Gauri1 Deshpande, Gautam, Giulio C.N, guozhong.zhuang, Harshit Monish, James Hilliard, Jane Liu, Jaroslav Sevcik, jeffhataws, Jerome Massot, Jerry Ge, jglaser, jmaksymc, Kaixi Hou, kamaljeeti, Kamil Magierski, Koan-Sin Tan, lingzhi98, looi, Mahmoud Abuzaina, Malik Shahzad Muzaffar, Meekail Zain, mraunak, Neil Girdhar, Olli Lupton, Om Thakkar, Paul Strawder, Pavel Emeliyanenko, Pearu Peterson, pemeliya, Philipp Hack, Pierluigi Urru, Pratik Joshi, radekzc, Rafik Saliev, Ragu, Rahul Batra, rahulbatra85, Raunak, redwrasse, Rodrigo Gomes, ronaghy, Sachin Muradi, Shanbin Ke, shawnwang18, Sheng Yang, Shivam Mishra, Shu Wang, Strawder, Paul, Surya, sushreebarsa, Tai Ly, talyz, Thibaut Goetghebuer-Planchon, Tj Xu, Tom Allsop, Trevor Morris, Varghese, Jojimon, weihanmines, wenchenvincent, Wenjie Zheng, Who Who Who, Yasir Ashfaq, yasiribmcon, Yoshio Soma, Yuanqiang Liu, Yuriy Chernyshov", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.16.1", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.16.1", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.16.1", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/145321997", "release_id": 145321997, "date_created": "2024-03-06T00:30:15Z", "date_published": "2024-03-07T18:54:30Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/143419237", "tag": "v2.16.0-rc0", "name": "TensorFlow 2.16.0-rc0", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.16.0\r\n\r\n## TensorFlow\r\n\r\n*   TensorFlow Windows Build:\r\n    *   Clang is now the default compiler to build TensorFlow CPU wheels on the Windows Platform starting with this release. The currently supported version is LLVM/clang 17. The official Wheels-published on PyPI will be based on Clang; however, users retain the option to build wheels using the MSVC compiler following the steps mentioned in https://www.tensorflow.org/install/source_windows as has been the case before\r\n\r\n### Breaking Changes\r\n\r\n*   `tf.summary.trace_on` now takes a `profiler_outdir` argument. This must be set if `profiler` arg is set to `True`.\r\n    *   `tf.summary.trace_export`'s `profiler_outdir` arg is now a no-op. Enabling the profiler now requires setting `profiler_outdir` in `trace_on`.\r\n\r\n*   `tf.estimator`\r\n    *   The tf.estimator API is removed.\r\n    *   To continue using tf.estimator, you will need to use TF 2.15 or an earlier version.\r\n\r\n*   Keras 3 will be the default Keras version. You may need to update your script to use Keras 3. Please refer to the new Keras documentation for Keras 3  (https://keras.io/keras_3). To continue using Keras 2, do the following:\r\n\r\n  1.  Install `tf-keras` via `pip install tf-keras~=2.16`\r\n  2.  To switch tf.keras to use Keras 2 (tf-keras), set the environment variable `TF_USE_LEGACY_KERAS=1` directly or in your Python program by doing `import os;os.environ[\"TF_USE_LEGACY_KERAS\"]=1`. Please note that this will set it for all packages in your Python runtime program.\r\n\r\n* **Apple Silicon users:** If you previously installed TensorFlow using `pip install tensorflow-macos`, please update your installation method. Use `pip install tensorflow` from now on. Starting with TF 2.17, the `tensorflow-macos` package will no longer receive updates.\r\n\r\n### Known Caveats\r\n\r\n*  Full aarch64 Linux and Arm64 macOS wheels are now published to the `tensorflow` pypi repository and no longer redirect to a separate package.\r\n\r\n### Major Features and Improvements\r\n\r\n*  Support for Python 3.12 has been added.\r\n*  [tensorflow-tpu](https://pypi.org/project/tensorflow-tpu/) package is now available for easier TPU based installs.\r\n*  TensorFlow pip packages are now built with CUDA 12.3 and cuDNN 8.9.7\r\n\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.lite`\r\n    * Added support for `stablehlo.gather`.\r\n    * Added support for `stablehlo.add`.\r\n    * Added support for `stablehlo.multiply`.\r\n    * Added support for `stablehlo.maximum`.\r\n    * Added support for `stablehlo.minimum`.\r\n    * Added boolean parameter support for `tfl.gather_nd`.\r\n\r\n* `tf.train.CheckpointOptions` and `tf.saved_model.SaveOptions`\r\n    * These now take in a new argument called `experimental_sharding_callback`. This is a callback function wrapper that will be executed to determine how tensors will be split into shards when the saver writes the checkpoint shards to disk. `tf.train.experimental.ShardByTaskPolicy` is the default sharding behavior, but `tf.train.experimental.MaxShardSizePolicy` can be used to shard the checkpoint with a maximum shard file size. Users with advanced use cases can also write their own custom `tf.train.experimental.ShardingCallback`s.\r\n\r\n* `tf.train.CheckpointOptions`\r\n    * Added `experimental_skip_slot_variables` (a boolean option) to skip restoring of optimizer slot variables in a checkpoint.\r\n\r\n*   `tf.saved_model.SaveOptions`\r\n\r\n    * `SaveOptions` now takes a new argument called `experimental_debug_stripper`. When enabled, this strips the debug nodes from both the node defs and the function defs of the graph. Note that this currently only strips the `Assert` nodes from the graph and converts them into `NoOp`s instead.\r\n\r\n## Keras\r\n\r\n*  `keras.layers.experimental.DynamicEmbedding`\r\n    * Added `DynamicEmbedding` Keras layer\r\n    * Added 'UpdateEmbeddingCallback`\r\n    * `DynamicEmbedding` layer allows for the continuous updating of the vocabulary and embeddings during the training process. This layer maintains a hash table to track the most up-to-date vocabulary based on the inputs received by the layer and the eviction policy. When this layer is used with an `UpdateEmbeddingCallback`, which is a time-based callback, the vocabulary lookup tensor is updated at the time interval set in the `UpdateEmbeddingCallback` based on the most up-to-date vocabulary hash table maintained by the layer. If this layer is not used in conjunction with `UpdateEmbeddingCallback` the behavior of the layer would be same as `keras.layers.Embedding`.\r\n*  `keras.optimizers.Adam`\r\n    * Added the option to set adaptive epsilon to match implementations with Jax and PyTorch equivalents.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAakar Dwivedi, Akhil Goel, Alexander Grund, Alexander Pivovarov, Andrew Goodbody, Andrey Portnoy, Aneta Kaczy\u0144ska, AnetaKaczynska, ArkadebMisra, Ashiq Imran, Ayan Moitra, Ben Barsdell, Ben Creech, Benedikt Lorch, Bhavani Subramanian, Bianca Van Schaik, Chao, Chase Riley Roberts, Connor Flanagan, David Hall, David Svantesson, David Svantesson-Yeung, dependabot[bot], Dr. Christoph Mittendorf, Dragan Mladjenovic, ekuznetsov139, Eli Kobrin, Eugene Kuznetsov, Faijul Amin, Fr\u00e9d\u00e9ric Bastien, fsx950223, gaoyiyeah, Gauri1 Deshpande, Gautam, Giulio C.N, guozhong.zhuang, Harshit Monish, James Hilliard, Jane Liu, Jaroslav Sevcik, jeffhataws, Jerome Massot, Jerry Ge, jglaser, jmaksymc, Kaixi Hou, kamaljeeti, Kamil Magierski, Koan-Sin Tan, lingzhi98, looi, Mahmoud Abuzaina, Malik Shahzad Muzaffar, Meekail Zain, mraunak, Neil Girdhar, Olli Lupton, Om Thakkar, Paul Strawder, Pavel Emeliyanenko, Pearu Peterson, pemeliya, Philipp Hack, Pierluigi Urru, Pratik Joshi, radekzc, Rafik Saliev, Ragu, Rahul Batra, rahulbatra85, Raunak, redwrasse, Rodrigo Gomes, ronaghy, Sachin Muradi, Shanbin Ke, shawnwang18, Sheng Yang, Shivam Mishra, Shu Wang, Strawder, Paul, Surya, sushreebarsa, Tai Ly, talyz, Thibaut Goetghebuer-Planchon, Tj Xu, Tom Allsop, Trevor Morris, Varghese, Jojimon, weihanmines, wenchenvincent, Wenjie Zheng, Who Who Who, Yasir Ashfaq, yasiribmcon, Yoshio Soma, Yuanqiang Liu, Yuriy Chernyshov", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.16.0-rc0", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.16.0-rc0", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.16.0-rc0", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/143419237", "release_id": 143419237, "date_created": "2024-02-26T22:50:07Z", "date_published": "2024-02-26T22:54:41Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/129407950", "tag": "v2.15.0", "name": "TensorFlow 2.15.0", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.15.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `tf.types.experimental.GenericFunction` has been renamed to `tf.types.experimental.PolymorphicFunction`.\r\n\r\n### Major Features and Improvements\r\n\r\n*   [oneDNN CPU performance optimizations](https://github.com/tensorflow/community/blob/master/rfcs/20210930-enable-onednn-ops.md) Windows x64 & x86.\r\n\r\n    *   **Windows x64 & x86 packages:**\r\n        *   oneDNN optimizations are *enabled by default* on X86 CPUs\r\n    *   To explicitly enable or disable oneDNN optimizations, set the environment variable `TF_ENABLE_ONEDNN_OPTS` to `1` (enable) or `0` (disable) before running TensorFlow. To fall back to default settings, unset the environment variable.\r\n    *   oneDNN optimizations can yield slightly different numerical results compared to when oneDNN optimizations are disabled due to floating-point round-off errors from\r\n different computation approaches and orders.\r\n    *   To verify if oneDNN optimizations are on, look for a message with *\"oneDNN custom operations are on\"* in the log. If the exact phrase is not there, it means they are off.\r\n\r\n* Making the `tf.function` type system fully available:\r\n\r\n    * `tf.types.experimental.TraceType` now allows custom tf.function inputs to declare Tensor decomposition and type casting support.\r\n    * Introducing `tf.types.experimental.FunctionType` as the comprehensive representation of the signature of `tf.function` callables. It can be accessed through the `function_type` property of `tf.function`s and `ConcreteFunction`s. See the `tf.types.experimental.FunctionType` documentation for more details.\r\n\r\n* Introducing `tf.types.experimental.AtomicFunction` as the fastest way to perform TF computations in Python.\r\n\r\n    * Can be accessed through `inference_fn` property of `ConcreteFunction`s\r\n    * Does not support gradients.\r\n    * See `tf.types.experimental.AtomicFunction` documentation for how to call and use it.\r\n\r\n\r\n*   `tf.data`:\r\n\r\n    *   Moved option `warm_start` from `tf.data.experimental.OptimizationOptions` to `tf.data.Options`.\r\n\r\n*   `tf.lite`:\r\n\r\n    *   `sub_op` and `mul_op` support broadcasting up to 6 dimensions.\r\n\r\n    *  The `tflite::SignatureRunner` class, which provides support for named parameters and for multiple named computations within a single TF Lite model, is no longer considered experimental. Likewise for the following signature-related methods of `tflite::Interpreter`:\r\n\r\n       *   `tflite::Interpreter::GetSignatureRunner`\r\n       *   `tflite::Interpreter::signature_keys`\r\n       *   `tflite::Interpreter::signature_inputs`\r\n       *   `tflite::Interpreter::signature_outputs`\r\n       *   `tflite::Interpreter::input_tensor_by_signature`\r\n       *   `tflite::Interpreter::output_tensor_by_signature`\r\n\r\n    *  Similarly, the following signature runner functions in the TF Lite C API are no longer considered experimental:\r\n\r\n       *    `TfLiteInterpreterGetSignatureCount`\r\n       *    `TfLiteInterpreterGetSignatureKey`\r\n       *    `TfLiteInterpreterGetSignatureRunner`\r\n       *    `TfLiteSignatureRunnerAllocateTensors`\r\n       *    `TfLiteSignatureRunnerGetInputCount`\r\n       *    `TfLiteSignatureRunnerGetInputName`\r\n       *    `TfLiteSignatureRunnerGetInputTensor`\r\n       *    `TfLiteSignatureRunnerGetOutputCount`\r\n       *    `TfLiteSignatureRunnerGetOutputName`\r\n       *    `TfLiteSignatureRunnerGetOutputTensor`\r\n       *    `TfLiteSignatureRunnerInvoke`\r\n       *    `TfLiteSignatureRunnerResizeInputTensor`\r\n\r\n    * New C API function `TfLiteExtensionApisVersion` added to `tensorflow/lite/c/c_api.h`.\r\n\r\n    * Add int8 and int16x8 support for RSQRT operator\r\n\r\n* Android NDK r25 is supported.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   Add TensorFlow Quantizer to TensorFlow pip package.\r\n\r\n*   `tf.sparse.segment_sum` `tf.sparse.segment_mean` `tf.sparse.segment_sqrt_n` `SparseSegmentSum/Mean/SqrtN[WithNumSegments]`\r\n\r\n    *   Added `sparse_gradient` option (default=false) that makes the gradient of these functions/ops sparse (`IndexedSlices`) instead of dense (`Tensor`), using new `SparseSegmentSum/Mean/SqrtNGradV2` ops.\r\n\r\n*   `tf.nn.embedding_lookup_sparse`\r\n\r\n    *   Optimized this function for some cases by fusing internal operations.\r\n\r\n*   `tf.saved_model.SaveOptions`\r\n\r\n    *   Provided a new `experimental_skip_saver` argument which, if specified, will suppress the addition of `SavedModel`-native save and restore ops to the `SavedModel`, for cases where users already build custom save/restore ops and checkpoint formats for the model being saved, and the creation of the SavedModel-native save/restore ops simply cause longer model serialization times.\r\n\r\n* Add ops to `tensorflow.raw_ops` that were missing.\r\n\r\n* `tf.CheckpointOptions`\r\n    * It now takes in a new argument called `experimental_write_callbacks`. These are callbacks that will be executed after a saving event finishes writing the checkpoint file.\r\n\r\n* Add an option `disable_eager_executer_streaming_enqueue` to `tensorflow.ConfigProto.Experimental` to control the eager runtime's behavior around parallel remote function invocations; when set to `True`, the eager runtime will be allowed to execute multiple function invocations in parallel.\r\n\r\n* `tf.constant_initializer`\r\n    * It now takes a new argument called `support_partition`. If True, constant_initializers can create sharded variables. This is disabled by default, similar to existing behavior.\r\n\r\n* `tf.lite`\r\n    * Added support for `stablehlo.scatter`.\r\n\r\n* `tf.estimator`\r\n    * The tf.estimator API removal is in progress and will be targeted for the 2.16 release. \r\n\r\n## Keras\r\n\r\n* This will be the final release before the launch of Keras 3.0, when Keras will become multi-backend. For the compatibility page and other info, please see: https://github.com/keras-team/keras-core\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAiden Grossman, Akash Patel, Akhil Goel, Alexander Pivovarov, Andrew Goodbody, Ayan Moitra, Ben Barsdell, Ben Olson, Bhavani Subramanian, Boian Petkantchin, Bruce Lai, Chao Chen, Christian Steinmeyer, cjflan, David Korczynski, Donghak Park, Dragan Mladjenovic, Eli Kobrin, Fadi Arafeh, Feiyue Chen, Fr\u00e9d\u00e9ric Bastien, guozhong.zhuang, halseycamilla, Harshavardhan Bellamkonda, James Ward, jameshollyer, Jane Liu, johnnkp, jswag180, justkw, Kanvi Khanna, Keith Smiley, Koan-Sin Tan, Kulin Seth, Kun-Lu, kushanam, Lu Teng, mdfaijul, Mehdi Drissi, mgokulkrish, mraunak, Mustafa Uzun, Namrata Bhave, Pavel Emeliyanenko, pemeliya, Peng Sun, Philipp Hack, Pratik Joshi, Rahul Batra, Raunak, redwrasse, Saoirse Stewart, SaoirseARM, seanshpark, Shanbin Ke, Spenser Bauman, Surya, sushreebarsa, Tai Ly, Thibaut Goetghebuer-Planchon, tilakrayal, Tirumalesh, Tj Xu, Vladislav, weihanmines, Wen Chen, wenchenvincent, wenscarl, William Muir, Zhoulong, Jiang", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.15.0", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.15.0", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.15.0", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/129407950", "release_id": 129407950, "date_created": "2023-11-10T21:16:52Z", "date_published": "2023-11-14T18:46:08Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/129410925", "tag": "v2.14.1", "name": "TensorFlow 2.14.1", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.14.1\r\n\r\n## Security\r\n\r\n*   Updates `curl` to `8.4.0` to handle [CVE-2023-38545](https://curl.se/docs/CVE-2023-38545.html) and [CVE-2023-38546](https://curl.se/docs/CVE-2023-38546.html).", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.14.1", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.14.1", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.14.1", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/129410925", "release_id": 129410925, "date_created": "2023-11-10T21:47:47Z", "date_published": "2023-11-14T18:42:20Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/127918177", "tag": "v2.15.0-rc1", "name": "TensorFlow 2.15.0-rc1", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.15.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `tf.types.experimental.GenericFunction` has been renamed to `tf.types.experimental.PolymorphicFunction`.\r\n\r\n### Known Caveats\r\n\r\n### Major Features and Improvements\r\n\r\n*   [oneDNN CPU performance optimizations](https://github.com/tensorflow/community/blob/master/rfcs/20210930-enable-onednn-ops.md) Windows x64 & x86.\r\n\r\n    *   **Windows x64 & x86 packages:**\r\n        *   oneDNN optimizations are *enabled by default* on X86 CPUs\r\n    *   To explicitly enable or disable oneDNN optimizations, set the environment variable `TF_ENABLE_ONEDNN_OPTS` to `1` (enable) or `0` (disable) before running TensorFlow. To fall back to default settings, unset the environment variable.\r\n    *   oneDNN optimizations can yield slightly different numerical results compared to when oneDNN optimizations are disabled due to floating-point round-off errors from\r\n different computation approaches and orders.\r\n    *   To verify if oneDNN optimizations are on, look for a message with *\"oneDNN custom operations are on\"* in the log. If the exact phrase is not there, it means they are off.\r\n\r\n* Making the `tf.function` type system fully available:\r\n\r\n    * `tf.types.experimental.TraceType` now allows custom tf.function inputs to declare Tensor decomposition and type casting support.\r\n    * Introducing `tf.types.experimental.FunctionType` as the comprehensive representation of the signature of `tf.function` callables. It can be accessed through the `function_type` property of `tf.function`s and `ConcreteFunction`s. See the `tf.types.experimental.FunctionType` documentation for more details.\r\n\r\n* Introducing `tf.types.experimental.AtomicFunction` as the fastest way to perform TF computations in Python.\r\n\r\n    * Can be accessed through `inference_fn` property of `ConcreteFunction`s\r\n    * Does not support gradients.\r\n    * See `tf.types.experimental.AtomicFunction` documentation for how to call and use it.\r\n\r\n\r\n*   `tf.data`:\r\n\r\n    *   Moved option `warm_start` from `tf.data.experimental.OptimizationOptions` to `tf.data.Options`.\r\n\r\n*   `tf.lite`:\r\n\r\n    *   `sub_op` and `mul_op` support broadcasting up to 6 dimensions.\r\n\r\n    *  The `tflite::SignatureRunner` class, which provides support for named parameters and for multiple named computations within a single TF Lite model, is no longer considered experimental. Likewise for the following signature-related methods of `tflite::Interpreter`:\r\n\r\n       *   `tflite::Interpreter::GetSignatureRunner`\r\n       *   `tflite::Interpreter::signature_keys`\r\n       *   `tflite::Interpreter::signature_inputs`\r\n       *   `tflite::Interpreter::signature_outputs`\r\n       *   `tflite::Interpreter::input_tensor_by_signature`\r\n       *   `tflite::Interpreter::output_tensor_by_signature`\r\n\r\n    *  Similarly, the following signature runner functions in the TF Lite C API are no longer considered experimental:\r\n\r\n       *    `TfLiteInterpreterGetSignatureCount`\r\n       *    `TfLiteInterpreterGetSignatureKey`\r\n       *    `TfLiteInterpreterGetSignatureRunner`\r\n       *    `TfLiteSignatureRunnerAllocateTensors`\r\n       *    `TfLiteSignatureRunnerGetInputCount`\r\n       *    `TfLiteSignatureRunnerGetInputName`\r\n       *    `TfLiteSignatureRunnerGetInputTensor`\r\n       *    `TfLiteSignatureRunnerGetOutputCount`\r\n       *    `TfLiteSignatureRunnerGetOutputName`\r\n       *    `TfLiteSignatureRunnerGetOutputTensor`\r\n       *    `TfLiteSignatureRunnerInvoke`\r\n       *    `TfLiteSignatureRunnerResizeInputTensor`\r\n\r\n    * New C API function `TfLiteExtensionApisVersion` added to `tensorflow/lite/c/c_api.h`.\r\n\r\n    * Add int8 and int16x8 support for RSQRT operator\r\n\r\n* Android NDK r25 is supported.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   Add TensorFlow Quantizer to TensorFlow pip package.\r\n\r\n*   `tf.sparse.segment_sum` `tf.sparse.segment_mean` `tf.sparse.segment_sqrt_n` `SparseSegmentSum/Mean/SqrtN[WithNumSegments]`\r\n\r\n    *   Added `sparse_gradient` option (default=false) that makes the gradient of these functions/ops sparse (`IndexedSlices`) instead of dense (`Tensor`), using new `SparseSegmentSum/Mean/SqrtNGradV2` ops.\r\n\r\n*   `tf.nn.embedding_lookup_sparse`\r\n\r\n    *   Optimized this function for some cases by fusing internal operations.\r\n\r\n*   `tf.saved_model.SaveOptions`\r\n\r\n    *   Provided a new `experimental_skip_saver` argument which, if specified, will suppress the addition of `SavedModel`-native save and restore ops to the `SavedModel`, for cases where users already build custom save/restore ops and checkpoint formats for the model being saved, and the creation of the SavedModel-native save/restore ops simply cause longer model serialization times.\r\n\r\n* Add ops to `tensorflow.raw_ops` that were missing.\r\n\r\n* `tf.CheckpointOptions`\r\n    * It now takes in a new argument called `experimental_write_callbacks`. These are callbacks that will be executed after a saving event finishes writing the checkpoint file.\r\n\r\n* Add an option `disable_eager_executer_streaming_enqueue` to `tensorflow.ConfigProto.Experimental` to control the eager runtime's behavior around parallel remote function invocations; when set to `True`, the eager runtime will be allowed to execute multiple function invocations in parallel.\r\n\r\n* `tf.constant_initializer`\r\n    * It now takes a new argument called `support_partition`. If True, constant_initializers can create sharded variables. This is disabled by default, similar to existing behavior.\r\n\r\n* `tf.lite`\r\n    * Added support for `stablehlo.scatter`.\r\n\r\n* `tf.estimator`\r\n    * The tf.estimator API removal is in progress and will be targeted for the 2.16 release. \r\n\r\n## Keras\r\n\r\n* This will be the final release before the launch of Keras 3.0, when Keras will become multi-backend. For the compatibility page and other info, please see: https://github.com/keras-team/keras-core\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAiden Grossman, Akash Patel, Akhil Goel, Alexander Pivovarov, Andrew Goodbody, Ayan Moitra, Ben Barsdell, Ben Olson, Bhavani Subramanian, Boian Petkantchin, Bruce Lai, Chao Chen, Christian Steinmeyer, cjflan, David Korczynski, Donghak Park, Dragan Mladjenovic, Eli Kobrin, Fadi Arafeh, Feiyue Chen, Fr\u00e9d\u00e9ric Bastien, guozhong.zhuang, halseycamilla, Harshavardhan Bellamkonda, James Ward, jameshollyer, Jane Liu, johnnkp, jswag180, justkw, Kanvi Khanna, Keith Smiley, Koan-Sin Tan, Kulin Seth, Kun-Lu, kushanam, Lu Teng, mdfaijul, Mehdi Drissi, mgokulkrish, mraunak, Mustafa Uzun, Namrata Bhave, Pavel Emeliyanenko, pemeliya, Peng Sun, Philipp Hack, Pratik Joshi, Rahul Batra, Raunak, redwrasse, Saoirse Stewart, SaoirseARM, seanshpark, Shanbin Ke, Spenser Bauman, Surya, sushreebarsa, Tai Ly, Thibaut Goetghebuer-Planchon, tilakrayal, Tirumalesh, Tj Xu, Vladislav, weihanmines, Wen Chen, wenchenvincent, wenscarl, William Muir, Zhoulong, Jiang", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.15.0-rc1", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.15.0-rc1", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.15.0-rc1", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/127918177", "release_id": 127918177, "date_created": "2023-11-02T00:55:06Z", "date_published": "2023-11-03T18:09:42Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/126675812", "tag": "v2.15.0-rc0", "name": "TensorFlow 2.15.0-rc0", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.15.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* `tf.types.experimental.GenericFunction` has been renamed to `tf.types.experimental.PolymorphicFunction`.\r\n\r\n### Major Features and Improvements\r\n\r\n*   [oneDNN CPU performance optimizations](https://github.com/tensorflow/community/blob/master/rfcs/20210930-enable-onednn-ops.md) Windows x64 & x86.\r\n\r\n    *   **Windows x64 & x86 packages:**\r\n        *   oneDNN optimizations are *enabled by default* on X86 CPUs\r\n    *   To explicitly enable or disable oneDNN optimizations, set the environment variable `TF_ENABLE_ONEDNN_OPTS` to `1` (enable) or `0` (disable) before running TensorFlow. To fall back to default settings, unset the environment variable.\r\n    *   oneDNN optimizations can yield slightly different numerical results compared to when oneDNN optimizations are disabled due to floating-point round-off errors from\r\n different computation approaches and orders.\r\n    *   To verify if oneDNN optimizations are on, look for a message with *\"oneDNN custom operations are on\"* in the log. If the exact phrase is not there, it means they are off.\r\n\r\n* Making the `tf.function` type system fully available:\r\n\r\n    * `tf.types.experimental.TraceType` now allows custom tf.function inputs to declare Tensor decomposition and type casting support.\r\n    * Introducing `tf.types.experimental.FunctionType` as the comprehensive representation of the signature of `tf.function` callables. It can be accessed through the `function_type` property of `tf.function`s and `ConcreteFunction`s. See the `tf.types.experimental.FunctionType` documentation for more details.\r\n\r\n* Introducing `tf.types.experimental.AtomicFunction` as the fastest way to perform TF computations in Python.\r\n\r\n    * Can be accessed through `inference_fn` property of `ConcreteFunction`s\r\n    * Does not support gradients.\r\n    * See `tf.types.experimental.AtomicFunction` documentation for how to call and use it.\r\n\r\n\r\n*   `tf.data`:\r\n\r\n    *   Moved option `warm_start` from `tf.data.experimental.OptimizationOptions` to `tf.data.Options`.\r\n\r\n*   `tf.lite`:\r\n\r\n    *   `sub_op` and `mul_op` support broadcasting up to 6 dimensions.\r\n\r\n    *  The `tflite::SignatureRunner` class, which provides support for named parameters and for multiple named computations within a single TF Lite model, is no longer considered experimental. Likewise for the following signature-related methods of `tflite::Interpreter`:\r\n\r\n       *   `tflite::Interpreter::GetSignatureRunner`\r\n       *   `tflite::Interpreter::signature_keys`\r\n       *   `tflite::Interpreter::signature_inputs`\r\n       *   `tflite::Interpreter::signature_outputs`\r\n       *   `tflite::Interpreter::input_tensor_by_signature`\r\n       *   `tflite::Interpreter::output_tensor_by_signature`\r\n\r\n    *  Similarly, the following signature runner functions in the TF Lite C API are no longer considered experimental:\r\n\r\n       *    `TfLiteInterpreterGetSignatureCount`\r\n       *    `TfLiteInterpreterGetSignatureKey`\r\n       *    `TfLiteInterpreterGetSignatureRunner`\r\n       *    `TfLiteSignatureRunnerAllocateTensors`\r\n       *    `TfLiteSignatureRunnerGetInputCount`\r\n       *    `TfLiteSignatureRunnerGetInputName`\r\n       *    `TfLiteSignatureRunnerGetInputTensor`\r\n       *    `TfLiteSignatureRunnerGetOutputCount`\r\n       *    `TfLiteSignatureRunnerGetOutputName`\r\n       *    `TfLiteSignatureRunnerGetOutputTensor`\r\n       *    `TfLiteSignatureRunnerInvoke`\r\n       *    `TfLiteSignatureRunnerResizeInputTensor`\r\n\r\n    * New C API function `TfLiteExtensionApisVersion` added to `tensorflow/lite/c/c_api.h`.\r\n\r\n    * Add int8 and int16x8 support for RSQRT operator\r\n\r\n* Android NDK r25 is supported.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   Add TensorFlow Quantizer to TensorFlow pip package.\r\n\r\n*   `tf.sparse.segment_sum` `tf.sparse.segment_mean` `tf.sparse.segment_sqrt_n` `SparseSegmentSum/Mean/SqrtN[WithNumSegments]`\r\n\r\n    *   Added `sparse_gradient` option (default=false) that makes the gradient of these functions/ops sparse (`IndexedSlices`) instead of dense (`Tensor`), using new `SparseSegmentSum/Mean/SqrtNGradV2` ops.\r\n\r\n*   `tf.nn.embedding_lookup_sparse`\r\n\r\n    *   Optimized this function for some cases by fusing internal operations.\r\n\r\n*   `tf.saved_model.SaveOptions`\r\n\r\n    *   Provided a new `experimental_skip_saver` argument which, if specified, will suppress the addition of `SavedModel`-native save and restore ops to the `SavedModel`, for cases where users already build custom save/restore ops and checkpoint formats for the model being saved, and the creation of the SavedModel-native save/restore ops simply cause longer model serialization times.\r\n\r\n## Keras\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* Add ops to `tensorflow.raw_ops` that were missing.\r\n* `tf.CheckpointOptions`\r\n    * It now takes in a new argument called `experimental_write_callbacks`. These are callbacks that will be executed after a saving event finishes writing the checkpoint file.\r\n* Add an option `disable_eager_executer_streaming_enqueue` to `tensorflow.ConfigProto.Experimental` to control the eager runtime's behavior around parallel remote function invocations; when set to `True`, the eager runtime will be allowed to execute multiple function invocations in parallel.\r\n* `tf.constant_initializer`\r\n    * It now takes a new argument called `support_partition`. If True, constant_initializers can create sharded variables. This is disabled by default, similar to existing behavior.\r\n\r\n* `tf.lite`\r\n    * Added support for `stablehlo.scatter`.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAiden Grossman, Akash Patel, Akhil Goel, Alexander Pivovarov, Andrew Goodbody, Ayan Moitra, Ben Barsdell, Ben Olson, Bhavani Subramanian, Boian Petkantchin, Bruce Lai, Chao Chen, Christian Steinmeyer, cjflan, David Korczynski, Donghak Park, Dragan Mladjenovic, Eli Kobrin, Fadi Arafeh, Feiyue Chen, Fr\u00e9d\u00e9ric Bastien, guozhong.zhuang, halseycamilla, Harshavardhan Bellamkonda, James Ward, jameshollyer, Jane Liu, johnnkp, jswag180, justkw, Kanvi Khanna, Keith Smiley, Koan-Sin Tan, Kulin Seth, Kun-Lu, kushanam, Lu Teng, mdfaijul, Mehdi Drissi, mgokulkrish, mraunak, Mustafa Uzun, Namrata Bhave, Pavel Emeliyanenko, pemeliya, Peng Sun, Philipp Hack, Pratik Joshi, Rahul Batra, Raunak, redwrasse, Saoirse Stewart, SaoirseARM, seanshpark, Shanbin Ke, Spenser Bauman, Surya, sushreebarsa, Tai Ly, Thibaut Goetghebuer-Planchon, tilakrayal, Tirumalesh, Tj Xu, Vladislav, weihanmines, Wen Chen, wenchenvincent, wenscarl, William Muir, Zhoulong, Jiang", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.15.0-rc0", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.15.0-rc0", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.15.0-rc0", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/126675812", "release_id": 126675812, "date_created": "2023-10-19T23:06:04Z", "date_published": "2023-10-25T23:15:20Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/122664462", "tag": "v2.14.0", "name": "TensorFlow 2.14.0", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.14.0\r\n\r\n## Tensorflow\r\n\r\n### Breaking Changes\r\n\r\n*   Support for Python 3.8 has been removed starting with TF 2.14. The TensorFlow 2.13.1 patch release will still have Python 3.8 support.\r\n\r\n*  `tf.Tensor`\r\n    * The class hierarchy for `tf.Tensor` has changed, and there are now explicit `EagerTensor` and `SymbolicTensor` classes for eager and tf.function respectively. Users who relied on the exact type of Tensor (e.g. `type(t) == tf.Tensor`) will need to update their code to use `isinstance(t, tf.Tensor)`. The `tf.is_symbolic_tensor` helper added in 2.13 may be used when it is necessary to determine if a value is specifically a symbolic tensor.\r\n\r\n*   `tf.compat.v1.Session`\r\n    * `tf.compat.v1.Session.partial_run` and `tf.compat.v1.Session.partial_run_setup` will be deprecated in the next release.\r\n\r\n### Known Caveats\r\n\r\n* `tf.lite`\r\n    * when converter flag \"_experimenal_use_buffer_offset\" is enabled, additional metadata is automatically excluded from the generated model. The behaviour is the same as \"exclude_conversion_metadata\" is set\r\n    * If the model is larger than 2GB, then we also require \"exclude_conversion_metadata\" flag to be set\r\n\r\n### Major Features and Improvements\r\n\r\n*   The `tensorflow` pip package has a new, optional installation method for Linux that installs necessary Nvidia CUDA libraries through pip. As long as the Nvidia driver is already installed on the system, you may now run `pip install tensorflow[and-cuda]` to install TensorFlow's Nvidia CUDA library dependencies in the Python environment. Aside from the Nvidia driver, no other pre-existing Nvidia CUDA packages are necessary.\r\n\r\n*   Enable JIT-compiled i64-indexed kernels on GPU for large tensors with more than 2**32 elements.\r\n    *   Unary GPU kernels: Abs, Atanh, Acos, Acosh, Asin, Asinh, Atan, Cos, Cosh, Sin, Sinh, Tan, Tanh.\r\n    *   Binary GPU kernels: AddV2, Sub, Div, DivNoNan, Mul, MulNoNan, FloorDiv, Equal, NotEqual, Greater, GreaterEqual, LessEqual, Less.\r\n\r\n* `tf.lite`\r\n    * Add experimental supports conversion of models that may be larger than 2GB before buffer deduplication\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.py_function` and `tf.numpy_function` can now be used as function decorators for clearer code:\r\n   ```\r\n   @tf.py_function(Tout=tf.float32)\r\n   def my_fun(x):\r\n     print(\"This always executes eagerly.\")\r\n     return x+1\r\n   ```\r\n\r\n* `tf.lite`\r\n    * Strided_Slice now supports `UINT32`.\r\n\r\n* `tf.config.experimental.enable_tensor_float_32_execution`\r\n    * Disabling TensorFloat-32 execution now causes TPUs to use float32 precision for float32 matmuls and other ops. TPUs have always used bfloat16 precision for certain ops, like matmul, when such ops had float32 inputs. Now, disabling TensorFloat-32 by calling `tf.config.experimental.enable_tensor_float_32_execution(False)` will cause TPUs to use float32 precision for such ops instead of bfloat16.\r\n\r\n*  `tf.experimental.dtensor`\r\n    * API changes for Relayout. Added a new API, `dtensor.relayout_like`, for relayouting a tensor according to the layout of another tensor.\r\n    * Added `dtensor.get_default_mesh`, for retrieving the current default mesh under the dtensor context.\r\n    * \\*fft\\* ops now support dtensors with any layout. Fixed bug in 'fft2d/fft3d', 'ifft2d/ifft3d', 'rfft2d/rfft3d', and 'irfft2d/irfft3d' for sharde input. Refer to this [blog post](https://blog.tensorflow.org/2023/08/distributed-fast-fourier-transform-in-tensorflow.html) for details.\r\n\r\n*  `tf.experimental.strict_mode`\r\n    * Added a new API, `strict_mode`, which converts all deprecation warnings into runtime errors with instructions on switching to a recommended  substitute.\r\n\r\n*   TensorFlow Debugger (tfdbg) CLI: ncurses-based CLI for tfdbg v1 was removed.\r\n\r\n*   TensorFlow now supports C++ RTTI on mobile and Android. To enable this feature, pass the flag `--define=tf_force_rtti=true` to Bazel when building TensorFlow. This may be needed when linking TensorFlow into RTTI-enabled programs since mixing RTTI and non-RTTI code can cause ABI issues.\r\n\r\n* `tf.ones`, `tf.zeros`, `tf.fill`, `tf.ones_like`, `tf.zeros_like` now take an additional Layout argument that controls the output layout of their results.\r\n\r\n* `tf.nest` and `tf.data` now support user defined classes implementing `__tf_flatten__` and `__tf_unflatten__` methods. See [nest_util code examples](https://github.com/tensorflow/tensorflow/blob/04869b4e63bfc03cb13627b3e1b879fdd0f69e34/tensorflow/python/util/nest_util.py#L97)\r\nfor an example.\r\n\r\n*  TensorFlow IO support is now available for Apple Silicon packages.\r\n\r\n*  Refactor CpuExecutable to propagate LLVM errors.\r\n\r\n## Keras\r\n\r\nKeras is a framework built on top of the TensorFlow. See more details on the Keras [website](https://keras.io/).\r\n\r\n### Major Features and Improvements\r\n\r\n* `tf.keras`\r\n    * `Model.compile` now support `steps_per_execution='auto'` as a parameter, allowing automatic tuning of steps per execution during `Model.fit`,\r\n    `Model.predict`, and `Model.evaluate` for a significant performance boost.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAakar Dwivedi, Adrian Popescu, ag.ramesh, Akhil Goel, Albert Zeyer, Alex Rosen, Alexey Vishnyakov, Andrew Goodbody, angerson, Ashiq Imran, Ayan Moitra, Ben Barsdell, Bhavani Subramanian, Boian Petkantchin, BrianWieder, Chris Mc, cloudhan, Connor Flanagan, Daniel Lang, Daniel Yudelevich, Darya Parygina, David Korczynski, David Svantesson, dingyuqing05, Dragan Mladjenovic, dskkato, Eli Kobrin, Erick Ochoa, Erik Schultheis, Fr\u00e9d\u00e9ric Bastien, gaikwadrahul8, Gauri1 Deshpande, guozhong.zhuang, H. Vetinari, Isaac Cilia Attard, Jake Hall, Jason Furmanek, Jerry Ge, Jinzhe Zeng, JJ, johnnkp, Jonathan Albrecht, jongkweh, justkw, Kanvi Khanna, kikoxia, Koan-Sin Tan, Kun-Lu, ltsai1, Lu Teng, luliyucoordinate, Mahmoud Abuzaina, mdfaijul, Milos Puzovic, Nathan Luehr, Om Thakkar, pateldeev, Peng Sun, Philipp Hack, pjpratik, Poliorcetics, rahulbatra85, rangjiaheng, Renato Arantes, Robert Kalmar, roho, Rylan Justice, Sachin Muradi, samypr100, Saoirse Stewart, Shanbin Ke, Shivam Mishra, shuw, Song Ziming, Stephan Hartmann, Sulav, sushreebarsa, T Coxon, Tai Ly, talyz, Thibaut Goetghebuer-Planchon, Thomas Preud'Homme, tilakrayal, Tirumalesh, Tj Xu, Tom Allsop, Trevor Morris, Varghese, Jojimon, Wen Chen, Yaohui Liu, Yimei Sun, Zhoulong Jiang, Zhoulong, Jiang", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.14.0", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.14.0", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.14.0", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/122664462", "release_id": 122664462, "date_created": "2023-09-21T17:17:23Z", "date_published": "2023-09-26T22:45:05Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/122659615", "tag": "v2.13.1", "name": "TensorFlow 2.13.1", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.13.1\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*  Refactor CpuExecutable to propagate LLVM errors.", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.13.1", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.13.1", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.13.1", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/122659615", "release_id": 122659615, "date_created": "2023-09-12T16:46:28Z", "date_published": "2023-09-26T20:34:00Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/119481677", "tag": "v2.14.0-rc1", "name": "TensorFlow 2.14.0-rc1", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.14.0\r\n\r\n## Tensorflow\r\n\r\n### Breaking Changes\r\n\r\n*   Support for Python 3.8 has been removed starting with TF 2.14. The TensorFlow 2.13.1 patch release will still have Python 3.8 support.\r\n\r\n*  `tf.Tensor`\r\n    * The class hierarchy for `tf.Tensor` has changed, and there are now explicit `EagerTensor` and `SymbolicTensor` classes for eager and tf.function respectively. Users who relied on the exact type of Tensor (e.g. `type(t) == tf.Tensor`) will need to update their code to use `isinstance(t, tf.Tensor)`. The `tf.is_symbolic_tensor` helper added in 2.13 may be used when it is necessary to determine if a value is specifically a symbolic tensor.\r\n\r\n*   `tf.compat.v1.Session`\r\n    * `tf.compat.v1.Session.partial_run` and `tf.compat.v1.Session.partial_run_setup` will be deprecated in the next release.\r\n\r\n*   `tf.estimator`\r\n    * `tf.estimator` API will be removed in the next release. TF Estimator Python package will no longer be released.\r\n\r\n### Known Caveats\r\n\r\n* `tf.lite`\r\n    * when converter flag \"_experimenal_use_buffer_offset\" is enabled, additional metadata is automatically excluded from the generated model. The behaviour is the same as \"exclude_conversion_metadata\" is set\r\n    * If the model is larger than 2GB, then we also require \"exclude_conversion_metadata\" flag to be set\r\n\r\n### Major Features and Improvements\r\n\r\n*   The `tensorflow` pip package has a new, optional installation method for Linux that installs necessary Nvidia CUDA libraries through pip. As long as the Nvidia driver is already installed on the system, you may now run `pip install tensorflow[and-cuda]` to install TensorFlow's Nvidia CUDA library dependencies in the Python environment. Aside from the Nvidia driver, no other pre-existing Nvidia CUDA packages are necessary.\r\n\r\n*   Enable JIT-compiled i64-indexed kernels on GPU for large tensors with more than 2**32 elements.\r\n    *   Unary GPU kernels: Abs, Atanh, Acos, Acosh, Asin, Asinh, Atan, Cos, Cosh, Sin, Sinh, Tan, Tanh.\r\n    *   Binary GPU kernels: AddV2, Sub, Div, DivNoNan, Mul, MulNoNan, FloorDiv, Equal, NotEqual, Greater, GreaterEqual, LessEqual, Less.\r\n\r\n* `tf.lite`\r\n    * Add experimental supports conversion of models that may be larger than 2GB before buffer deduplication\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.py_function` and `tf.numpy_function` can now be used as function decorators for clearer code:\r\n   ```\r\n   @tf.py_function(Tout=tf.float32)\r\n   def my_fun(x):\r\n     print(\"This always executes eagerly.\")\r\n     return x+1\r\n   ```\r\n\r\n* `tf.lite`\r\n    * Strided_Slice now supports `UINT32`.\r\n\r\n* `tf.config.experimental.enable_tensor_float_32_execution`\r\n    * Disabling TensorFloat-32 execution now causes TPUs to use float32 precision for float32 matmuls and other ops. TPUs have always used bfloat16 precision for certain ops, like matmul, when such ops had float32 inputs. Now, disabling TensorFloat-32 by calling `tf.config.experimental.enable_tensor_float_32_execution(False)` will cause TPUs to use float32 precision for such ops instead of bfloat16.\r\n\r\n*  `tf.experimental.dtensor`\r\n    * API changes for Relayout. Added a new API, `dtensor.relayout_like`, for relayouting a tensor according to the layout of another tensor.\r\n    * Added `dtensor.get_default_mesh`, for retrieving the current default mesh under the dtensor context.\r\n    * \\*fft\\* ops now support dtensors with any layout. Fixed bug in 'fft2d/ fft3d', 'ifft2d/ifft3d', 'rfft2d/rfft3d', and 'irfft2d/irfft3d' for sharded input.\r\n\r\n*  `tf.experimental.strict_mode`\r\n    * Added a new API, `strict_mode`, which converts all deprecation warnings into runtime errors with instructions on switching to recommended substitute.\r\n\r\n*   TensorFlow Debugger (tfdbg) CLI: ncurses-based CLI for tfdbg v1 was removed.\r\n\r\n*   TensorFlow now supports C++ RTTI on mobile and Android. To enable this feature, pass the flag `--define=tf_force_rtti=true` to Bazel when building TensorFlow. This may be needed when linking TensorFlow into RTTI-enabled programs since mixing RTTI and non-RTTI code can cause ABI issues.\r\n\r\n* `tf.ones`, `tf.zeros`, `tf.fill`, `tf.ones_like`, `tf.zeros_like` now take an additional Layout argument that controls the output layout of their results.\r\n\r\n* `tf.nest` and `tf.data` now support user defined classes implementing `__tf_flatten__` and `__tf_unflatten__` methods. See [nest_util code examples](https://github.com/tensorflow/tensorflow/blob/04869b4e63bfc03cb13627b3e1b879fdd0f69e34/tensorflow/python/util/nest_util.py#L97) for an example.\r\n\r\n## Keras\r\n\r\nKeras is a framework built on top of the TensorFlow. See more details on the Keras [website](https://keras.io/).\r\n\r\n### Major Features and Improvements\r\n\r\n* `tf.keras`\r\n    * `Model.compile` now support `steps_per_execution='auto'` as a parameter, allowing automatic tuning of steps per execution during `Model fit`, `Model.predict`, and `Model.evaluate` for a significant performance boost.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAakar Dwivedi, Adrian Popescu, ag.ramesh, Akhil Goel, Albert Zeyer, Alex Rosen, Alexey Vishnyakov, Andrew Goodbody, angerson, Ashiq Imran, Ayan Moitra, Ben Barsdell, Bhavani Subramanian, Boian Petkantchin, BrianWieder, Chris Mc, cloudhan, Connor Flanagan, Daniel Lang, Daniel Yudelevich, Darya Parygina, David Korczynski, David Svantesson, dingyuqing05, Dragan Mladjenovic, dskkato, Eli Kobrin, Erick Ochoa, Erik Schultheis, Fr\u00e9d\u00e9ric Bastien, gaikwadrahul8, Gauri1 Deshpande, georgiie, guozhong.zhuang, H. Vetinari, Isaac Cilia Attard, Jake Hall, Jason Furmanek, Jerry Ge, Jinzhe Zeng, JJ, johnnkp, Jonathan Albrecht, jongkweh, justkw, Kanvi Khanna, kikoxia, Koan-Sin Tan, Kun-Lu, Learning-To-Play, ltsai1, Lu Teng, luliyucoordinate, Mahmoud Abuzaina, mdfaijul, Milos Puzovic, Nathan Luehr, Om Thakkar, pateldeev, Peng Sun, Philipp Hack, pjpratik, Poliorcetics, rahulbatra85, rangjiaheng, Renato Arantes, Robert Kalmar, roho, Rylan Justice, Sachin Muradi, samypr100, Saoirse Stewart, Shanbin Ke, Shivam Mishra, shuw, Song Ziming, Stephan Hartmann, Sulav, sushreebarsa, T Coxon, Tai Ly, talyz, Tensorflow Jenkins, Thibaut Goetghebuer-Planchon, Thomas Preud'Homme, tilakrayal, Tirumalesh, Tj Xu, Tom Allsop, Trevor Morris, Varghese, Jojimon, Wen Chen, Yaohui Liu, Yimei Sun, Zhoulong Jiang, Zhoulong, Jiang", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.14.0-rc1", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.14.0-rc1", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.14.0-rc1", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/119481677", "release_id": 119481677, "date_created": "2023-08-30T13:46:27Z", "date_published": "2023-08-31T21:42:28Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/115833032", "tag": "v2.14.0-rc0", "name": "TensorFlow 2.14.0-rc0", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.14.0\r\n\r\n## Tensorflow\r\n\r\n### Breaking Changes\r\n\r\n*  `tf.Tensor`\r\n    * The class hierarchy for `tf.Tensor` has changed, and there are now explicit `EagerTensor` and `SymbolicTensor` classes for eager and tf.function respectively. Users who relied on the exact type of Tensor (e.g. `type(t) == tf.Tensor`) will need to update their code to use `isinstance(t, tf.Tensor)`. The `tf.is_symbolic_tensor` helper added in 2.13 may be used when it is necessary to determine if a value is specifically a symbolic tensor.\r\n\r\n*   `tf.compat.v1.Session`\r\n    * `tf.compat.v1.Session.partial_run` and `tf.compat.v1.Session.partial_run_setup` will be deprecated in the next release.\r\n\r\n### Known Caveats\r\n\r\n* `tf.lite`\r\n    * when converter flag \"_experimenal_use_buffer_offset\" is enabled, additional metadata is automatically excluded from the generated model. The behaviour is the same as \"exclude_conversion_metadata\" is set\r\n    * If the model is larger than 2GB, then we also require \"exclude_conversion_metadata\" flag to be set\r\n\r\n### Major Features and Improvements\r\n\r\n*   Enable JIT-compiled i64-indexed kernels on GPU for large tensors with more than 2**32 elements.\r\n    *   Unary GPU kernels: Abs, Atanh, Acos, Acosh, Asin, Asinh, Atan, Cos, Cosh, Sin, Sinh, Tan, Tanh.\r\n    *   Binary GPU kernels: AddV2, Sub, Div, DivNoNan, Mul, MulNoNan, FloorDiv, Equal, NotEqual, Greater, GreaterEqual, LessEqual, Less.\r\n\r\n* `tf.lite`\r\n    * Add experimental supports conversion of models that may be larger than 2GB before buffer deduplication\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n* `tf.py_function` and `tf.numpy_function` can now be used as function decorators for clearer code:\r\n   ```\r\n   @tf.py_function(Tout=tf.float32)\r\n   def my_fun(x):\r\n     print(\"This always executes eagerly.\")\r\n     return x+1\r\n   ```\r\n\r\n* `tf.lite`\r\n    * Strided_Slice now supports `UINT32`.\r\n\r\n* `tf.config.experimental.enable_tensor_float_32_execution`\r\n    * Disabling TensorFloat-32 execution now causes TPUs to use float32 precision for float32 matmuls and other ops. TPUs have always used bfloat16 precision for certain ops, like matmul, when such ops had float32 inputs. Now, disabling TensorFloat-32 by calling `tf.config.experimental.enable_tensor_float_32_execution(False)` will cause TPUs to use float32 precision for such ops instead of bfloat16.\r\n\r\n*  `tf.experimental.dtensor`\r\n    * API changes for Relayout. Added a new API, `dtensor.relayout_like`, for relayouting a tensor according to the layout of another tensor.\r\n    * Added `dtensor.get_default_mesh`, for retrieving the current default mesh under the dtensor context.\r\n    * \\*fft\\* ops now support dtensors with any layout. Fixed bug in 'fft2d/ fft3d', 'ifft2d/ifft3d', 'rfft2d/rfft3d', and 'irfft2d/irfft3d' for sharded input.\r\n\r\n*  `tf.experimental.strict_mode`\r\n    * Added a new API, `strict_mode`, which converts all deprecation warnings into runtime errors with instructions on switching to a recommended substitute.\r\n\r\n*   TensorFlow Debugger (tfdbg) CLI: ncurses-based CLI for tfdbg v1 was removed.\r\n\r\n*   TensorFlow now supports C++ RTTI on mobile and Android. To enable this feature, pass the flag `--define=tf_force_rtti=true` to Bazel when building TensorFlow. This may be needed when linking TensorFlow into RTTI-enabled programs since mixing RTTI and non-RTTI code can cause ABI issues.\r\n\r\n* `tf.ones`, `tf.zeros`, `tf.fill`, `tf.ones_like`, `tf.zeros_like` now take an additional Layout argument that controls the output layout of their results.\r\n\r\n* `tf.nest` and `tf.data` now support user defined classes implementing `__tf_flatten__` and `__tf_unflatten__` methods. See [nest_util code examples](https://github.com/tensorflow/tensorflow/blob/04869b4e63bfc03cb13627b3e1b879fdd0f69e34/tensorflow/python/util/nest_util.py#L97) for an example.\r\n\r\n## Keras\r\n\r\nKeras is a framework built on top of the TensorFlow. See more details on the Keras [website](https://keras.io/).\r\n\r\n### Major Features and Improvements\r\n\r\n* `tf.keras`\r\n    * `Model.compile` now support `steps_per_execution='auto'` as a parameter, allowing automatic tuning of steps per execution during `Model.fit`, `Model.predict`, and `Model.evaluate` for a significant performance boost.\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\nAakar Dwivedi, Adrian Popescu, ag.ramesh, Akhil Goel, Albert Zeyer, Alex Rosen, Alexey Vishnyakov, Andrew Goodbody, angerson, Ashiq Imran, Ayan Moitra, Ben Barsdell, Bhavani Subramanian, Boian Petkantchin, BrianWieder, Chris Mc, cloudhan, Connor Flanagan, Daniel Lang, Daniel Yudelevich, Darya Parygina, David Korczynski, David Svantesson, dingyuqing05, Dragan Mladjenovic, dskkato, Eli Kobrin, Erick Ochoa, Erik Schultheis, Fr\u00e9d\u00e9ric Bastien, gaikwadrahul8, Gauri1 Deshpande, georgiie, guozhong.zhuang, H. Vetinari, Isaac Cilia Attard, Jake Hall, Jason Furmanek, Jerry Ge, Jinzhe Zeng, JJ, johnnkp, Jonathan Albrecht, jongkweh, justkw, Kanvi Khanna, kikoxia, Koan-Sin Tan, Kun-Lu, Learning-To-Play, ltsai1, Lu Teng, luliyucoordinate, Mahmoud Abuzaina, mdfaijul, Milos Puzovic, Nathan Luehr, Om Thakkar, pateldeev, Peng Sun, Philipp Hack, pjpratik, Poliorcetics, rahulbatra85, rangjiaheng, Renato Arantes, Robert Kalmar, roho, Rylan Justice, Sachin Muradi, samypr100, Saoirse Stewart, Shanbin Ke, Shivam Mishra, shuw, Song Ziming, Stephan Hartmann, Sulav, sushreebarsa, T Coxon, Tai Ly, talyz, Tensorflow Jenkins, Thibaut Goetghebuer-Planchon, Thomas Preud'Homme, tilakrayal, Tirumalesh, Tj Xu, Tom Allsop, Trevor Morris, Varghese, Jojimon, Wen Chen, Yaohui Liu, Yimei Sun, Zhoulong Jiang, Zhoulong, Jiang", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.14.0-rc0", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.14.0-rc0", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.14.0-rc0", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/115833032", "release_id": 115833032, "date_created": "2023-08-15T22:03:02Z", "date_published": "2023-08-17T18:09:07Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/110531432", "tag": "v2.13.0", "name": "TensorFlow 2.13.0", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.13.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* The LMDB kernels have been changed to return an error. This is in preparation for completely removing them from TensorFlow. The LMDB dependency that these kernels are bringing to TensorFlow has been dropped, thus making the build slightly faster and more secure.\r\n\r\n### Major Features and Improvements\r\n\r\n*   `tf.lite`\r\n\r\n    *   Added 16-bit and 64-bit float type support for built-in op `cast`.\r\n    *   The Python TF Lite Interpreter bindings now have an option `experimental_disable_delegate_clustering` to turn-off delegate clustering.\r\n    *   Added int16x8 support for the built-in op `exp`\r\n    *   Added int16x8 support for the built-in op `mirror_pad`\r\n    *   Added int16x8 support for the built-in ops `space_to_batch_nd` and `batch_to_space_nd`\r\n    *   Added 16-bit int type support for built-in op `less`, `greater_than`, `equal`\r\n    *   Added 8-bit and 16-bit support for `floor_div` and `floor_mod`.\r\n    *   Added 16-bit and 32-bit int support for the built-in op `bitcast`.\r\n    *   Added 8-bit/16-bit/32-bit int/uint support for the built-in op `bitwise_xor`\r\n    *   Added int16 indices support for built-in op `gather` and `gather_nd`.\r\n    *   Added 8-bit/16-bit/32-bit int/uint support for the built-in op `right_shift`\r\n    *   Added reference implementation for 16-bit int unquantized `add`.\r\n    *   Added reference implementation for 16-bit int and 32-bit unsigned int unquantized `mul`.\r\n    *   `add_op` supports broadcasting up to 6 dimensions.\r\n    *   Added 16-bit support for `top_k`.\r\n    \r\n*   `tf.function`\r\n\r\n    *   ConcreteFunction (`tf.types.experimental.ConcreteFunction`) as generated through `get_concrete_function` now performs holistic input validation similar to calling `tf.function` directly. This can cause breakages where existing calls pass Tensors with the wrong shape or omit certain non-Tensor arguments (including default values).\r\n\r\n*   `tf.nn`\r\n\r\n    *   `tf.nn.embedding_lookup_sparse` and `tf.nn.safe_embedding_lookup_sparse` now support ids and weights described by `tf.RaggedTensor`s.\r\n    *   Added a new boolean argument `allow_fast_lookup` to `tf.nn.embedding_lookup_sparse` and `tf.nn.safe_embedding_lookup_sparse`, which enables a simplified and typically faster lookup procedure.\r\n\r\n*   `tf.data`\r\n\r\n    *   `tf.data.Dataset.zip` now supports Python-style zipping, i.e. `Dataset.zip(a, b, c)`.\r\n    * `tf.data.Dataset.shuffle` now supports `tf.data.UNKNOWN_CARDINALITY` When doing a \"full shuffle\" using  `dataset = dataset.shuffle(dataset.cardinality())`. But remember, a \"full shuffle\" will load the full dataset into memory so that it can be shuffled, so make sure to only use this with small datasets or datasets of small objects (like filenames).\r\n\r\n*   `tf.math`\r\n\r\n    * `tf.nn.top_k` now supports specifying the output index type via parameter `index_type`.  Supported types are `tf.int16`, `tf.int32` (default), and `tf.int64`.\r\n\r\n*   `tf.SavedModel`\r\n\r\n    *   Introduced class method `tf.saved_model.experimental.Fingerprint.from_proto(proto)`, which can be used to construct a `Fingerprint` object directly from a protobuf.\r\n    *   Introduced member method `tf.saved_model.experimental.Fingerprint.singleprint()`, which provides a convenient way to uniquely identify a SavedModel.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   `tf.Variable`\r\n\r\n    *   Changed resource variables to inherit from `tf.compat.v2.Variable` instead of `tf.compat.v1.Variable`. Some checks for `isinstance(v, tf compat.v1.Variable)` that previously returned True may now return False.\r\n\r\n*   `tf.distribute`\r\n\r\n    *   Opened an experimental API, `tf.distribute.experimental.coordinator.get_current_worker_index`, for retrieving the worker index from within a worker, when using parameter server training with a custom training loop.\r\n\r\n*   `tf.experimental.dtensor`\r\n\r\n    *   Deprecated `dtensor.run_on` in favor of `dtensor.default_mesh` to correctly indicate that the context does not override the mesh that the ops and functions will run on, it only sets a fallback default mesh.\r\n    *   List of members of `dtensor.Layout` and `dtensor.Mesh` have slightly changed as part of efforts to consolidate the C++ and Python source code with pybind11. Most notably, `dtensor.Layout.serialized_string` is removed.\r\n    *   Minor API changes to represent Single Device Layout for non-distributed Tensors inside DTensor functions. Runtime support will be added soon.\r\n\r\n*   `tf.experimental.ExtensionType`\r\n\r\n    *   `tf.experimental.ExtensionType` now supports Python `tuple` as the type annotation of its fields.\r\n\r\n*   `tf.nest`\r\n\r\n    *   Deprecated API `tf.nest.is_sequence` has now been deleted. Please use `tf.nest.is_nested` instead.\r\n\r\n## Keras\r\n\r\nKeras is a framework built on top of the TensorFlow. See more details on the [Keras website](https://keras.io/).\r\n\r\n### Breaking Changes\r\n\r\n*  Removed the Keras scikit-learn API wrappers (`KerasClassifier` and `KerasRegressor`), which had been deprecated in August 2021. We recommend using [SciKeras](https://github.com/adriangb/scikeras) instead.\r\n*  The default Keras model saving format is now the Keras v3 format: calling `model.save(\"xyz.keras\")` will no longer create a H5 file, it will create a native Keras model file. This will only be breaking for you if you were manually inspecting or modifying H5 files saved by Keras under a `.keras` extension. If this breaks you, simply add `save_format=\"h5\"` to your `.save()` call to revert back to the prior behavior.\r\n*  Added `keras.utils.TimedThread` utility to run a timed thread every x seconds. It can be used to run a threaded function alongside model training or any other snippet of code.\r\n*  In the `keras` PyPI package, accessible symbols are now restricted to symbols that are intended to be public. This may affect your code if you were using `import keras` and you used `keras` functions that were not public APIs, but were accessible in earlier versions with direct imports. In those cases, please use the following guideline:\r\n        -  The API may be available in the public Keras API under a different name, so make sure to look for it on keras.io or TensorFlow docs and switch to the public version.\r\n        -  It could also be a simple python or TF utility that you could easily copy over to your own codebase. In those case, just make it your own!\r\n        -  If you believe it should definitely be a public Keras API, please open a feature request in keras GitHub repo.\r\n        -  As a workaround, you could import the same private symbol keras `keras.src`, but keep in mind the `src` namespace is not stable and those APIs may change or be removed in the future.\r\n\r\n### Major Features and Improvements\r\n\r\n*   Added F-Score metrics `tf.keras.metrics.FBetaScore`, `tf.keras.metrics.F1Score`, and `tf.keras.metrics.R2Score`.\r\n*   Added activation function `tf.keras.activations.mish`.\r\n*   Added experimental `keras.metrics.experimental.PyMetric` API for metrics that run Python code on the host CPU (compiled outside of the TensorFlow graph). This can be used for integrating metrics from external Python libraries (like sklearn or pycocotools) into Keras as first-class Keras metrics.\r\n*   Added `tf.keras.optimizers.Lion` optimizer.\r\n*   Added `tf.keras.layers.SpectralNormalization` layer wrapper to perform spectral normalization on the weights of a target layer.\r\n*   The `SidecarEvaluatorModelExport` callback has been added to Keras as `keras.callbacks.SidecarEvaluatorModelExport`. This callback allows for exporting the model the best-scoring model as evaluated by a `SidecarEvaluator` evaluator. The evaluator regularly evaluates the model and exports it if the user-defined comparison function determines that it is an improvement.\r\n*   Added warmup capabilities to `tf.keras.optimizers.schedules.CosineDecay` learning rate scheduler. You can now specify an initial and target learning rate, and our scheduler will perform a linear interpolation between the two after which it will begin a decay phase.\r\n*   Added experimental support for an exactly-once visitation guarantee for evaluating Keras models trained with `tf.distribute ParameterServerStrategy`, via the `exact_evaluation_shards` argument in `Model.fit` and `Model.evaluate`.\r\n*   Added `tf.keras.__internal__.KerasTensor`,`tf.keras.__internal__.SparseKerasTensor`, and `tf.keras.__internal__.RaggedKerasTensor` classes. You can use these classes to do instance type checking and type annotations for layer/model inputs and outputs.\r\n*   All the `tf.keras.dtensor.experimental.optimizers` classes have been merged with `tf.keras.optimizers`. You can migrate your code to use `tf.keras.optimizers` directly. The API namespace for `tf.keras.dtensor.experimental.optimizers` will be removed in future releases.\r\n*   Added support for `class_weight` for 3+ dimensional targets (e.g. image segmentation masks) in `Model.fit`.\r\n*   Added a new loss, `keras.losses.CategoricalFocalCrossentropy`.\r\n*   Remove the `tf.keras.dtensor.experimental.layout_map_scope()`. You can user the `tf.keras.dtensor.experimental.LayoutMap.scope()` instead.\r\n\r\n## Security\r\n\r\n*   Fixes correct values rank in UpperBound and LowerBound [CVE-2023-33976](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-33976)\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\n103yiran, 8bitmp3, Aakar, Aakar Dwivedi, Abinash Satapathy, Aditya Kane, ag.ramesh, Alexander Grund, Andrei Pikas, andreii, Andrew Goodbody, angerson, Anthony_256, Ashay Rane, Ashiq Imran, Awsaf, Balint Cristian, Banikumar Maiti (Intel Aipg), Ben Barsdell, bhack, cfRod, Chao Chen, chenchongsong, Chris Mc, Daniil Kutz, David Rubinstein, dianjiaogit, dixr, Dongfeng Yu, dongfengy, drah, Eric Kunze, Feiyue Chen, Frederic Bastien, Gauri1 Deshpande, guozhong.zhuang, hDn248, HYChou, ingkarat, James Hilliard, Jason Furmanek, Jaya, Jens Glaser, Jerry Ge, Jiao Dian'S Power Plant, Jie Fu, Jinzhe Zeng, Jukyy, Kaixi Hou, Kanvi Khanna, Karel Ha, karllessard, Koan-Sin Tan, Konstantin Beluchenko, Kulin Seth, Kun Lu, Kyle Gerard Felker, Leopold Cambier, Lianmin Zheng, linlifan, liuyuanqiang, Lukas Geiger, Luke Hutton, Mahmoud Abuzaina, Manas Mohanty, Mateo Fidabel, Maxiwell S. Garcia, Mayank Raunak, mdfaijul, meatybobby, Meenakshi Venkataraman, Michael Holman, Nathan John Sircombe, Nathan Luehr, nitins17, Om Thakkar, Patrice Vignola, Pavani Majety, per1234, Philipp Hack, pollfly, Prianka Liz Kariat, Rahul Batra, rahulbatra85, ratnam.parikh, Rickard Hallerb\u00e4ck, Roger Iyengar, Rohit Santhanam, Roman Baranchuk, Sachin Muradi, sanadani, Saoirse Stewart, seanshpark, Shawn Wang, shuw, Srinivasan Narayanamoorthy, Stewart Miles, Sunita Nadampalli, SuryanarayanaY, Takahashi Shuuji, Tatwai Chong, Thibaut Goetghebuer-Planchon, tilakrayal, Tirumalesh, TJ, Tony Sung, Trevor Morris, unda, Vertexwahn, venkat2469, William Muir, Xavier Bonaventura, xiang.zhang, Xiao-Yong Jin, yleeeee, Yong Tang, Yuriy Chernyshov, Zhang, Xiangze, zhaozheng09", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.13.0", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.13.0", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.13.0", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/110531432", "release_id": 110531432, "date_created": "2023-06-28T18:38:35Z", "date_published": "2023-07-05T17:32:13Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/110267713", "tag": "v2.12.1", "name": "TensorFlow 2.12.1", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.12.1\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*  The use of the ambe config to build and test aarch64 is not needed. The ambe config will be removed in the future. Making cpu_arm64_pip.sh and cpu_arm64_nonpip.sh more similar for easier future maintenance.", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.12.1", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.12.1", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.12.1", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/110267713", "release_id": 110267713, "date_created": "2023-06-27T18:05:39Z", "date_published": "2023-07-05T19:49:02Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/109590943", "tag": "v2.13.0-rc2", "name": "TensorFlow 2.13.0-rc2", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.13.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* The LMDB kernels have been changed to return an error. This is in preparation for completely removing them from TensorFlow. The LMDB dependency that these kernels are bringing to TensorFlow has been dropped, thus making the build slightly faster and more secure.\r\n\r\n### Major Features and Improvements\r\n\r\n*   `tf.lite`\r\n\r\n    *   Added 16-bit and 64-bit float type support for built-in op `cast`.\r\n    *   The Python TF Lite Interpreter bindings now have an option `experimental_disable_delegate_clustering` to turn-off delegate clustering.\r\n    *   Added int16x8 support for the built-in op `exp`\r\n    *   Added int16x8 support for the built-in op `mirror_pad`\r\n    *   Added int16x8 support for the built-in ops `space_to_batch_nd` and `batch_to_space_nd`\r\n    *   Added 16-bit int type support for built-in op `less`, `greater_than`, `equal`\r\n    *   Added 8-bit and 16-bit support for `floor_div` and `floor_mod`.\r\n    *   Added 16-bit and 32-bit int support for the built-in op `bitcast`.\r\n    *   Added 8-bit/16-bit/32-bit int/uint support for the built-in op `bitwise_xor`\r\n    *   Added int16 indices support for built-in op `gather` and `gather_nd`.\r\n    *   Added 8-bit/16-bit/32-bit int/uint support for the built-in op `right_shift`\r\n    *   Added reference implementation for 16-bit int unquantized `add`.\r\n    *   Added reference implementation for 16-bit int and 32-bit unsigned int unquantized `mul`.\r\n    *   `add_op` supports broadcasting up to 6 dimensions.\r\n    *   Added 16-bit support for `top_k`.\r\n    \r\n*   `tf.function`\r\n\r\n    *   ConcreteFunction (`tf.types.experimental.ConcreteFunction`) as generated through `get_concrete_function` now performs holistic input validation similar to calling `tf.function` directly. This can cause breakages where existing calls pass Tensors with the wrong shape or omit certain non-Tensor arguments (including default values).\r\n\r\n*   `tf.nn`\r\n\r\n    *   `tf.nn.embedding_lookup_sparse` and `tf.nn.safe_embedding_lookup_sparse` now support ids and weights described by `tf.RaggedTensor`s.\r\n    *   Added a new boolean argument `allow_fast_lookup` to `tf.nn.embedding_lookup_sparse` and `tf.nn.safe_embedding_lookup_sparse`, which enables a simplified and typically faster lookup procedure.\r\n\r\n*   `tf.data`\r\n\r\n    *   `tf.data.Dataset.zip` now supports Python-style zipping, i.e. `Dataset.zip(a, b, c)`.\r\n    * `tf.data.Dataset.shuffle` now supports `tf.data.UNKNOWN_CARDINALITY` When doing a \"full shuffle\" using  `dataset = dataset.shuffle(dataset.cardinality())`. But remember, a \"full shuffle\" will load the full dataset into memory so that it can be shuffled, so make sure to only use this with small datasets or datasets of small objects (like filenames).\r\n\r\n*   `tf.math`\r\n\r\n    * `tf.nn.top_k` now supports specifying the output index type via parameter `index_type`.  Supported types are `tf.int16`, `tf.int32` (default), and `tf.int64`.\r\n\r\n*   `tf.SavedModel`\r\n\r\n    *   Introduced class method `tf.saved_model.experimental.Fingerprint.from_proto(proto)`, which can be used to construct a `Fingerprint` object directly from a protobuf.\r\n    *   Introduced member method `tf.saved_model.experimental.Fingerprint.singleprint()`, which provides a convenient way to uniquely identify a SavedModel.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   `tf.Variable`\r\n\r\n    *   Changed resource variables to inherit from `tf.compat.v2.Variable` instead of `tf.compat.v1.Variable`. Some checks for `isinstance(v, tf compat.v1.Variable)` that previously returned True may now return False.\r\n\r\n*   `tf.distribute`\r\n\r\n    *   Opened an experimental API, `tf.distribute.experimental.coordinator.get_current_worker_index`, for retrieving the worker index from within a worker, when using parameter server training with a custom training loop.\r\n\r\n*   `tf.experimental.dtensor`\r\n\r\n    *   Deprecated `dtensor.run_on` in favor of `dtensor.default_mesh` to correctly indicate that the context does not override the mesh that the ops and functions will run on, it only sets a fallback default mesh.\r\n    *   List of members of `dtensor.Layout` and `dtensor.Mesh` have slightly changed as part of efforts to consolidate the C++ and Python source code with pybind11. Most notably, `dtensor.Layout.serialized_string` is removed.\r\n    *   Minor API changes to represent Single Device Layout for non-distributed Tensors inside DTensor functions. Runtime support will be added soon.\r\n\r\n*   `tf.experimental.ExtensionType`\r\n\r\n    *   `tf.experimental.ExtensionType` now supports Python `tuple` as the type annotation of its fields.\r\n\r\n*   `tf.nest`\r\n\r\n    *   Deprecated API `tf.nest.is_sequence` has now been deleted. Please use `tf.nest.is_nested` instead.\r\n\r\n## Keras\r\n\r\nKeras is a framework built on top of the TensorFlow. See more details on the [Keras website](https://keras.io/).\r\n\r\n### Breaking Changes\r\n\r\n*  Removed the Keras scikit-learn API wrappers (`KerasClassifier` and `KerasRegressor`), which had been deprecated in August 2021. We recommend using [SciKeras](https://github.com/adriangb/scikeras) instead.\r\n*  The default Keras model saving format is now the Keras v3 format: calling `model.save(\"xyz.keras\")` will no longer create a H5 file, it will create a native Keras model file. This will only be breaking for you if you were manually inspecting or modifying H5 files saved by Keras under a `.keras` extension. If this breaks you, simply add `save_format=\"h5\"` to your `.save()` call to revert back to the prior behavior.\r\n*  Added `keras.utils.TimedThread` utility to run a timed thread every x seconds. It can be used to run a threaded function alongside model training or any other snippet of code.\r\n*  In the `keras` PyPI package, accessible symbols are now restricted to symbols that are intended to be public. This may affect your code if you were using `import keras` and you used `keras` functions that were not public APIs, but were accessible in earlier versions with direct imports. In those cases, please use the following guideline:\r\n        -  The API may be available in the public Keras API under a different name, so make sure to look for it on keras.io or TensorFlow docs and switch to the public version.\r\n        -  It could also be a simple python or TF utility that you could easily copy over to your own codebase. In those case, just make it your own!\r\n        -  If you believe it should definitely be a public Keras API, please open a feature request in keras GitHub repo.\r\n        -  As a workaround, you could import the same private symbol keras `keras.src`, but keep in mind the `src` namespace is not stable and those APIs may change or be removed in the future.\r\n\r\n### Major Features and Improvements\r\n\r\n*   Added F-Score metrics `tf.keras.metrics.FBetaScore`, `tf.keras.metrics.F1Score`, and `tf.keras.metrics.R2Score`.\r\n*   Added activation function `tf.keras.activations.mish`.\r\n*   Added experimental `keras.metrics.experimental.PyMetric` API for metrics that run Python code on the host CPU (compiled outside of the TensorFlow graph). This can be used for integrating metrics from external Python libraries (like sklearn or pycocotools) into Keras as first-class Keras metrics.\r\n*   Added `tf.keras.optimizers.Lion` optimizer.\r\n*   Added `tf.keras.layers.SpectralNormalization` layer wrapper to perform spectral normalization on the weights of a target layer.\r\n*   The `SidecarEvaluatorModelExport` callback has been added to Keras as `keras.callbacks.SidecarEvaluatorModelExport`. This callback allows for exporting the model the best-scoring model as evaluated by a `SidecarEvaluator` evaluator. The evaluator regularly evaluates the model and exports it if the user-defined comparison function determines that it is an improvement.\r\n*   Added warmup capabilities to `tf.keras.optimizers.schedules.CosineDecay` learning rate scheduler. You can now specify an initial and target learning rate, and our scheduler will perform a linear interpolation between the two after which it will begin a decay phase.\r\n*   Added experimental support for an exactly-once visitation guarantee for evaluating Keras models trained with `tf.distribute ParameterServerStrategy`, via the `exact_evaluation_shards` argument in `Model.fit` and `Model.evaluate`.\r\n*   Added `tf.keras.__internal__.KerasTensor`,`tf.keras.__internal__.SparseKerasTensor`, and `tf.keras.__internal__.RaggedKerasTensor` classes. You can use these classes to do instance type checking and type annotations for layer/model inputs and outputs.\r\n*   All the `tf.keras.dtensor.experimental.optimizers` classes have been merged with `tf.keras.optimizers`. You can migrate your code to use `tf.keras.optimizers` directly. The API namespace for `tf.keras.dtensor.experimental.optimizers` will be removed in future releases.\r\n*   Added support for `class_weight` for 3+ dimensional targets (e.g. image segmentation masks) in `Model.fit`.\r\n*   Added a new loss, `keras.losses.CategoricalFocalCrossentropy`.\r\n*   Remove the `tf.keras.dtensor.experimental.layout_map_scope()`. You can user the `tf.keras.dtensor.experimental.LayoutMap.scope()` instead.\r\n\r\n## Security\r\n\r\n*   N/A\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\n103yiran, 8bitmp3, Aakar, Aakar Dwivedi, Abinash Satapathy, Aditya Kane, ag.ramesh, Alexander Grund, Andrei Pikas, andreii, Andrew Goodbody, angerson, Anthony_256, Ashay Rane, Ashiq Imran, Awsaf, Balint Cristian, Banikumar Maiti (Intel Aipg), Ben Barsdell, bhack, cfRod, Chao Chen, chenchongsong, Chris Mc, Daniil Kutz, David Rubinstein, dianjiaogit, dixr, Dongfeng Yu, dongfengy, drah, Eric Kunze, Feiyue Chen, Frederic Bastien, Gauri1 Deshpande, guozhong.zhuang, hDn248, HYChou, ingkarat, James Hilliard, Jason Furmanek, Jaya, Jens Glaser, Jerry Ge, Jiao Dian'S Power Plant, Jie Fu, Jinzhe Zeng, Jukyy, Kaixi Hou, Kanvi Khanna, Karel Ha, karllessard, Koan-Sin Tan, Konstantin Beluchenko, Kulin Seth, Kun Lu, Kyle Gerard Felker, Leopold Cambier, Lianmin Zheng, linlifan, liuyuanqiang, Lukas Geiger, Luke Hutton, Mahmoud Abuzaina, Manas Mohanty, Mateo Fidabel, Maxiwell S. Garcia, Mayank Raunak, mdfaijul, meatybobby, Meenakshi Venkataraman, Michael Holman, Nathan John Sircombe, Nathan Luehr, nitins17, Om Thakkar, Patrice Vignola, Pavani Majety, per1234, Philipp Hack, pollfly, Prianka Liz Kariat, Rahul Batra, rahulbatra85, ratnam.parikh, Rickard Hallerb\u00e4ck, Roger Iyengar, Rohit Santhanam, Roman Baranchuk, Sachin Muradi, sanadani, Saoirse Stewart, seanshpark, Shawn Wang, shuw, Srinivasan Narayanamoorthy, Stewart Miles, Sunita Nadampalli, SuryanarayanaY, Takahashi Shuuji, Tatwai Chong, Thibaut Goetghebuer-Planchon, tilakrayal, Tirumalesh, TJ, Tony Sung, Trevor Morris, unda, Vertexwahn, venkat2469, William Muir, Xavier Bonaventura, xiang.zhang, Xiao-Yong Jin, yleeeee, Yong Tang, Yuriy Chernyshov, Zhang, Xiangze, zhaozheng09", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.13.0-rc2", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.13.0-rc2", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.13.0-rc2", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/109590943", "release_id": 109590943, "date_created": "2023-06-16T19:39:23Z", "date_published": "2023-06-22T18:05:19Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/105406249", "tag": "v2.13.0-rc1", "name": "TensorFlow 2.13.0-rc1", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.13.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* The LMDB kernels have been changed to return an error. This is in preparation for completely removing them from TensorFlow. The LMDB dependency that these kernels are bringing to TensorFlow has been dropped, thus making the build slightly faster and more secure.\r\n\r\n### Major Features and Improvements\r\n\r\n*   `tf.lite`\r\n\r\n    *   Added 16-bit and 64-bit float type support for built-in op `cast`.\r\n    *   The Python TF Lite Interpreter bindings now have an option `experimental_disable_delegate_clustering` to turn-off delegate clustering.\r\n    *   Added int16x8 support for the built-in op `exp`\r\n    *   Added int16x8 support for the built-in op `mirror_pad`\r\n    *   Added int16x8 support for the built-in ops `space_to_batch_nd` and `batch_to_space_nd`\r\n    *   Added 16-bit int type support for built-in op `less`, `greater_than`, `equal`\r\n    *   Added 8-bit and 16-bit support for `floor_div` and `floor_mod`.\r\n    *   Added 16-bit and 32-bit int support for the built-in op `bitcast`.\r\n    *   Added 8-bit/16-bit/32-bit int/uint support for the built-in op `bitwise_xor`\r\n    *   Added int16 indices support for built-in op `gather` and `gather_nd`.\r\n    *   Added 8-bit/16-bit/32-bit int/uint support for the built-in op `right_shift`\r\n    *   Added reference implementation for 16-bit int unquantized `add`.\r\n    *   Added reference implementation for 16-bit int and 32-bit unsigned int unquantized `mul`.\r\n    *   `add_op` supports broadcasting up to 6 dimensions.\r\n    *   Added 16-bit support for `top_k`.\r\n    \r\n*   `tf.function`\r\n\r\n    *   ConcreteFunction (`tf.types.experimental.ConcreteFunction`) as generated through `get_concrete_function` now performs holistic input validation similar to calling `tf.function` directly. This can cause breakages where existing calls pass Tensors with the wrong shape or omit certain non-Tensor arguments (including default values).\r\n\r\n*   `tf.nn`\r\n\r\n    *   `tf.nn.embedding_lookup_sparse` and `tf.nn.safe_embedding_lookup_sparse` now support ids and weights described by `tf.RaggedTensor`s.\r\n    *   Added a new boolean argument `allow_fast_lookup` to `tf.nn.embedding_lookup_sparse` and `tf.nn.safe_embedding_lookup_sparse`, which enables a simplified and typically faster lookup procedure.\r\n\r\n*   `tf.data`\r\n\r\n    *   `tf.data.Dataset.zip` now supports Python-style zipping, i.e. `Dataset.zip(a, b, c)`.\r\n    * `tf.data.Dataset.shuffle` now supports `tf.data.UNKNOWN_CARDINALITY` When doing a \"full shuffle\" using  `dataset = dataset.shuffle(dataset.cardinality())`. But remember, a \"full shuffle\" will load the full dataset into memory so that it can be shuffled, so make sure to only use this with small datasets or datasets of small objects (like filenames).\r\n\r\n*   `tf.math`\r\n\r\n    * `tf.nn.top_k` now supports specifying the output index type via parameter `index_type`.  Supported types are `tf.int16`, `tf.int32` (default), and `tf.int64`.\r\n\r\n*   `tf.SavedModel`\r\n\r\n    *   Introduced class method `tf.saved_model.experimental.Fingerprint.from_proto(proto)`, which can be used to construct a `Fingerprint` object directly from a protobuf.\r\n    *   Introduced member method `tf.saved_model.experimental.Fingerprint.singleprint()`, which provides a convenient way to uniquely identify a SavedModel.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   `tf.Variable`\r\n\r\n    *   Changed resource variables to inherit from `tf.compat.v2.Variable` instead of `tf.compat.v1.Variable`. Some checks for `isinstance(v, tf compat.v1.Variable)` that previously returned True may now return False.\r\n\r\n*   `tf.distribute`\r\n\r\n    *   Opened an experimental API, `tf.distribute.experimental.coordinator.get_current_worker_index`, for retrieving the worker index from within a worker, when using parameter server training with a custom training loop.\r\n\r\n*   `tf.experimental.dtensor`\r\n\r\n    *   Deprecated `dtensor.run_on` in favor of `dtensor.default_mesh` to correctly indicate that the context does not override the mesh that the ops and functions will run on, it only sets a fallback default mesh.\r\n    *   List of members of `dtensor.Layout` and `dtensor.Mesh` have slightly changed as part of efforts to consolidate the C++ and Python source code with pybind11. Most notably, `dtensor.Layout.serialized_string` is removed.\r\n    *   Minor API changes to represent Single Device Layout for non-distributed Tensors inside DTensor functions. Runtime support will be added soon.\r\n\r\n*   `tf.experimental.ExtensionType`\r\n\r\n    *   `tf.experimental.ExtensionType` now supports Python `tuple` as the type annotation of its fields.\r\n\r\n*   `tf.nest`\r\n\r\n    *   Deprecated API `tf.nest.is_sequence` has now been deleted. Please use `tf.nest.is_nested` instead.\r\n\r\n## Keras\r\n\r\nKeras is a framework built on top of the TensorFlow. See more details on the [Keras website](https://keras.io/).\r\n\r\n### Breaking Changes\r\n\r\n*  Removed the Keras scikit-learn API wrappers (`KerasClassifier` and `KerasRegressor`), which had been deprecated in August 2021. We recommend using [SciKeras](https://github.com/adriangb/scikeras) instead.\r\n*  The default Keras model saving format is now the Keras v3 format: calling `model.save(\"xyz.keras\")` will no longer create a H5 file, it will create a native Keras model file. This will only be breaking for you if you were manually inspecting or modifying H5 files saved by Keras under a `.keras` extension. If this breaks you, simply add `save_format=\"h5\"` to your `.save()` call to revert back to the prior behavior.\r\n*  Added `keras.utils.TimedThread` utility to run a timed thread every x seconds. It can be used to run a threaded function alongside model training or any other snippet of code.\r\n*  In the `keras` PyPI package, accessible symbols are now restricted to symbols that are intended to be public. This may affect your code if you were using `import keras` and you used `keras` functions that were not public APIs, but were accessible in earlier versions with direct imports. In those cases, please use the following guideline:\r\n        -  The API may be available in the public Keras API under a different name, so make sure to look for it on keras.io or TensorFlow docs and switch to the public version.\r\n        -  It could also be a simple python or TF utility that you could easily copy over to your own codebase. In those case, just make it your own!\r\n        -  If you believe it should definitely be a public Keras API, please open a feature request in keras GitHub repo.\r\n        -  As a workaround, you could import the same private symbol keras `keras.src`, but keep in mind the `src` namespace is not stable and those APIs may change or be removed in the future.\r\n\r\n### Major Features and Improvements\r\n\r\n*   Added F-Score metrics `tf.keras.metrics.FBetaScore`, `tf.keras.metrics.F1Score`, and `tf.keras.metrics.R2Score`.\r\n*   Added activation function `tf.keras.activations.mish`.\r\n*   Added experimental `keras.metrics.experimental.PyMetric` API for metrics that run Python code on the host CPU (compiled outside of the TensorFlow graph). This can be used for integrating metrics from external Python libraries (like sklearn or pycocotools) into Keras as first-class Keras metrics.\r\n*   Added `tf.keras.optimizers.Lion` optimizer.\r\n*   Added `tf.keras.layers.SpectralNormalization` layer wrapper to perform spectral normalization on the weights of a target layer.\r\n*   The `SidecarEvaluatorModelExport` callback has been added to Keras as `keras.callbacks.SidecarEvaluatorModelExport`. This callback allows for exporting the model the best-scoring model as evaluated by a `SidecarEvaluator` evaluator. The evaluator regularly evaluates the model and exports it if the user-defined comparison function determines that it is an improvement.\r\n*   Added warmup capabilities to `tf.keras.optimizers.schedules.CosineDecay` learning rate scheduler. You can now specify an initial and target learning rate, and our scheduler will perform a linear interpolation between the two after which it will begin a decay phase.\r\n*   Added experimental support for an exactly-once visitation guarantee for evaluating Keras models trained with `tf.distribute ParameterServerStrategy`, via the `exact_evaluation_shards` argument in `Model.fit` and `Model.evaluate`.\r\n*   Added `tf.keras.__internal__.KerasTensor`,`tf.keras.__internal__.SparseKerasTensor`, and `tf.keras.__internal__.RaggedKerasTensor` classes. You can use these classes to do instance type checking and type annotations for layer/model inputs and outputs.\r\n*   All the `tf.keras.dtensor.experimental.optimizers` classes have been merged with `tf.keras.optimizers`. You can migrate your code to use `tf.keras.optimizers` directly. The API namespace for `tf.keras.dtensor.experimental.optimizers` will be removed in future releases.\r\n*   Added support for `class_weight` for 3+ dimensional targets (e.g. image segmentation masks) in `Model.fit`.\r\n*   Added a new loss, `keras.losses.CategoricalFocalCrossentropy`.\r\n*   Remove the `tf.keras.dtensor.experimental.layout_map_scope()`. You can user the `tf.keras.dtensor.experimental.LayoutMap.scope()` instead.\r\n\r\n## Security\r\n\r\n*   N/A\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\n103yiran, 8bitmp3, Aakar, Aakar Dwivedi, Abinash Satapathy, Aditya Kane, ag.ramesh, Alexander Grund, Andrei Pikas, andreii, Andrew Goodbody, angerson, Anthony_256, Ashay Rane, Ashiq Imran, Awsaf, Balint Cristian, Banikumar Maiti (Intel Aipg), Ben Barsdell, bhack, cfRod, Chao Chen, chenchongsong, Chris Mc, Daniil Kutz, David Rubinstein, dianjiaogit, dixr, Dongfeng Yu, dongfengy, drah, Eric Kunze, Feiyue Chen, Frederic Bastien, Gauri1 Deshpande, guozhong.zhuang, hDn248, HYChou, ingkarat, James Hilliard, Jason Furmanek, Jaya, Jens Glaser, Jerry Ge, Jiao Dian'S Power Plant, Jie Fu, Jinzhe Zeng, Jukyy, Kaixi Hou, Kanvi Khanna, Karel Ha, karllessard, Koan-Sin Tan, Konstantin Beluchenko, Kulin Seth, Kun Lu, Kyle Gerard Felker, Leopold Cambier, Lianmin Zheng, linlifan, liuyuanqiang, Lukas Geiger, Luke Hutton, Mahmoud Abuzaina, Manas Mohanty, Mateo Fidabel, Maxiwell S. Garcia, Mayank Raunak, mdfaijul, meatybobby, Meenakshi Venkataraman, Michael Holman, Nathan John Sircombe, Nathan Luehr, nitins17, Om Thakkar, Patrice Vignola, Pavani Majety, per1234, Philipp Hack, pollfly, Prianka Liz Kariat, Rahul Batra, rahulbatra85, ratnam.parikh, Rickard Hallerb\u00e4ck, Roger Iyengar, Rohit Santhanam, Roman Baranchuk, Sachin Muradi, sanadani, Saoirse Stewart, seanshpark, Shawn Wang, shuw, Srinivasan Narayanamoorthy, Stewart Miles, Sunita Nadampalli, SuryanarayanaY, Takahashi Shuuji, Tatwai Chong, Thibaut Goetghebuer-Planchon, tilakrayal, Tirumalesh, TJ, Tony Sung, Trevor Morris, unda, Vertexwahn, venkat2469, William Muir, Xavier Bonaventura, xiang.zhang, Xiao-Yong Jin, yleeeee, Yong Tang, Yuriy Chernyshov, Zhang, Xiangze, zhaozheng09", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.13.0-rc1", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.13.0-rc1", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.13.0-rc1", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/105406249", "release_id": 105406249, "date_created": "2023-05-26T00:14:50Z", "date_published": "2023-05-30T17:38:45Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/102379125", "tag": "v2.13.0-rc0", "name": "TensorFlow 2.13.0-rc0", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.13.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n* The LMDB kernels have been changed to return an error. This is in preparation for completely removing them from TensorFlow. The LMDB dependency that these kernels are bringing to TensorFlow has been dropped, thus making the build slightly faster and more secure.\r\n\r\n### Major Features and Improvements\r\n\r\n*   `tf.lite`\r\n\r\n    *   Add 16-bit and 64-bit float type support for built-in op `cast`.\r\n    *   The Python TF Lite Interpreter bindings now have an option `experimental_disable_delegate_clustering` to turn-off delegate clustering.\r\n    *   Add int16x8 support for the built-in op `exp`\r\n    *   Add int16x8 support for the built-in op `mirror_pad`\r\n    *   Add int16x8 support for the built-in ops `space_to_batch_nd` and `batch_to_space_nd`\r\n    *   Add 16-bit int type support for built-in op `less`, `greater_than`, `equal`\r\n    *   Add 8-bit and 16-bit support for `floor_div` and `floor_mod`.\r\n    *   Add 16-bit and 32-bit int support for the built-in op `bitcast`.\r\n    *   Add 8-bit/16-bit/32-bit int/uint support for the built-in op `bitwise_xor`\r\n    *   Add int16 indices support for built-in op `gather` and `gather_nd`.\r\n    *   Add 8-bit/16-bit/32-bit int/uint support for the built-in op `right_shift`\r\n    *   Add reference implementation for 16-bit int unquantized `add`.\r\n    *   Add reference implementation for 16-bit int and 32-bit unsigned int unquantized `mul`.\r\n    *   `add_op` supports broadcasting up to 6 dimensions.\r\n    *   Add 16-bit support for `top_k`.\r\n    \r\n*   `tf.function`\r\n\r\n    *   ConcreteFunction (`tf.types.experimental.ConcreteFunction`) as generated through `get_concrete_function` now performs holistic input validation similar to calling `tf.function` directly. This can cause breakages where existing calls pass Tensors with the wrong shape or omit certain non-Tensor arguments (including default values).\r\n\r\n*   `tf.nn`\r\n\r\n    *   `tf.nn.embedding_lookup_sparse` and `tf.nn.safe_embedding_lookup_sparse` now support ids and weights described by `tf.RaggedTensor`s.\r\n    *   Added a new boolean argument `allow_fast_lookup` to `tf.nn.embedding_lookup_sparse` and `tf.nn.safe_embedding_lookup_sparse`, which enables a simplified and typically faster lookup procedure.\r\n\r\n*   `tf.data`\r\n\r\n    *   `tf.data.Dataset.zip` now supports Python-style zipping, i.e. `Dataset.zip(a, b, c)`.\r\n    *   `tf.data.Dataset.shuffle` now supports full shuffling. To specify that data should be fully shuffled, use `dataset = dataset.shuffle(dataset.cardinality())`. This will load the full dataset into memory so that it can be shuffled, so make sure to only use this with datasets of filenames or other small datasets.\r\n\r\n*   `tf.math`\r\n\r\n    * `tf.nn.top_k` now supports specifying the output index type via parameter `index_type`.  Supported types are `tf.int16`, `tf.int32` (default), and `tf.int64`.\r\n\r\n*   `tf.SavedModel`\r\n\r\n    *   Introduce class method `tf.saved_model.experimental.Fingerprint.from_proto(proto)`, which can be used to construct a `Fingerprint` object directly from a protobuf.\r\n    *   Introduce member method `tf.saved_model.experimental.Fingerprint.singleprint()`, which provides a convenient way to uniquely identify a SavedModel.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   `tf.Variable`\r\n\r\n    *   Changed resource variables to inherit from `tf.compat.v2.Variable` instead of `tf.compat.v1.Variable`. Some checks for `isinstance(v, tf compat.v1.Variable)` that previously returned True may now return False.\r\n\r\n*   `tf.distribute`\r\n\r\n    *   Opened an experimental API, `tf.distribute.experimental.coordinator.get_current_worker_index`, for retrieving the worker index from within a worker, when using parameter server training with a custom training loop.\r\n\r\n*   `tf.experimental.dtensor`\r\n\r\n    *   Deprecated `dtensor.run_on` in favor of `dtensor.default_mesh` to correctly indicate that the context does not override the mesh that the ops and functions will run on, it only sets a fallback default mesh.\r\n    *   List of members of dtensor.Layout and dtensor.Mesh have slightly changed as part of efforts to consolidate the C++ and Python source code with pybind11. Most notably, Layout.serialized_string is removed.\r\n    *   Minor API changes to represent Single Device Layout for non-distributed Tensors inside DTensor functions. Runtime support will be added soon.\r\n\r\n*   `tf.experimental.ExtensionType`\r\n\r\n    *   `tf.experimental.ExtensionType` now supports Python `tuple` as the type annotation of its fields.\r\n\r\n*   `tf.nest`\r\n\r\n    *   Deprecated API `tf.nest.is_sequence` has now been deleted. Please use `tf.nest.is_nested` instead.\r\n\r\n\r\n## Keras\r\n\r\nKeras is a framework built on top of the TensorFlow. See more details on the [Keras website](https://keras.io/).\r\n\r\n### Breaking Changes\r\n\r\n *  `tf.keras`\r\n\r\n    *  Removed the Keras scikit-learn API wrappers (`KerasClassifier` and `KerasRegressor`), which had been deprecated in August 2021. We recommend using [SciKeras](https://github.com/adriangb/scikeras) instead.\r\n    *  The default Keras model saving format is now the Keras v3 format: calling `model.save(\"xyz.keras\")` will no longer create a H5 file, it will create a native Keras model file. This will only be breaking for you if you were manually inspecting or modifying H5 files saved by Keras under a `.keras` extension. If this breaks you, simply add `save_format=\"h5\"` to your `.save()` call to revert back to the prior behavior.\r\n    *  Added `keras.utils.TimedThread` utility to run a timed thread every x seconds. It can be used to run a threaded function alongside model training or any other snippet of code.\r\n    *  In the `keras` PyPI package, accessible symbols are now restricted to symbols that are intended to be public. This may affect your code if you were using `import keras` and you used `keras` functions that were not public APIs, but were accessible in earlier versions with direct imports. In those cases, please use the following guideline:\r\n        -  The API may be available in the public Keras API under a different name, so make sure to look for it on keras.io or TensorFlow docs and switch to the public version.\r\n        -  It could also be a simple python or TF utility that you could easily copy over to your own codebase. In those case, just make it your own!\r\n        -  If you believe it should definitely be a public Keras API, please open a feature request in keras GitHub repo.\r\n        -  As a workaround, you could import the same private symbol keras `keras.src`, but keep in mind the `src` namespace is not stable and those APIs may change or be removed in the future.\r\n\r\n### Major Features and Improvements\r\n\r\n*   `tf.keras`\r\n\r\n    *   Added F-Score metrics `tf.keras.metrics.FBetaScore`, `tf.keras.metrics.F1Score`, and `tf.keras.metrics.R2Score`.\r\n    *   Added activation function `tf.keras.activations.mish`.\r\n    *   Added experimental `keras.metrics.experimental.PyMetric` API for metrics that run Python code on the host CPU (compiled outside of the TensorFlow graph). This can be used for integrating metrics from external Python libraries (like sklearn or pycocotools) into Keras as first-class Keras metrics.\r\n    *   Added `tf.keras.optimizers.Lion` optimizer.\r\n    *   Added `tf.keras.layers.SpectralNormalization` layer wrapper to perform spectral normalization on the weights of a target layer.\r\n    *   The `SidecarEvaluatorModelExport` callback has been added to Keras as `keras.callbacks.SidecarEvaluatorModelExport`. This callback allows for exporting the model the best-scoring model as evaluated by a `SidecarEvaluator` evaluator. The evaluator regularly evaluates the model and exports it if the user-defined comparison function determines that it is an improvement.\r\n    *   Added warmup capabilities to `tf.keras.optimizers.schedules.CosineDecay` learning rate scheduler. You can now specify an initial and target learning rate, and our scheduler will perform a linear interpolation between the two after which it will begin a decay phase.\r\n    *   Added experimental support for an exactly-once visitation guarantee for evaluating Keras models trained with `tf.distribute ParameterServerStrategy`, via the `exact_evaluation_shards` argument in `Model.fit` and `Model.evaluate`.\r\n    *   Added `tf.keras.__internal__.KerasTensor`,`tf.keras.__internal__.SparseKerasTensor`, and `tf.keras.__internal__.RaggedKerasTensor` classes. You can use these classes to do instance type checking and type annotations for layer/model inputs and outputs.\r\n    *   All the `tf.keras.dtensor.experimental.optimizers` classes have been merged with `tf.keras.optimizers`. You can migrate your code to use `tf.keras.optimizers` directly. The API namespace for `tf.keras.dtensor.experimental.optimizers` will be removed in future releases.\r\n    *   Added support for `class_weight` for 3+ dimensional targets (e.g. image segmentation masks) in `Model.fit`.\r\n    *   Added a new loss, `keras.losses.CategoricalFocalCrossentropy`.\r\n    *   Remove the `tf.keras.dtensor.experimental.layout_map_scope()`. You can user the `tf.keras.dtensor.experimental.LayoutMap.scope()` instead.\r\n\r\n## Security\r\n\r\n*   N/A\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\n103yiran, 8bitmp3, Aakar, Aakar Dwivedi, Abinash Satapathy, Aditya Kane, ag.ramesh, Alexander Grund, Andrei Pikas, andreii, Andrew Goodbody, angerson, Anthony_256, Ashay Rane, Ashiq Imran, Awsaf, Balint Cristian, Banikumar Maiti (Intel Aipg), Ben Barsdell, bhack, cfRod, Chao Chen, chenchongsong, Chris Mc, Daniil Kutz, David Rubinstein, dianjiaogit, dixr, Dongfeng Yu, dongfengy, drah, Eric Kunze, Feiyue Chen, Frederic Bastien, Gauri1 Deshpande, guozhong.zhuang, hDn248, HYChou, ingkarat, James Hilliard, Jason Furmanek, Jaya, Jens Glaser, Jerry Ge, Jiao Dian'S Power Plant, Jie Fu, Jinzhe Zeng, Jukyy, Kaixi Hou, Kanvi Khanna, Karel Ha, karllessard, Koan-Sin Tan, Konstantin Beluchenko, Kulin Seth, Kun Lu, Kyle Gerard Felker, Leopold Cambier, Lianmin Zheng, linlifan, liuyuanqiang, Lukas Geiger, Luke Hutton, Mahmoud Abuzaina, Manas Mohanty, Mateo Fidabel, Maxiwell S. Garcia, Mayank Raunak, mdfaijul, meatybobby, Meenakshi Venkataraman, Michael Holman, Nathan John Sircombe, Nathan Luehr, nitins17, Om Thakkar, Patrice Vignola, Pavani Majety, per1234, Philipp Hack, pollfly, Prianka Liz Kariat, Rahul Batra, rahulbatra85, ratnam.parikh, Rickard Hallerb\u00e4ck, Roger Iyengar, Rohit Santhanam, Roman Baranchuk, Sachin Muradi, sanadani, Saoirse Stewart, seanshpark, Shawn Wang, shuw, Srinivasan Narayanamoorthy, Stewart Miles, Sunita Nadampalli, SuryanarayanaY, Takahashi Shuuji, Tatwai Chong, Thibaut Goetghebuer-Planchon, tilakrayal, Tirumalesh, TJ, Tony Sung, Trevor Morris, unda, Vertexwahn, venkat2469, William Muir, Xavier Bonaventura, xiang.zhang, Xiao-Yong Jin, yleeeee, Yong Tang, Yuriy Chernyshov, Zhang, Xiangze, zhaozheng09", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.13.0-rc0", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.13.0-rc0", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.13.0-rc0", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/102379125", "release_id": 102379125, "date_created": "2023-05-05T21:50:40Z", "date_published": "2023-05-09T19:47:35Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/96657636", "tag": "v2.12.0", "name": "TensorFlow 2.12.0", "author": {"name": "mihaimaruseac", "type": "User"}, "description": "# Release 2.12.0\r\n\r\n## TensorFlow\r\n\r\n### Breaking Changes\r\n\r\n*   Build, Compilation and Packaging\r\n\r\n    *   Removed redundant packages `tensorflow-gpu` and `tf-nightly-gpu`. These packages were removed and replaced with packages that direct users to switch to `tensorflow` or `tf-nightly` respectively. Since TensorFlow 2.1, the only difference between these two sets of packages was their names, so there is no loss of functionality or GPU support. See https://pypi.org/project/tensorflow-gpu for more details.\r\n\r\n*   `tf.function`:\r\n\r\n    *   `tf.function` now uses the Python inspect library directly for parsing the signature of the Python function it is decorated on. This change may break code where the function signature is malformed, but was ignored previously, such as:\r\n        *   Using `functools.wraps` on a function with different signature\r\n        *   Using `functools.partial` with an invalid `tf.function` input\r\n    *   `tf.function` now enforces input parameter names to be valid Python identifiers. Incompatible names are automatically sanitized similarly to existing SavedModel signature behavior.\r\n    *   Parameterless `tf.function`s are assumed to have an empty `input_signature` instead of an undefined one even if the `input_signature` is unspecified.\r\n    *   `tf.types.experimental.TraceType` now requires an additional `placeholder_value` method to be defined.\r\n    *   `tf.function` now traces with placeholder values generated by TraceType instead of the value itself.\r\n\r\n*   Experimental APIs `tf.config.experimental.enable_mlir_graph_optimization` and `tf.config.experimental.disable_mlir_graph_optimization` were removed.\r\n\r\n### Major Features and Improvements\r\n\r\n*  Support for Python 3.11 has been added.\r\n*  Support for Python 3.7 has been removed. We are not releasing any more patches for Python 3.7.\r\n\r\n*   `tf.lite`:\r\n\r\n    *   Add 16-bit float type support for built-in op `fill`.\r\n    *   Transpose now supports 6D tensors.\r\n    *   Float LSTM now supports diagonal recurrent tensors: https://arxiv.org/abs/1903.08023\r\n\r\n*   `tf.experimental.dtensor`:\r\n\r\n    *   Coordination service now works with `dtensor.initialize_accelerator_system`, and enabled by default.\r\n    *   Add `tf.experimental.dtensor.is_dtensor` to check if a tensor is a DTensor instance.\r\n\r\n*   `tf.data`:\r\n\r\n    *   Added support for alternative checkpointing protocol which makes it possible to checkpoint the state of the input pipeline without having to store the contents of internal buffers. The new functionality can be enabled through the `experimental_symbolic_checkpoint` option of `tf.data.Options()`.\r\n    *   Added a new `rerandomize_each_iteration` argument for the `tf.data.Dataset.random()` operation, which controls whether the sequence of generated random numbers should be re-randomized every epoch or not (the default behavior). If `seed` is set and `rerandomize_each_iteration=True`, the `random()` operation will produce a different (deterministic) sequence of numbers every epoch.\r\n    *   Added a new `rerandomize_each_iteration` argument for the `tf.data.Dataset.sample_from_datasets()` operation, which controls whether the sequence of generated random numbers used for sampling should be re-randomized every epoch or not. If `seed` is set and `rerandomize_each_iteration=True`, the `sample_from_datasets()` operation will use a different (deterministic) sequence of numbers every epoch.\r\n\r\n*   `tf.test`:\r\n\r\n    *   Added `tf.test.experimental.sync_devices`, which is useful for accurately measuring performance in benchmarks.\r\n\r\n*   `tf.experimental.dtensor`:\r\n\r\n    *   Added experimental support to ReduceScatter fuse on GPU (NCCL).\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   `tf.SavedModel`:\r\n    * Introduced new class `tf.saved_model.experimental.Fingerprint` that contains the fingerprint of the SavedModel. See the [SavedModel Fingerprinting RFC](https://github.com/tensorflow/community/pull/415) for details.\r\n    * Introduced API `tf.saved_model.experimental.read_fingerprint(export_dir)` for reading the fingerprint of a SavedModel.\r\n* `tf.random`\r\n  * Added non-experimental aliases for `tf.random.split` and `tf.random.fold_in`, the experimental endpoints are still available so no code changes are necessary.\r\n* `tf.experimental.ExtensionType`\r\n  * Added function `experimental.extension_type.as_dict()`, which converts an instance of `tf.experimental.ExtensionType` to a `dict` representation.\r\n* `stream_executor`\r\n  * Top level `stream_executor` directory has been deleted, users should use equivalent headers and targets under `compiler/xla/stream_executor`.\r\n* `tf.nn`\r\n  * Added `tf.nn.experimental.general_dropout`, which is similar to `tf.random.experimental.stateless_dropout` but accepts a custom sampler function.\r\n* `tf.types.experimental.GenericFunction`\r\n  * The `experimental_get_compiler_ir` method supports tf.TensorSpec compilation arguments.\r\n*  `tf.config.experimental.mlir_bridge_rollout`\r\n    *   Removed enums `MLIR_BRIDGE_ROLLOUT_SAFE_MODE_ENABLED` and `MLIR_BRIDGE_ROLLOUT_SAFE_MODE_FALLBACK_ENABLED` which are no longer used by the tf2xla bridge\r\n\r\n## Keras\r\n\r\n Keras is a framework built on top of the TensorFlow. See more details on the Keras [website](https://keras.io/).\r\n\r\n### Breaking Changes\r\n\r\n\r\n`tf.keras`:\r\n\r\n* Moved all saving-related utilities to a new namespace, `keras.saving`, for example: `keras.saving.load_model`, `keras.saving.save_model`, `keras.saving.custom_object_scope`, `keras.saving.get_custom_objects`, `keras.saving.register_keras_serializable`,`keras.saving.get_registered_name` and `keras.saving.get_registered_object`. The previous API locations (in `keras.utils` and `keras.models`) will be available indefinitely, but we recommend you update your code to point to the new API locations.\r\n * Improvements and fixes in Keras loss masking:\r\n    * Whether you represent a ragged tensor as a `tf.RaggedTensor` or using [keras masking](https://www.tensorflow.org/guide/keras/masking_and_padding), the returned loss values should be the identical to each other. In previous versions Keras may have silently ignored the mask.\r\n * If you use masked losses with Keras the loss values may be different in TensorFlow `2.12` compared to previous versions.\r\n * In cases where the mask was previously ignored, you will now get an error if you pass a mask with an incompatible shape.\r\n\r\n### Major Features and Improvements     \r\n\r\n`tf.keras`:\r\n\r\n *   The new Keras model saving format (`.keras`) is available. You can start using it via `model.save(f\"{fname}.keras\", save_format=\"keras_v3\")`. In the future it will become the default for all files with the `.keras` extension. This file format targets the Python runtime only and makes it possible to reload Python objects identical to the saved originals. The format supports non-numerical state such as vocabulary files and lookup tables, and it is easy to customize in the case of custom layers with exotic elements of state (e.g. a FIFOQueue). The format does not rely on bytecode or pickling, and is safe by default. Note that as a result, Python `lambdas` are disallowed at loading time. If you want to use `lambdas`, you can pass `safe_mode=False` to the loading method (only do this if you trust the source of the model).\r\n*   Added a `model.export(filepath)` API to create a lightweight SavedModel artifact that can be used for inference (e.g. with TF-Serving).\r\n*   Added `keras.export.ExportArchive` class for low-level customization of the process of exporting SavedModel artifacts for inference. Both ways of exporting models are based on `tf.function` tracing and produce a TF program composed of TF ops. They are meant primarily for environments where the TF runtime is available, but not the Python interpreter, as is typical for production with TF Serving.\r\n *   Added utility `tf.keras.utils.FeatureSpace`, a one-stop shop for structured data preprocessing and encoding.\r\n *   Added `tf.SparseTensor` input support to `tf.keras.layers.Embedding` layer. The layer now accepts a new boolean argument `sparse`. If `sparse` is set to True, the layer returns a SparseTensor instead of a dense Tensor. Defaults to False.\r\n *   Added `jit_compile` as a settable property to `tf.keras.Model`.\r\n *   Added `synchronized` optional parameter to `layers.BatchNormalization`.\r\n *   Added deprecation warning to `layers.experimental.SyncBatchNormalization` and suggested to use `layers.BatchNormalization` with `synchronized=True` instead.\r\n *   Updated `tf.keras.layers.BatchNormalization` to support masking of the inputs (`mask` argument) when computing the mean and variance.\r\n *   Add `tf.keras.layers.Identity`, a placeholder pass-through layer.\r\n *   Add `show_trainable` option to `tf.keras.utils.model_to_dot` to display layer trainable status in model plots.\r\n *   Add ability to save a `tf.keras.utils.FeatureSpace` object, via `feature_space.save(\"myfeaturespace.keras\")`, and reload it via `feature_space = tf.keras.models.load_model(\"myfeaturespace.keras\")`.\r\n*   Added utility `tf.keras.utils.to_ordinal` to convert class vector to ordinal regression / classification matrix.\r\n\r\n### Bug Fixes and Other Changes\r\n\r\n*   N/A\r\n\r\n## Security\r\n\r\n*   Fixes an FPE in TFLite in conv kernel [CVE-2023-27579](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27579)\r\n*   Fixes a double free in Fractional(Max/Avg)Pool [CVE-2023-25801](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25801)\r\n*   Fixes a null dereference on ParallelConcat with XLA [CVE-2023-25676](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25676)\r\n*   Fixes a segfault in Bincount with XLA [CVE-2023-25675](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25675)\r\n*   Fixes an NPE in RandomShuffle with XLA enable [CVE-2023-25674](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25674)\r\n*   Fixes an FPE in TensorListSplit with XLA [CVE-2023-25673](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25673)\r\n*   Fixes segmentation fault in tfg-translate [CVE-2023-25671](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25671)\r\n*   Fixes an NPE in QuantizedMatMulWithBiasAndDequantize [CVE-2023-25670](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25670)\r\n*   Fixes an FPE in AvgPoolGrad with XLA [CVE-2023-25669](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25669)\r\n*   Fixes a heap out-of-buffer read vulnerability in the QuantizeAndDequantize operation [CVE-2023-25668](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25668)\r\n*   Fixes a segfault when opening multiframe gif [CVE-2023-25667](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25667)\r\n*   Fixes an NPE in SparseSparseMaximum [CVE-2023-25665](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25665)\r\n*   Fixes an FPE in AudioSpectrogram [CVE-2023-25666](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25666)\r\n*   Fixes a heap-buffer-overflow in AvgPoolGrad  [CVE-2023-25664](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25664)\r\n*   Fixes a NPE in TensorArrayConcatV2  [CVE-2023-25663](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25663)\r\n*   Fixes a Integer overflow in EditDistance  [CVE-2023-25662](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25662)\r\n*   Fixes a Seg fault in `tf.raw_ops.Print` [CVE-2023-25660](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25660)\r\n*   Fixes a OOB read in DynamicStitch [CVE-2023-25659](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25659)\r\n*   Fixes a OOB Read in GRUBlockCellGrad [CVE-2023-25658](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25658)\r\n\r\n## Thanks to our Contributors\r\n\r\nThis release contains contributions from many people at Google, as well as:\r\n\r\n103yiran, 8bitmp3, Aakar, Aakar Dwivedi, Abinash Satapathy, Aditya Kane, ag.ramesh, Alexander Grund, Andrei Pikas, andreii, Andrew Goodbody, angerson, Anthony_256, Ashay Rane, Ashiq Imran, Awsaf, Balint Cristian, Banikumar Maiti (Intel Aipg), Ben Barsdell, bhack, cfRod, Chao Chen, chenchongsong, Chris Mc, Daniil Kutz, David Rubinstein, dianjiaogit, dixr, Dongfeng Yu, dongfengy, drah, Eric Kunze, Feiyue Chen, Frederic Bastien, Gauri1 Deshpande, guozhong.zhuang, hDn248, HYChou, ingkarat, James Hilliard, Jason Furmanek, Jaya, Jens Glaser, Jerry Ge, Jiao Dian'S Power Plant, Jie Fu, Jinzhe Zeng, Jukyy, Kaixi Hou, Kanvi Khanna, Karel Ha, karllessard, Koan-Sin Tan, Konstantin Beluchenko, Kulin Seth, Kun Lu, Kyle Gerard Felker, Leopold Cambier, Lianmin Zheng, linlifan, liuyuanqiang, Lukas Geiger, Luke Hutton, Mahmoud Abuzaina, Manas Mohanty, Mateo Fidabel, Maxiwell S. Garcia, Mayank Raunak, mdfaijul, meatybobby, Meenakshi Venkataraman, Michael Holman, Nathan John Sircombe, Nathan Luehr, nitins17, Om Thakkar, Patrice Vignola, Pavani Majety, per1234, Philipp Hack, pollfly, Prianka Liz Kariat, Rahul Batra, rahulbatra85, ratnam.parikh, Rickard Hallerb\u00e4ck, Roger Iyengar, Rohit Santhanam, Roman Baranchuk, Sachin Muradi, sanadani, Saoirse Stewart, seanshpark, Shawn Wang, shuw, Srinivasan Narayanamoorthy, Stewart Miles, Sunita Nadampalli, SuryanarayanaY, Takahashi Shuuji, Tatwai Chong, Thibaut Goetghebuer-Planchon, tilakrayal, Tirumalesh, TJ, Tony Sung, Trevor Morris, unda, Vertexwahn, Vinila S, William Muir, Xavier Bonaventura, xiang.zhang, Xiao-Yong Jin, yleeeee, Yong Tang, Yuriy Chernyshov, Zhang, Xiangze, zhaozheng09", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.12.0", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.12.0", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.12.0", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/96657636", "release_id": 96657636, "date_created": "2023-03-20T23:12:24Z", "date_published": "2023-03-23T15:50:02Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorflow/tensorflow/releases/96239505", "tag": "v2.11.1", "name": "TensorFlow 2.11.1", "author": {"name": "tensorflow-jenkins", "type": "User"}, "description": "# Release 2.11.1\r\n\r\n**Note**: TensorFlow 2.10 was the last TensorFlow release that supported GPU on native-Windows. Starting with TensorFlow 2.11, you will need to install TensorFlow in WSL2, or install tensorflow-cpu and, optionally, try the TensorFlow-DirectML-Plugin.\r\n*   Security vulnerability fixes will no longer be patched to this Tensorflow version. The latest Tensorflow version includes the security vulnerability fixes. You can update to the latest version (recommended) or patch security vulnerabilities yourself [steps](https://github.com/tensorflow/tensorflow#patching-guidelines). You can refer to the [release notes](https://github.com/tensorflow/tensorflow/releases) of the latest Tensorflow version for a list of newly fixed vulnerabilities. If you have any questions, please create a GitHub issue to let us know.\r\n\r\nThis release also introduces several vulnerability fixes:\r\n\r\n*   Fixes an FPE in TFLite in conv kernel [CVE-2023-27579](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27579)\r\n*   Fixes a double free in Fractional(Max/Avg)Pool [CVE-2023-25801](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25801)\r\n*   Fixes a null dereference on ParallelConcat with XLA [CVE-2023-25676](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25676)\r\n*   Fixes a segfault in Bincount with XLA [CVE-2023-25675](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25675)\r\n*   Fixes an NPE in RandomShuffle with XLA enable [CVE-2023-25674](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25674)\r\n*   Fixes an FPE in TensorListSplit with XLA [CVE-2023-25673](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25673)\r\n*   Fixes segmentation fault in tfg-translate [CVE-2023-25671](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25671)\r\n*   Fixes an NPE in QuantizedMatMulWithBiasAndDequantize [CVE-2023-25670](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25670)\r\n*   Fixes an FPE in AvgPoolGrad with XLA [CVE-2023-25669](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25669)\r\n*   Fixes a heap out-of-buffer read vulnerability in the QuantizeAndDequantize operation [CVE-2023-25668](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25668)\r\n*   Fixes a segfault when opening multiframe gif [CVE-2023-25667](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25667)\r\n*   Fixes an NPE in SparseSparseMaximum [CVE-2023-25665](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25665)\r\n*   Fixes an FPE in AudioSpectrogram [CVE-2023-25666](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25666)\r\n*   Fixes a heap-buffer-overflow in AvgPoolGrad  [CVE-2023-25664](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25664)\r\n*   Fixes a NPE in TensorArrayConcatV2  [CVE-2023-25663](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25663)\r\n*   Fixes a Integer overflow in EditDistance  [CVE-2023-25662](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25662)\r\n*   Fixes a Seg fault in `tf.raw_ops.Print` [CVE-2023-25660](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25660)\r\n*   Fixes a OOB read in DynamicStitch [CVE-2023-25659](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25659)\r\n*   Fixes a OOB Read in GRUBlockCellGrad [CVE-2023-25658](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-25658)", "tarball_url": "https://api.github.com/repos/tensorflow/tensorflow/tarball/v2.11.1", "zipball_url": "https://api.github.com/repos/tensorflow/tensorflow/zipball/v2.11.1", "html_url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.11.1", "url": "https://api.github.com/repos/tensorflow/tensorflow/releases/96239505", "release_id": 96239505, "date_created": "2023-03-16T17:20:00Z", "date_published": "2023-03-20T17:03:21Z"}, "confidence": 1, "technique": "GitHub_API"}], "citation": [{"result": {"value": "cff-version: 1.2.0\nmessage: \"If you use TensorFlow in your research, please cite it using these metadata. Software is available from tensorflow.org.\"\ntitle: TensorFlow, Large-scale machine learning on heterogeneous systems\nabstract: TensorFlow is a machine learning system that operates at large scale and in heterogeneous environments. TensorFlow uses dataflow graphs to represent computation, shared state, and the operations that mutate that state. It maps the nodes of a dataflow graph across many machines in a cluster, and within a machine across multiple computational devices, including multicore CPUs, general purpose GPUs, and custom-designed ASICs known as Tensor Processing Units (TPUs). This architecture gives flexibility to the application developer, whereas in previous \u201cparameter server\u201d designs the management of shared state is built into the system, TensorFlow enables developers to experiment with novel optimizations and training algorithms. TensorFlow supports a variety of applications, with a focus on training and inference on deep neural networks. Several Google services use TensorFlow in production, we have released it as an open-source project, and it has become widely used for machine learning research. In this paper, we describe the TensorFlow dataflow model and demonstrate the compelling performance that TensorFlow achieves for several real-world applications.\nauthors:\n  - family-names: Abadi\n    given-names: Mart\u00edn\n  - family-names: Agarwal\n    given-names: Ashish\n  - family-names: Barham\n    given-names: Paul\n  - family-names: Brevdo\n    given-names: Eugene\n  - family-names: Chen\n    given-names: Zhifeng\n  - family-names: Citro\n    given-names: Craig\n  - family-names: Corrado\n    given-names: Greg S.\n  - family-names: Davis\n    given-names: Andy\n  - family-names: Dean\n    given-names: Jeffrey\n  - family-names: Devin\n    given-names: Matthieu\n  - family-names: Ghemawat\n    given-names: Sanjay\n  - family-names: Goodfellow\n    given-names: Ian\n  - family-names: Harp\n    given-names: Andrew\n  - family-names: Irving\n    given-names: Geoffrey\n  - family-names: Isard\n    given-names: Michael\n  - family-names: Jozefowicz\n    given-names: Rafal\n  - family-names: Jia\n    given-names: Yangqing\n  - family-names: Kaiser\n    given-names: Lukasz\n  - family-names: Kudlur\n    given-names: Manjunath\n  - family-names: Levenberg\n    given-names: Josh\n  - family-names: Man\u00e9\n    given-names: Dan\n  - family-names: Schuster\n    given-names: Mike\n  - family-names: Monga\n    given-names: Rajat\n  - family-names: Moore\n    given-names: Sherry\n  - family-names: Murray\n    given-names: Derek\n  - family-names: Olah\n    given-names: Chris\n  - family-names: Shlens\n    given-names: Jonathon\n  - family-names: Steiner\n    given-names: Benoit\n  - family-names: Sutskever\n    given-names: Ilya\n  - family-names: Talwar\n    given-names: Kunal\n  - family-names: Tucker\n    given-names: Paul\n  - family-names: Vanhoucke\n    given-names: Vincent\n  - family-names: Vasudevan\n    given-names: Vijay\n  - family-names: Vi\u00e9gas\n    given-names: Fernanda\n  - family-names: Vinyals\n    given-names: Oriol\n  - family-names: Warden\n    given-names: Pete\n  - family-names: Wattenberg\n    given-names: Martin\n  - family-names: Wicke\n    given-names: Martin\n  - family-names: Yu\n    given-names: Yuan\n  - family-names: Zheng\n    given-names: Xiaoqiang\nidentifiers:\n  - type: doi\n    value: 10.5281/zenodo.4724125\n    description: The concept DOI for the collection containing all versions of the Citation File Format.\ndate-released: \"2015-11-09\"\nlicense: \"Apache-2.0\"\ndoi: 10.5281/zenodo.4724125\n \n", "type": "File_dump", "title": "TensorFlow, Large-scale machine learning on heterogeneous systems", "url": "https://doi.org/10.5281/zenodo.4724125", "doi": "10.5281/zenodo.4724125", "format": "cff"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/CITATION.cff"}], "code_of_conduct": [{"result": {"value": "# TensorFlow Code of Conduct\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of\nexperience, nationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n*   Using welcoming and inclusive language.\n*   Being respectful of differing viewpoints and experiences.\n*   Gracefully accepting constructive criticism.\n*   Focusing on what is best for the community.\n*   Showing empathy towards other community members.\n\nExamples of unacceptable behavior by participants include:\n\n*   The use of sexualized language or imagery and unwelcome sexual attention or\n    advances.\n*   Trolling, insulting/derogatory comments, and personal or political attacks.\n*   Public or private harassment.\n*   Publishing others' private information, such as a physical or electronic\n    address, without explicit permission.\n*   Conduct which could reasonably be considered inappropriate for the forum in\n    which it occurs.\n\nAll TensorFlow forums and spaces are meant for professional interactions, and any behavior which could reasonably be considered inappropriate in a professional setting is unacceptable.\n\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n\n## Scope\n\nThis Code of Conduct applies to all content on tensorflow.org, TensorFlow\u2019s GitHub organization, or any other official TensorFlow web presence allowing for community interactions, as well as at all official TensorFlow events, whether offline or online.\n\nThe Code of Conduct also applies within project spaces and in public spaces whenever an individual is representing TensorFlow or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed or de facto representative at an online or offline event. \n\n\n## Conflict Resolution\n\nConflicts in an open source project can take many forms, from someone having a bad day and using harsh and hurtful language in the issue queue, to more serious instances such as sexist/racist statements or threats of violence, and everything in between.\n\nIf the behavior is threatening or harassing, or for other reasons requires immediate escalation, please see below.\n\nHowever, for the vast majority of issues, we aim to empower individuals to first resolve conflicts themselves, asking for help when needed, and only after that fails to escalate further. This approach gives people more control over the outcome of their dispute. \n\nIf you are experiencing or witnessing conflict, we ask you to use the following escalation strategy to address the conflict:\n\n1.  Address the perceived conflict directly with those involved, preferably in a\n    real-time medium.\n2.  If this fails, get a third party (e.g. a mutual friend, and/or someone with\n    background on the issue, but not involved in the conflict) to intercede.\n3.  If you are still unable to resolve the conflict, and you believe it rises to\n    harassment or another code of conduct violation, report it.\n\n## Reporting Violations\n\nViolations of the Code of Conduct can be reported to TensorFlow\u2019s Project Stewards, Thea Lamkin (thealamkin@google.com) and Joana Carrasqueira (joanafilipa@google.com). The Project Steward will determine whether the Code of Conduct was violated, and will issue an appropriate sanction, possibly including a written warning or expulsion from the project, project sponsored spaces, or project forums. We ask that you make a good-faith effort to resolve your conflict via the conflict resolution policy before submitting a report.\n\nViolations of the Code of Conduct can occur in any setting, even those unrelated to the project. We will only consider complaints about conduct that has occurred within one year of the report.\n\n\n## Enforcement\n\nIf the Project Stewards receive a report alleging a violation of the Code of Conduct, the Project Stewards will notify the accused of the report, and provide them an opportunity to discuss the report before a sanction is issued. The Project Stewards will do their utmost to keep the reporter anonymous. If the act is ongoing (such as someone engaging in harassment), or involves a threat to anyone's safety (e.g. threats of violence), the Project Stewards may issue sanctions without notice.\n\n\n## Attribution\n\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at https://contributor-covenant.org/version/1/4, and includes some aspects of the Geek Feminism Code of Conduct and the Drupal Code of Conduct.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/CODE_OF_CONDUCT.md"}], "contributing_guidelines": [{"result": {"value": "# Contributing guidelines\n\n## Pull Request Checklist\n\nBefore sending your pull requests, make sure you do the following:\n\n-   Read the [contributing guidelines](CONTRIBUTING.md).\n-   Read the [Code of Conduct](CODE_OF_CONDUCT.md).\n-   Ensure you have signed the\n    [Contributor License Agreement (CLA)](https://cla.developers.google.com/).\n-   Check if your changes are consistent with the\n    [guidelines](#general-guidelines-and-philosophy-for-contribution).\n-   Changes are consistent with the [Coding Style](#c-coding-style).\n-   Run the [unit tests](#running-unit-tests).\n\n## How to become a contributor and submit your own code\n\n![Screen Shot 2022-08-30 at 7 27 04 PM](https://user-images.githubusercontent.com/42785357/187579207-9924eb32-da31-47bb-99f9-d8bf1aa238ad.png)\n\n### Typical Pull Request Workflow -\n\n**1. New PR**\n\n- As a contributor, you submit a New PR on GitHub.\n- We inspect every incoming PR and add certain labels to the PR such as `size:`,\n  `comp:` etc.  At this stage we check if the PR is valid and meets certain\n  quality requirements. For example, we check if the CLA is signed, PR has\n  sufficient description, if applicable unit tests are added, if it is a\n  reasonable contribution (meaning it is not a single liner cosmetic PR).\n\n**2. Valid?**\n\n-   If the PR passes all the quality checks then we go ahead and assign a\n    reviewer.\n-   If the PR didn't meet the validation criteria, we request for additional\n    changes to be made to PR to pass quality checks and send it back or on a\n    rare occasion we may reject it.\n\n**3. Review**\n\n-   For a valid PR, reviewer (person familiar with the code/functionality)\n    checks if the PR looks good or needs additional changes.\n-   If all looks good, the reviewer will approve the PR.\n-   If a change is needed, the contributor is requested to make the suggested\n    change.\n-   You make the change and submit it for the review again.\n-   This cycle repeats itself until the PR gets approved.\n-   Note: As a friendly reminder, we may reach out to you if the PR is awaiting\n    your response for more than 2 weeks.\n\n**4. Approved**\n\n-   Once the PR is approved, it gets `kokoro:force-run` label applied and it\n    initiates CI/CD tests.\n-   We can't move forward if these tests fail.\n-   In such situations, we may request you to make further changes to your PR\n    for the tests to pass.\n-   Once the tests pass, we now bring all the code into the internal code base,\n    using a job called \"copybara\".\n\n**5. Copy to Google Internal codebase and run internal CI**\n\n-   Once the PR is in the Google codebase, we make sure it integrates well with\n    its dependencies and the rest of the system.\n-   Rarely, If the tests fail at this stage, we cannot merge the code.\n-   If needed, we may come to you to make some changes. At times, it may not be\n    you, it may be us who may have hit a snag. Please be patient while we work\n    to fix this.\n-   Once the internal tests pass, we go ahead and merge the code internally as\n    well as externally on GitHub.\n\nIn a graphical form, the entire lifetime of a PR looks like\n\n![image](https://github.com/tensorflow/tensorflow/assets/52792999/3eea4ca5-daa0-4570-b0b5-2a2b03a724a3)\n\n### Contributor License Agreements\n\nWe'd love to accept your patches! Before we can take them, we have to jump a couple of legal hurdles.\n\nPlease fill out either the individual or corporate Contributor License Agreement (CLA).\n\n  * If you are an individual writing original source code and you're sure you own the intellectual property, then you'll need to sign an [individual CLA](https://code.google.com/legal/individual-cla-v1.0.html).\n  * If you work for a company that wants to allow you to contribute your work, then you'll need to sign a [corporate CLA](https://code.google.com/legal/corporate-cla-v1.0.html).\n\nFollow either of the two links above to access the appropriate CLA and instructions for how to sign and return it. Once we receive it, we'll be able to accept your pull requests.\n\n***NOTE***: Only original source code from you and other people that have signed the CLA can be accepted into the main repository.\n\n### Contributing code\n\nIf you have improvements to TensorFlow, send us your pull requests! For those\njust getting started, GitHub has a\n[how-to](https://help.github.com/articles/using-pull-requests/).\n\nTensorFlow team members will be assigned to review your pull requests. Once the\npull requests are approved and pass continuous integration checks, a TensorFlow\nteam member will apply `ready to pull` label to your change. This means we are\nworking on getting your pull request submitted to our internal repository. After\nthe change has been submitted internally, your pull request will be merged\nautomatically on GitHub.\n\nIf you want to contribute, start working through the TensorFlow codebase,\nnavigate to the\n[GitHub \"issues\" tab](https://github.com/tensorflow/tensorflow/issues) and start\nlooking through interesting issues. If you are not sure of where to start, then\nstart by trying one of the smaller/easier issues here i.e.\n[issues with the \"good first issue\" label](https://github.com/tensorflow/tensorflow/labels/good%20first%20issue)\nand then take a look at the\n[issues with the \"contributions welcome\" label](https://github.com/tensorflow/tensorflow/labels/stat%3Acontributions%20welcome).\nThese are issues that we believe are particularly well suited for outside\ncontributions, often because we probably won't get to them right now. If you\ndecide to start on an issue, leave a comment so that other people know that\nyou're working on it. If you want to help out, but not alone, use the issue\ncomment thread to coordinate.\n\n### Contribution guidelines and standards\n\nBefore sending your pull request for\n[review](https://github.com/tensorflow/tensorflow/pulls),\nmake sure your changes are consistent with the guidelines and follow the\nTensorFlow coding style.\n\n#### General guidelines and philosophy for contribution\n\n*   Include unit tests when you contribute new features, as they help to a)\n    prove that your code works correctly, and b) guard against future breaking\n    changes to lower the maintenance cost.\n*   Bug fixes also generally require unit tests, because the presence of bugs\n    usually indicates insufficient test coverage.\n*   Keep API compatibility in mind when you change code in core TensorFlow,\n    e.g., code in\n    [tensorflow/core](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core)\n    and\n    [tensorflow/python](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/python).\n    TensorFlow has passed version 1.0 and hence cannot make\n    non-backward-compatible API changes without a major release. Reviewers of\n    your pull request will comment on any API compatibility issues\n    [following API review practices](https://github.com/tensorflow/community/blob/master/governance/api-reviews.md).\n*   When you contribute a new feature to TensorFlow, the maintenance burden is\n    (by default) transferred to the TensorFlow team. This means that the benefit\n    of the contribution must be compared against the cost of maintaining the\n    feature.\n*   Full new features (e.g., a new op implementing a cutting-edge algorithm)\n    typically will live in\n    [tensorflow/addons](https://github.com/tensorflow/addons) to get some\n    airtime before a decision is made regarding whether they are to be migrated\n    to the core.\n*   As every PR requires several CPU/GPU hours of CI testing, we discourage\n    submitting PRs to fix one typo, one warning,etc. We recommend fixing the\n    same issue at the file level at least (e.g.: fix all typos in a file, fix\n    all compiler warnings in a file, etc.)\n*   Tests should follow the\n    [testing best practices](https://www.tensorflow.org/community/contribute/tests)\n    guide.\n\n#### License\n\nInclude a license at the top of new files.\n\n*   [C/C++ license example](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/op.cc#L1)\n*   [Python license example](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/nn.py#L1)\n*   [Java license example](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/java/src/main/java/org/tensorflow/Graph.java#L1)\n*   [Go license example](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/go/operation.go#L1)\n*   [Bash license example](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/ci_build/ci_build.sh#L2)\n*   [JavaScript/TypeScript license example](https://github.com/tensorflow/tensorboard/blob/master/tensorboard/components/tf_backend/backend.ts#L1)\n\nBazel BUILD files also need to include a license section, e.g.,\n[BUILD example](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/BUILD#L61).\n\n#### C++ coding style\n\nChanges to TensorFlow C++ code should conform to\n[Google C++ Style Guide](https://google.github.io/styleguide/cppguide.html).\n\nUse `clang-tidy` to check your C/C++ changes. To install `clang-tidy` on ubuntu:16.04, do:\n\n```bash\napt-get install -y clang-tidy\n```\n\nYou can check a C/C++ file by doing:\n\n\n```bash\nclang-format <my_cc_file> --style=google > /tmp/my_cc_file.cc\ndiff <my_cc_file> /tmp/my_cc_file.cc\n```\n\n#### Python coding style\n\nChanges to TensorFlow Python code should conform to\n[Google Python Style Guide](https://github.com/google/styleguide/blob/gh-pages/pyguide.md)\n\nUse `pylint` to check your Python changes. To install `pylint` and check a file\nwith `pylint` against TensorFlow's custom style definition:\n\n```bash\npip install pylint\npylint --rcfile=tensorflow/tools/ci_build/pylintrc myfile.py\n```\n\nNote `pylint --rcfile=tensorflow/tools/ci_build/pylintrc` should run from the\ntop level tensorflow directory.\n\n#### Coding style for other languages\n\n*   [Google Java Style Guide](https://google.github.io/styleguide/javaguide.html)\n*   [Google JavaScript Style Guide](https://google.github.io/styleguide/jsguide.html)\n*   [Google Shell Style Guide](https://google.github.io/styleguide/shellguide.html)\n*   [Google Objective-C Style Guide](https://google.github.io/styleguide/objcguide.html)\n\n#### Running sanity check\n\nIf you have Docker installed on your system, you can perform a sanity check on\nyour changes by running the command:\n\n```bash\ntensorflow/tools/ci_build/ci_build.sh CPU tensorflow/tools/ci_build/ci_sanity.sh\n```\n\nThis will catch most license, Python coding style and BUILD file issues that\nmay exist in your changes.\n\n#### Running unit tests\n\nThere are two ways to run TensorFlow unit tests.\n\n1.  Using tools and libraries installed directly on your system.\n\n    Refer to the\n    [CPU-only developer Dockerfile](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu.Dockerfile)\n    and\n    [GPU developer Dockerfile](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile)\n    for the required packages. Alternatively, use the said\n    [tensorflow/build Docker images](https://hub.docker.com/r/tensorflow/build)\n    (`tensorflow/tensorflow:devel` and `tensorflow/tensorflow:devel-gpu` are no\n    longer supported for development). Use TF SIG Build Dockerfiles in\n    development to avoid installing the packages directly on your system (in\n    which case remember to change the directory from `/root` to `/tensorflow`\n    once you get into the running container so `bazel` can find the `tensorflow`\n    workspace).\n\n    you can do this by using the following command. As an example-\n\n    ```bash\n    docker run -it --rm -v $PWD:/tmp -w /tmp tensorflow/build:2.15-python3.10\n    ```\n\n    Once you have the packages installed, you can run a specific unit test in\n    bazel by doing as follows:\n\n    ```bash\n    export flags=\"--config=linux -k\"\n    ```\n\n    If the tests are to be run on the GPU:\n\n    *   For TensorFlow versions starting from v.2.18.0: Add the `cuda` option\n        flag.\n\n        ```bash\n        export flags=\"--config=linux --config=cuda -k\"\n        ```\n\n    *   For TensorFlow versions prior v.2.18.0: Add CUDA paths to\n        LD_LIBRARY_PATH and add the `cuda` option flag.\n\n        ```bash\n        export LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\"\n        export flags=\"--config=linux --config=cuda -k\"\n        ```\n\n    For example, to run all tests under tensorflow/python, do:\n\n    ```bash\n    bazel test ${flags} //tensorflow/python/...\n    ```\n\n    For a single component e.g. softmax op:\n\n    ```bash\n    bazel test ${flags} tensorflow/python/kernel_tests/nn_ops:softmax_op_test\n    ```\n\n    For a single/parameterized test e.g. `test_capture_variables` in\n    `tensorflow/python/saved_model/load_test.py`:\n\n    (Requires `python>=3.7`)\n\n    ```bash\n    bazel test ${flags} //tensorflow/python/saved_model:load_test --test_filter=*LoadTest.test_capture_variables*\n    ```\n\n    **Note:** You can add `--test_sharding_strategy=disabled` to the `flags` to\n    disable the sharding so that all the test outputs are in one file. However,\n    it may slow down the tests for not running in parallel and may cause the\n    test to timeout but it could be useful when you need to execute a single\n    test or more in general your filtered/selected tests have a very low\n    execution time and the sharding\n    [could create an overhead on the test execution](https://github.com/bazelbuild/bazel/issues/2113#issuecomment-264054799).\n\n2.  Using [Docker](https://www.docker.com) and TensorFlow's CI scripts.\n\n    ```bash\n    # Install Docker first, then this will build and run cpu tests\n    tensorflow/tools/ci_build/ci_build.sh CPU bazel test //tensorflow/...\n    ```\n\n    See\n    [TensorFlow Builds](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/tools/ci_build)\n    for details.\n\n#### Running doctest for testable docstring\n\nThere are two ways to test the code in the docstring locally:\n\n1.  If you are only changing the docstring of a class/function/method, then you\n    can test it by passing that file's path to\n    [tf_doctest.py](https://www.tensorflow.org/code/tensorflow/tools/docs/tf_doctest.py).\n    For example:\n\n    ```bash\n    python tf_doctest.py --file=<file_path>\n    ```\n\n    This will run it using your installed version of TensorFlow. To be sure\n    you're running the same code that you're testing:\n\n    *   Use an up to date [tf-nightly](https://pypi.org/project/tf-nightly/)\n        `pip install -U tf-nightly`\n    *   Rebase your pull request onto a recent pull from\n        [TensorFlow's](https://github.com/tensorflow/tensorflow) master branch.\n\n2.  If you are changing the code and the docstring of a class/function/method,\n    then you will need to\n    [build TensorFlow from source](https://www.tensorflow.org/install/source).\n    Once you are setup to build from source, you can run the tests:\n\n    ```bash\n    bazel run //tensorflow/tools/docs:tf_doctest\n    ```\n\n    or\n\n    ```bash\n    bazel run //tensorflow/tools/docs:tf_doctest -- --module=ops.array_ops\n    ```\n\n    The `--module` is relative to `tensorflow.python`.\n\n#### Debug builds\n\nWhen [building Tensorflow](https://www.tensorflow.org/install/source), passing\n`--config=dbg` to Bazel will build with debugging information and without\noptimizations, allowing you to use GDB or other debuggers to debug C++ code. For\nexample, you can build the pip package with debugging information by running:\n\n```bash\nbazel build --config=dbg //tensorflow/tools/pip_package:build_pip_package\n```\n\nTensorFlow kernels and TensorFlow's dependencies are still not built with\ndebugging information with `--config=dbg`, as issues occur on Linux if\nthere is too much debug info (see [this GitHub\nissue](https://github.com/tensorflow/tensorflow/issues/48919) for context). If\nyou want to debug a kernel, you can compile specific files with `-g` using the\n`--per_file_copt` bazel option. For example, if you want to debug the Identity\nop, which are in files starting with `identity_op`, you can run\n\n```bash\nbazel build --config=dbg --per_file_copt=+tensorflow/core/kernels/identity_op.*@-g //tensorflow/tools/pip_package:build_pip_package\n```\n\nNote that the `--config=dbg` option is not officially supported.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/CONTRIBUTING.md"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "has_script_file": [{"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tools/tf_env_collect.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/core/api_def/update_api_def.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/core/kernels/mlir_generated/build_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/go/test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/go/genop/generate.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/benchmark/onednn_benchmark_config.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/benchmark/run_onednn_benchmarks.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/benchmark/run_models.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/benchmark/download_models.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/toolchains/cross_compile/cc/cc_wrapper.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/ci_build.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/code_link_check.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/build_rbe.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/libtensorflow_cpu.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/libtensorflow.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/libtensorflow_docker.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/libtensorflow_gpu.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/libtensorflow_rocm.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/mkl/basic-mkl-gpu-test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/mkl/basic-mkl-test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/mkl/install_openmpi_horovod.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/mkl/build-dev-container.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/gpu/run_cc_core.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/gpu/run_py3_core.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/gpu/run_mkl.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/cpu/run_cc_core.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/cpu/run_py2_core.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/cpu/run_py3_core.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/cpu/run_py3_contrib.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/cpu/run_mkl.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/cmake/run.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/rocm/run_gpu_single.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/rocm/rocm_py39_pip.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/rocm/run_cpu.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/rocm/rocm_py37_pip.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/rocm/rocm_py310_pip.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/rocm/rocm_py36_pip.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/rocm/run_gpu_multi.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/rocm/rocm_py38_pip.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/ppc64le/gpu/run_py2.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/ppc64le/gpu/run_py3.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/ppc64le/cpu/run_py2.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/linux/ppc64le/cpu/run_py3.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/rel/ubuntu/gpu_libtensorflow.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/rel/ubuntu/cpu_arm64_test_cpp.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/rel/ubuntu/cpu_arm64_test_build.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/rel/ubuntu/cpu_arm64_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/rel/ubuntu/cpu_libtensorflow.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/build_scripts/DEFAULT_TEST_TARGETS.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/build_scripts/ARM_SKIP_TESTS_EXTENDED.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/build_scripts/ARM_SKIP_TESTS.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/devtoolset/fixlinks.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/devtoolset/build_devtoolset.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/devtoolset/rpm-patch.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/integration_tests.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/nightly_release_smoke_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/py_test_delegate.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/run_pip_tests.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/cmake.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/android.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/pip_new.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/libtensorflow.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/libtensorflow_nightly_symlink.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/test_user_ops.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/test_tutorials.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/docker_cpu_pip.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/print_build_info.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/benchmark.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/docker_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/android_full.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/builds/builds_common.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/gpu_build/parallel_gpu_execute.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/protobuf/protobuf_optimized_pip.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/ctpu/ctpu.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/windows/libtensorflow_cpu.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/windows/cpu/bazel/run_cc_test_windows.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/windows/cpu/pip/build_tf_windows_clang-cl.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/windows/cpu/pip/build_tf_windows.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/windows/bazel/common_env.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/windows/bazel/bazel_test_lib.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/windows/bazel/cpu_win_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/pi/build_raspberry_pi.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/release/common.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/release/ubuntu_16/custom_op/nightly.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/release/ubuntu_16/custom_op/release.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/release/windows/cpu_py310_full/release_pip_rename.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/release/windows/gpu_py37_full/release_pip_rename.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/release/windows/cpu_py39_full/release_pip_rename.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/release/windows/cpu_py37_full/release_pip_rename.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/release/windows/gpu_py39_full/release_pip_rename.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/release/windows/gpu_py38_full/release_pip_rename.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/release/windows/cpu_py38_full/release_pip_rename.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/release/windows/gpu_py36_full/release_pip_rename.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/release/windows/gpu_py310_full/release_pip_rename.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_latest_clang.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_buildifier.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_openblas_ppc64le.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_proto3.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_patchelf.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_golang_centos.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_yum_packages.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_clang_17.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_centos_python36.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_pip_packages_by_version.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_gcc6.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_pi_toolchain.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_pip_packages_remote.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_bootstrap_deb_packages.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_auditwheel.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/build_and_install_python.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_pi_python3x_toolchain.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_buildifier_from_source.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_clang_18.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_mpi.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_pi_python3.9_toolchain.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_bazel.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_cmake.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_python3.6_pip_packages.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_clang.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_golang_ppc64le.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_python37.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_deb_packages.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_bazel_from_source.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_golang.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_centos_pip_packages.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/install/install_pip_packages.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/a100/nightly.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/osx/libtensorflow_cpu.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/osx/libtensorflow_gpu.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/osx/libtensorflow_rocm.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/osx/cpu/run_py2_cc_core.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/osx/cpu/run_contrib.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/osx/cpu/run_py3_cc_core.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/presubmit/ubuntu_16/cpu_py39_full/build.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/presubmit/ubuntu_16/gpu_py39_full/build.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/ci_build/presubmit/ubuntu_16/android/build.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/lib_package/libtensorflow_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/lib_package/concat_licenses.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/lib_package/libtensorflow_java_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/tf_sig_build_dockerfiles/setup.packages.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/tf_sig_build_dockerfiles/setup.python.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/tf_sig_build_dockerfiles/setup.sources.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/tf_sig_build_dockerfiles/setup.cuda.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/tf_sig_build_dockerfiles/builder.devtoolset/fixlinks.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/tf_sig_build_dockerfiles/builder.devtoolset/build_devtoolset.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/tf_sig_build_dockerfiles/builder.devtoolset/rpm-patch.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/tf_sig_build_dockerfiles/devel.usertools/get_test_list.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/tf_sig_build_dockerfiles/devel.usertools/rename_and_verify_wheels.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/tf_sig_build_dockerfiles/devel.usertools/repack_libtensorflow.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/c/generate-pc.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/c/experimental/ops/update_cpp_ops.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/generate-pc.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/acceleration/configuration/prev_is_different_than_current_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/examples/ios/download_models.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/delegates/gpu/cl/run_tests.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/delegates/utils/dummy_delegate/external_delegate_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/tools/build_aar_with_docker.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/tools/build_aar.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/tools/benchmark/ios/build_benchmark_framework.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/tools/evaluation/tasks/ios/build_evaluation_framework.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/tools/cmake/download_toolchains.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/tools/pip_package/update_sources.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/tools/pip_package/build_pip_package_with_cmake.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/tools/pip_package/build_pip_package_with_bazel.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/swift/docsgen/TensorFlowLiteSwift/scripts/download_frameworks.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/java/build_aar_for_release.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/ios/build_frameworks.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/ios/hide_symbols_with_allowlist.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/ios/hide_xcframework_symbols_with_allowlist.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/python/convert_file_to_c_source_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/lib_package/concat_licenses.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tools/skip_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tools/no_xla_multithread_symbols_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tools/xla_multithread_symbols_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/profiler/pip_package/build_pip_package.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/client/pip_package/build_pip_package.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/debug/examples/v1/examples_v1_debug_keras_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/debug/examples/v1/examples_v1_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/debug/examples/v1/examples_v1_debug_fibonacci_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/debug/examples/v1/examples_v1_offline_analyzer_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/debug/examples/v1/examples_v1_debug_mnist_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/debug/examples/v1/examples_v1_debug_errors_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/debug/examples/v2/examples_v2_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/autograph/pyct/inspect_utils_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/debug_tfci.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/bisect.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/libtensorflow.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/wheel.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/code_check_full.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/pycpp.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/any.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/installer_wheel.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/code_check_changed_files.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/upload.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/linux_arm64/setup.packages.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/linux_arm64/setup.python.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/linux_arm64/setup.sources.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/linux_arm64/build.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/linux_arm64/builder.devtoolset/fixlinks_aarch64.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/linux_arm64/builder.devtoolset/build_devtoolset.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/linux_arm64/builder.devtoolset/rpm-patch.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/linux_arm64/builder.patchelf/build_patchelf.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/linux_arm64/devel.usertools/get_test_list.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/linux_arm64/devel.usertools/rename_and_verify_wheels.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/linux_arm64/devel.usertools/setup_venv_test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/linux_arm64/devel.usertools/repack_libtensorflow.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build_arm64/setup.packages.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build_arm64/setup.python.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build_arm64/setup.sources.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build_arm64/build.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build_arm64/builder.devtoolset/fixlinks_aarch64.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build_arm64/builder.devtoolset/build_devtoolset.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build_arm64/builder.devtoolset/rpm-patch.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build/setup.sources.cudnn.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build/setup.packages.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build/setup.python.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build/setup.sources.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build/builder.devtoolset/fixlinks.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build/builder.devtoolset/build_devtoolset.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build/builder.devtoolset/rpm-patch.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/utilities/rename_and_verify_wheels.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/utilities/cleanup_summary.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/utilities/windows.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/utilities/setup_docker.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/utilities/setup_macos.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/utilities/repack_libtensorflow.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/utilities/setup.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/utilities/cleanup_docker.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/utilities/generate_index_html.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/llvm/run_lit.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/xla/backends/cpu/benchmarks/e2e/gemma2/pytorch_2b/run.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/xla/backends/cpu/benchmarks/e2e/gemma2/pytorch_2b/config.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/xla/backends/cpu/benchmarks/e2e/gemma2/pytorch_2b/setup.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/xla/backends/cpu/benchmarks/e2e/gemma2/keras/run.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/xla/backends/cpu/benchmarks/e2e/gemma2/keras/config.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/xla/backends/cpu/benchmarks/e2e/gemma2/keras/cleanup.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/xla/backends/cpu/benchmarks/e2e/gemma2/keras/setup.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/xla/backends/cpu/benchmarks/e2e/gemma2/flax_2b/run.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/xla/backends/cpu/benchmarks/e2e/gemma2/flax_2b/config.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/xla/backends/cpu/benchmarks/e2e/gemma2/flax_2b/setup.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/xla/mlir_hlo/build_tools/build_mlir.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/tools/toolchains/cross_compile/cc/cc_wrapper.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/tools/ci_build/gpu_build/parallel_gpu_execute.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/build_tools/sycl/clean.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/build_tools/sycl/build_xla.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/build_tools/sycl/install_bazel.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/build_tools/sycl/build.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/build_tools/sycl/install_oneapi.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/build_tools/rocm/run_xla_ci_build.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/build_tools/rocm/run_xla_multi_gpu.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/build_tools/rocm/run_xla.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/build_tools/ci/parallel_gpu_execute.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/.kokoro/generate_index_html.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/.kokoro/windows/windows_build.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/.kokoro/macos/build.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "continuous_integration": [{"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/.github/workflows/arm-ci-extended.yml", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/.github/workflows/update-nightly.yml", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/.github/workflows/arm-cd.yml", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/.github/workflows/osv-scanner-scheduled.yml", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/.github/workflows/update-rbe.yml", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/.github/workflows/pylint-presubmit.yml", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/.github/workflows/issue-on-pr-rollback.yml", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/.github/workflows/scorecards-analysis.yml", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/.github/workflows/cffconvert.yml", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/.github/workflows/release-branch-cherrypick.yml", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/.github/workflows/stale-issues.yml", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/.github/workflows/arm-ci-extended-cpp.yml", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/.github/workflows/arm-ci.yml", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "has_build_file": [{"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/pip_package/redundant_tensorflow_gpu/setup.py", "type": "Url", "format": "setup.py"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/pip_package/redundant_tensorflow_gpu/setup.py"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/pip_package/redundant_tf_nightly_gpu/setup.py", "type": "Url", "format": "setup.py"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/pip_package/redundant_tf_nightly_gpu/setup.py"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/tf_sig_build_dockerfiles/Dockerfile", "type": "Url", "format": "dockerfile"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/tools/tf_sig_build_dockerfiles/Dockerfile"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/profiler/pip_package/setup.py", "type": "Url", "format": "setup.py"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/profiler/pip_package/setup.py"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/client/pip_package/setup.py", "type": "Url", "format": "setup.py"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/client/pip_package/setup.py"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/devinfra/docker/windows2022/Dockerfile", "type": "Url", "format": "dockerfile"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/devinfra/docker/windows2022/Dockerfile"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/devinfra/docker/windows/Dockerfile", "type": "Url", "format": "dockerfile"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/devinfra/docker/windows/Dockerfile"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/linux_arm64/Dockerfile", "type": "Url", "format": "dockerfile"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/linux_arm64/Dockerfile"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build_arm64/Dockerfile", "type": "Url", "format": "dockerfile"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build_arm64/Dockerfile"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build/Dockerfile", "type": "Url", "format": "dockerfile"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/ci/official/containers/ml_build/Dockerfile"}], "executable_example": [{"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/examples/experimental_new_converter/Keras_LSTM_fusion_Codelab.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/examples/experimental_new_converter/Keras_LSTM_fusion_Codelab.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/examples/experimental_new_converter/keras_lstm.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/examples/experimental_new_converter/keras_lstm.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/examples/super_resolution/overview.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/examples/super_resolution/overview.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/examples/keras/keras_jax_backend_to_tfl.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/examples/keras/keras_jax_backend_to_tfl.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/examples/on_device_training/overview.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/examples/on_device_training/overview.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/examples/style_transfer/overview.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/examples/style_transfer/overview.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/examples/jax_conversion/jax_to_tflite_resnet50.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/examples/jax_conversion/jax_to_tflite_resnet50.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/examples/jax_conversion/jax_to_tflite.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/examples/jax_conversion/jax_to_tflite.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/guide/model_analyzer.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/guide/model_analyzer.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/guide/authoring.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/guide/authoring.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/guide/signatures.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/guide/signatures.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/performance/post_training_integer_quant_16x8.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/performance/post_training_integer_quant_16x8.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/performance/post_training_float16_quant.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/performance/post_training_float16_quant.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/performance/quantization_debugger.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/performance/quantization_debugger.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/performance/post_training_quant.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/performance/post_training_quant.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/performance/post_training_integer_quant.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/performance/post_training_integer_quant.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/tutorials/pose_classification.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/tutorials/pose_classification.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/models/convert/metadata_writer_tutorial.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/models/convert/metadata_writer_tutorial.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/models/modify/model_maker/image_classification.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/models/modify/model_maker/image_classification.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/models/modify/model_maker/object_detection.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/models/modify/model_maker/object_detection.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/models/modify/model_maker/text_searcher.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/models/modify/model_maker/text_searcher.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/models/modify/model_maker/speech_recognition.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/models/modify/model_maker/speech_recognition.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/models/modify/model_maker/text_classification.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/models/modify/model_maker/text_classification.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/models/modify/model_maker/audio_classification.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/models/modify/model_maker/audio_classification.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/models/modify/model_maker/question_answer.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/lite/g3doc/models/modify/model_maker/question_answer.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/ops/numpy_ops/g3doc/TensorFlow_NumPy_Text_Generation.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/ops/numpy_ops/g3doc/TensorFlow_NumPy_Text_Generation.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/ops/numpy_ops/g3doc/TensorFlow_NumPy_Keras_and_Distribution_Strategy.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/ops/numpy_ops/g3doc/TensorFlow_NumPy_Keras_and_Distribution_Strategy.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/ops/numpy_ops/g3doc/TensorFlow_Numpy_Distributed_Image_Classification.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/ops/numpy_ops/g3doc/TensorFlow_Numpy_Distributed_Image_Classification.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/autograph/g3doc/pyct_tutorial.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/autograph/g3doc/pyct_tutorial.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/autograph/g3doc/reference/_control_flow_tutorial.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/autograph/g3doc/reference/_control_flow_tutorial.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/docs/tf2xla/tutorials/jit_compile.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/docs/tf2xla/tutorials/jit_compile.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/docs/tf2xla/tutorials/autoclustering_xla.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/third_party/xla/docs/tf2xla/tutorials/autoclustering_xla.ipynb"}], "package_id": [{"result": {"value": "cloud_tpu_profiler", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/profiler/pip_package/setup.py"}, {"result": {"value": "cloud-tpu-client", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/client/pip_package/setup.py"}], "authors": [{"result": {"name": null, "email": "packages@tensorflow.org", "type": "Agent", "value": "packages@tensorflow.org"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/tpu/profiler/pip_package/setup.py"}], "documentation": [{"result": {"value": "https://github.com/tensorflow/tensorflow/tree/master/third_party/xla/docs", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://github.com/tensorflow/tensorflow/tree/master/third_party/xla/xla/pjrt/c/docs", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "installation": [{"result": {"value": "See the [TensorFlow install guide](https://www.tensorflow.org/install) for the\n[pip package](https://www.tensorflow.org/install/pip), to\n[enable GPU support](https://www.tensorflow.org/install/gpu), use a\n[Docker container](https://www.tensorflow.org/install/docker), and\n[build from source](https://www.tensorflow.org/install/source).\n\nTo install the current release, which includes support for\n[CUDA-enabled GPU cards](https://www.tensorflow.org/install/gpu) *(Ubuntu and\nWindows)*:\n\n```\n$ pip install tensorflow\n```\n\nOther devices (DirectX and MacOS-metal) are supported using\n[Device plugins](https://www.tensorflow.org/install/gpu_plugins#available_devices).\n\nA smaller CPU-only package is also available:\n\n```\n$ pip install tensorflow-cpu\n```\n\nTo update TensorFlow to the latest version, add `--upgrade` flag to the above\ncommands.\n\n*Nightly binaries are available for testing using the\n[tf-nightly](https://pypi.python.org/pypi/tf-nightly) and\n[tf-nightly-cpu](https://pypi.python.org/pypi/tf-nightly-cpu) packages on PyPI.*\n", "type": "Text_excerpt", "original_header": "Install"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}, {"result": {"value": "```shell\n$ python\n```\n\n```python\n>>> import tensorflow as tf\n>>> tf.add(1, 2).numpy()\n3\n>>> hello = tf.constant('Hello, TensorFlow!')\n>>> hello.numpy()\nb'Hello, TensorFlow!'\n```\n\nFor more examples, see the\n[TensorFlow tutorials](https://www.tensorflow.org/tutorials/).\n", "type": "Text_excerpt", "original_header": "*Try your first TensorFlow program*", "parent_header": ["Install"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}], "identifier": [{"result": {"type": "Url", "value": "https://doi.org/10.5281/zenodo.4724125"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}], "package_distribution": [{"result": {"type": "Url", "value": "https://pypi.org/project/tensorflow"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}], "logo": [{"result": {"type": "Url", "value": "https://www.tensorflow.org/images/tf_logo_horizontal.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}], "images": [{"result": {"type": "Url", "value": "https://shields.io/endpoint?url=https://ossrank.com/shield/44"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}, {"result": {"type": "Url", "value": "https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.svg"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}, {"result": {"type": "Url", "value": "https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.svg"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}, {"result": {"type": "Url", "value": "https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.svg"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}, {"result": {"type": "Url", "value": "https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.svg"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}, {"result": {"type": "Url", "value": "https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.svg"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}, {"result": {"type": "Url", "value": "https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.svg"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}, {"result": {"type": "Url", "value": "https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.svg"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}, {"result": {"type": "Url", "value": "https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.svg"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}, {"result": {"type": "Url", "value": "https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.svg"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/tensorflow/tensorflow/master/README.md"}]}