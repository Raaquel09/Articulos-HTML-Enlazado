{"somef_provenance": {"somef_version": "0.9.9", "somef_schema_version": "1.0.0", "date": "2025-05-11 23:47:00"}, "code_repository": [{"result": {"value": "https://github.com/jhy/jsoup", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "jhy", "type": "User"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2009-12-19T01:29:58Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2025-05-11T20:22:01Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/mit", "type": "License", "name": "MIT License", "url": "https://api.github.com/licenses/mit", "spdx_id": "MIT"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "The MIT License\n\nCopyright (c) 2009-2025 Jonathan Hedley <https://jsoup.org/>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n", "type": "File_dump", "name": "MIT License", "spdx_id": "MIT"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/LICENSE"}], "description": [{"result": {"value": "jsoup: the Java HTML parser, built for HTML editing, cleaning, scraping, and XSS safety.", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "**jsoup** is a Java library that makes it easy to work with real-world HTML and XML. It offers an easy-to-use API for URL fetching, data parsing, extraction, and manipulation using DOM API methods, CSS, and xpath selectors. \njsoup is designed to deal with all varieties of HTML found in the wild; from pristine and validating, to invalid tag-soup; jsoup will create a sensible parse tree. \n", "original_header": "jsoup: Java HTML Parser"}, "confidence": 0.9699616342002787, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "jsoup is an open source project distributed under the liberal [MIT license](https://jsoup.org/license). The source code is available on [GitHub](https://github.com/jhy/jsoup).\n \n", "original_header": "Open source"}, "confidence": 0.9132852643361751, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "jsoup is an open-source project, and many contributors have helped improve it over the years. You can see their contributions and join the development on [GitHub](https://github.com/jhy/jsoup/graphs/contributors).\n \n", "original_header": "Author"}, "confidence": 0.8301183338553703, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/README.md"}], "name": [{"result": {"value": "jsoup", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "jhy/jsoup", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/jhy/jsoup/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "https://github.com/jhy/jsoup/issues", "type": "Url"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/pom.xml"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/jhy/jsoup/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 11154, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "css, css-selectors, dom, html, java, java-html-parser, jsoup, parser, xml, xpath", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 2229, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/jhy/jsoup/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Java", "name": "Java", "type": "Programming_language", "size": 1897336}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "HTML", "name": "HTML", "type": "Programming_language", "size": 326772}, "confidence": 1, "technique": "GitHub_API"}], "releases": [{"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/215374999", "tag": "jsoup-1.20.1", "name": "jsoup 1.20.1", "author": {"name": "jhy", "type": "User"}, "description": "## Changes\r\n\r\n* To better follow the HTML5 spec and current browsers, the HTML parser no longer allows self-closing tags (`<foo />`) to close HTML elements by default. Foreign content (SVG, MathML), and content parsed with the XML parser, still supports self-closing tags. If you need specific HTML tags to support self-closing, you can register a custom tag via\r\nthe `TagSet` configured in `Parser.tagSet()`, using `Tag#set(Tag.SelfClose)`. Standard void tags (such as `<img>`, `<br>`, etc.) continue to behave as usual and are not affected by this\r\nchange. [#2300](https://github.com/jhy/jsoup/issues/2300).\r\n* The following internal components have been **deprecated**. If you do happen to be using any of these, please take the opportunity now to migrate away from them, as they will be removed in jsoup 1.21.1.\r\n  * `ChangeNotifyingArrayList`, `Document.updateMetaCharsetElement()`, `Document.updateMetaCharsetElement(boolean)`, `HtmlTreeBuilder.isContentForTagData(String)`, `Parser.isContentForTagData(String)`, `Parser.setTreeBuilder(TreeBuilder)`, `Tag.formatAsBlock()`, `Tag.isFormListed()`, `TokenQueue.addFirst(String)`, `TokenQueue.chompTo(String)`, `TokenQueue.chompToIgnoreCase(String)`, `TokenQueue.consumeToIgnoreCase(String)`, `TokenQueue.consumeWord()`, `TokenQueue.matchesAny(String...)`\r\n\r\n## Functional Improvements\r\n\r\n* Rebuilt the HTML pretty-printer, to simplify and consolidate the implementation, improve consistency, support custom Tags, and provide a cleaner path for ongoing improvements. The specific HTML produced by the pretty-printer may be different from previous versions. [#2286](https://github.com/jhy/jsoup/issues/2286).\r\n* Added the ability to define custom tags, and to modify properties of known tags, via the `TagSet` tag collection. Their properties can impact both the parse and how content is serialized (output as HTML or XML). [#2285](https://github.com/jhy/jsoup/issues/2285).\r\n* `Element.cssSelector()` will prefer to return shorter selectors by using ancestor IDs when available and unique. E.g. `#id > div > p` instead of  `html > body > div > div > p` [#2283](https://github.com/jhy/jsoup/pull/2283).\r\n* Added `Elements.deselect(int index)`, `Elements.deselect(Object o)`, and `Elements.deselectAll()` methods to remove elements from the `Elements` list without removing them from the underlying DOM. Also added `Elements.asList()` method to get a modifiable list of elements without affecting the DOM. (Individual Elements remain linked to the DOM.) [#2100](https://github.com/jhy/jsoup/issues/2100).\r\n* Added support for sending a request body from an InputStream with `Connection.requestBodyStream(InputStream stream)`. [#1122](https://github.com/jhy/jsoup/issues/1122).\r\n* The XML parser now supports scoped xmlns: prefix namespace declarations, and applies the correct namespace to Tags and Attributes. Also, added `Tag#prefix()`, `Tag#localName()`, `Attribute#prefix()`, `Attribute#localName()`, and `Attribute#namespace()` to retrieve these. [#2299](https://github.com/jhy/jsoup/issues/2299).\r\n* CSS identifiers are now escaped and unescaped correctly to the CSS spec. `Element#cssSelector()` will emit appropriately escaped selectors, and the QueryParser supports those. Added `Selector.escapeCssIdentifier()` and ` Selector.unescapeCssIdentifier(). [#2297](https://github.com/jhy/jsoup/pull/2297), [#2305](https://github.com/jhy/jsoup/pull/2305)\r\n\r\n## Structure and Performance Improvements\r\n\r\n* Refactored the CSS `QueryParser` into a clearer recursive descent parser. [#2310](https://github.com/jhy/jsoup/pull/2310).\r\n* CSS selectors with consecutive combinators (e.g. `div >> p`) will throw an explicit parse exception. [#2311](https://github.com/jhy/jsoup/pull/2311).\r\n* Performance: reduced the shallow size of an Element from 40 to 32 bytes, and the NodeList from 32 to 24. [#2307](https://github.com/jhy/jsoup/pull/2307).\r\n* Performance: reduced GC load of new StringBuilders when tokenizing input HTML. [#2304](https://github.com/jhy/jsoup/pull/2304).\r\n* Made `Parser` instances threadsafe, so that inadvertent use of the same instance across threads will not lead to errors. For actual concurrency, use `Parser#newInstance()` per thread. [#2314](https://github.com/jhy/jsoup/pull/2314).\r\n\r\n## Bug Fixes\r\n\r\n* Element names containing characters invalid in XML are now normalized to valid XML names when serializing. [#1496](https://github.com/jhy/jsoup/issues/1496).\r\n* When serializing to XML, characters that are invalid in XML 1.0 should be removed (not encoded). [#1743](https://github.com/jhy/jsoup/issues/1743).\r\n* When converting a `Document` to the W3C DOM in `W3CDom`, elements with an attribute in an undeclared namespace now get a declaration of `xmlns:prefix=\"undefined\"`. This allows subsequent serialization to XML via `W3CDom.asString()` to succeed. [#2087](https://github.com/jhy/jsoup/issues/2087).\r\n* The `StreamParser` could emit the final elements of a document twice, due to how `onNodeCompleted` was fired when closing out the stack. [#2295](https://github.com/jhy/jsoup/issues/2295).\r\n* When parsing with the XML parser and error tracking enabled, the trailing `?` in `<?xml version=\"1.0\"?>` would incorrectly emit an error. [#2298](https://github.com/jhy/jsoup/issues/2298).\r\n* Calling `Element#cssSelector()` on an element with combining characters in the class or ID now produces the correct output. [#1984](https://github.com/jhy/jsoup/issues/1984). ", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.20.1", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.20.1", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.20.1", "url": "https://api.github.com/repos/jhy/jsoup/releases/215374999", "release_id": 215374999, "date_created": "2025-04-29T05:37:09Z", "date_published": "2025-04-29T05:57:25Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/203486295", "tag": "jsoup-1.19.1", "name": "jsoup 1.19.1", "author": {"name": "jhy", "type": "User"}, "description": "### Changes\r\n\r\n* Added support for **http/2** requests in `Jsoup.connect()`, when running on Java 11+, via the Java HttpClient\r\n  implementation. [#2257](https://github.com/jhy/jsoup/pull/2257).\r\n  * In this version of jsoup, the default is to make requests via the HttpUrlConnection implementation: use\r\n    **`System.setProperty(\"jsoup.useHttpClient\", \"true\");`** to enable making requests via the HttpClient instead ,\r\n    which will enable http/2 support, if available. This will become the default in a later version of jsoup, so now is\r\n    a good time to validate it.\r\n  * If you are repackaging the jsoup jar in your deployment (i.e. creating a shaded- or a fat-jar), make sure to specify\r\n    that as a Multi-Release\r\n    JAR.\r\n  * If the `HttpClient` impl is not available in your JRE, requests will continue to be made via\r\n    `HttpURLConnection` (in `http/1.1` mode).\r\n* Updated the minimum Android API Level validation from 10 to **21**. As with previous jsoup versions, Android\r\n  developers need to enable core library desugaring. The minimum Java version remains Java 8.\r\n  [#2173](https://github.com/jhy/jsoup/pull/2173)\r\n* Removed previously deprecated class: `org.jsoup.UncheckedIOException` (replace with `java.io.UncheckedIOException`);\r\n  moved previously deprecated method `Element Element#forEach(Consumer)` to\r\n  `void Element#forEach(Consumer())`. [#2246](https://github.com/jhy/jsoup/pull/2246)\r\n* Deprecated the methods `Document#updateMetaCharsetElement(bool)` and `#Document#updateMetaCharsetElement()`, as the\r\n  setting had no effect. When `Document#charset(Charset)` is called, the document's meta charset or XML encoding\r\n  instruction is always set. [#2247](https://github.com/jhy/jsoup/pull/2247)\r\n\r\n### Improvements\r\n\r\n* When cleaning HTML with a `Safelist` that preserves relative links, the `isValid()` method will now consider these\r\n  links valid. Additionally, the enforced attribute `rel=nofollow` will only be added to external links when configured\r\n  in the safelist. [#2245](https://github.com/jhy/jsoup/pull/2245)\r\n* Added `Element#selectStream(String query)` and `Element#selectStream(Evaluator)` methods, that return a `Stream` of\r\n  matching elements. Elements are evaluated and returned as they are found, and the stream can be\r\n  terminated early. [#2092](https://github.com/jhy/jsoup/pull/2092)\r\n* `Element` objects now implement `Iterable`, enabling them to be used in enhanced for loops.\r\n* Added support for fragment parsing from a `Reader` via\r\n  `Parser#parseFragmentInput(Reader, Element, String)`. [#1177](https://github.com/jhy/jsoup/issues/1177)\r\n* Reintroduced CLI executable examples, in `jsoup-examples.jar`. [#1702](https://github.com/jhy/jsoup/issues/1702)\r\n* Optimized performance of selectors like `#id .class` (and other similar descendant queries) by around 4.6x, by better\r\n  balancing the Ancestor evaluator's cost function in the query\r\n  planner. [#2254](https://github.com/jhy/jsoup/issues/2254)\r\n* Removed the legacy parsing rules for `<isindex>` tags, which would autovivify a `form` element with labels. This is no\r\n  longer in the spec.\r\n* Added `Elements.selectFirst(String cssQuery)` and `Elements.expectFirst(String cssQuery)`, to select the first\r\n  matching element from an `Elements` list.  [#2263](https://github.com/jhy/jsoup/pull/2263/)\r\n* When parsing with the XML parser, XML Declarations and Processing Instructions are directly handled, vs bouncing\r\n  through the HTML parser's bogus comment handler. Serialization for non-doctype declarations no longer end with a\r\n  spurious `!`. [#2275](https://github.com/jhy/jsoup/pull/2275)\r\n* When converting parsed HTML to XML or the W3C DOM, element names containing `<` are normalized to `_` to ensure valid\r\n  XML. For example, `<foo<bar>` becomes `<foo_bar>`, as XML does not allow `<` in element names, but HTML5\r\n  does. [#2276](https://github.com/jhy/jsoup/pull/2276)\r\n* Reimplemented the HTML5 Adoption Agency Algorithm to the current spec. This handles mis-nested formating / structural elements. [#2278](https://github.com/jhy/jsoup/pull/2278)\r\n\r\n### Bug Fixes\r\n\r\n* If an element has an `;` in an attribute name, it could not be converted to a W3C DOM element, and so subsequent XPath\r\n  queries could miss that element. Now, the attribute name is more completely\r\n  normalized. [#2244](https://github.com/jhy/jsoup/issues/2244)\r\n* For backwards compatibility, reverted the internal attribute key for doctype names to \r\n  \"name\". [#2241](https://github.com/jhy/jsoup/issues/2241)\r\n* In `Connection`, skip cookies that have no name, rather than throwing a validation\r\n  exception. [#2242](https://github.com/jhy/jsoup/issues/2242)\r\n* When running on JDK 1.8, the error `java.lang.NoSuchMethodError: java.nio.ByteBuffer.flip()Ljava/nio/ByteBuffer;`\r\n  could be thrown when calling `Response#body()` after parsing from a URL and the buffer size was\r\n  exceeded. [#2250](https://github.com/jhy/jsoup/pull/2250)\r\n* For backwards compatibility, allow `null` InputStream inputs to `Jsoup.parse(InputStream stream, ...)`, by returning\r\n  an empty `Document`. [#2252](https://github.com/jhy/jsoup/issues/2252)\r\n* A `template` tag containing an `li` within an open `li` would be parsed incorrectly, as it was not recognized as a\r\n  \"special\" tag (which have additional processing rules). Also, added the SVG and MathML namespace tags to the list of\r\n  special tags. [#2258](https://github.com/jhy/jsoup/issues/2258)\r\n* A `template` tag containing a `button` within an open `button` would be parsed incorrectly, as the \"in button scope\"\r\n  check was not aware of the `template` element. Corrected other instances including MathML and SVG elements,\r\n  also. [#2271](https://github.com/jhy/jsoup/issues/2271)\r\n* An `:nth-child` selector with a negative digit-less step, such as `:nth-child(-n+2)`, would be parsed incorrectly as a\r\n  positive step, and so would not match as expected. [#1147](https://github.com/jhy/jsoup/issues/1147)\r\n* Calling `doc.charset(charset)` on an empty XML document would throw an\r\n  `IndexOutOfBoundsException`. [#2266](https://github.com/jhy/jsoup/issues/2266)\r\n* Fixed a memory leak when reusing a nested `StructuralEvaluator` (e.g., a selector ancestor chain like `A B C`) by\r\n  ensuring cache reset calls cascade to inner members. [#2277](https://github.com/jhy/jsoup/issues/2277)\r\n* Concurrent calls to `doc.clone().append(html)` were not supported. When a document was cloned, its `Parser` was not cloned but was a shallow copy of the original parser. [#2281](https://github.com/jhy/jsoup/issues/2281)", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.19.1", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.19.1", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.19.1", "url": "https://api.github.com/repos/jhy/jsoup/releases/203486295", "release_id": 203486295, "date_created": "2025-03-04T04:06:38Z", "date_published": "2025-03-04T04:20:35Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/188371822", "tag": "jsoup-1.18.3", "name": "jsoup-1.18.3", "author": {"name": "jhy", "type": "User"}, "description": "`1.18.3` is a quick release to fix [#2235](https://github.com/jhy/jsoup/issues/2235) in `1.18.2`.\r\n\r\nPlease see also the full release notes for [jsoup 1.18.2](https://github.com/jhy/jsoup/releases/tag/jsoup-1.18.2) if you are coming from an earlier release.\r\n\r\n### Bug Fixes\r\n\r\n* When serializing to XML, attribute names containing `-`, `.`, or digits were incorrectly considered invalid and removed. [#2235](https://github.com/jhy/jsoup/issues/2235) ", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.18.3", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.18.3", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.18.3", "url": "https://api.github.com/repos/jhy/jsoup/releases/188371822", "release_id": 188371822, "date_created": "2024-12-01T22:39:57Z", "date_published": "2024-12-01T22:55:24Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/187688059", "tag": "jsoup-1.18.2", "name": "jsoup 1.18.2", "author": {"name": "jhy", "type": "User"}, "description": "### Improvements\r\n\r\n* Optimized the throughput and memory use throughout the input read and parse flows, with heap allocations and GC  down between -6% and -89%, and throughput improved up to +143% for small inputs. Most inputs sizes will see  throughput increases of ~ 20%. These performance improvements come through recycling the backing `byte[]` and `char[]`  arrays used to read and parse the input. [2186](https://github.com/jhy/jsoup/pull/2186) \r\n* Speed optimized `html()` and `Entities.escape()` when the input contains UTF characters in a supplementary plane, by around 49%. [2183](https://github.com/jhy/jsoup/pull/2183)\r\n* The form associated elements returned by `FormElement.elements()` now reflect changes made to the DOM, subsequently to the original parse. [2140](https://github.com/jhy/jsoup/issues/2140)\r\n* In the `TreeBuilder`, the `onNodeInserted()` and `onNodeClosed()` events are now also fired for the outermost / root `Document` node. This enables source position tracking on the Document node (which was previously unset). And it also enables the node traversor to see the outer Document node. [2182](https://github.com/jhy/jsoup/pull/2182)\r\n* Selected Elements can now be position swapped inline using `Elements#set()`. [2212](https://github.com/jhy/jsoup/issues/2212)\r\n\r\n### Bug Fixes\r\n\r\n* `Element.cssSelector()` would fail if the element's class contained a `*`  character. [2169](https://github.com/jhy/jsoup/issues/2169)\r\n* When tracking source ranges, a text node following an invalid self-closing element may be left untracked. [2175](https://github.com/jhy/jsoup/issues/2175)\r\n* When a document has no doctype, or a doctype not named `html`, it should be parsed in Quirks Mode. [2197](https://github.com/jhy/jsoup/issues/2197)\r\n* With a selector like `div:has(span + a)`, the `has()` component was not working correctly, as the inner combining query caused the evaluator to match those against the outer's siblings, not  children. [2187](https://github.com/jhy/jsoup/issues/2187)\r\n* A selector query that included multiple `:has()` components in a nested `:has()` might incorrectly execute. [2131](https://github.com/jhy/jsoup/issues/2131)\r\n* When cookie names in a response are duplicated, the simple view of cookies available via `Connection.Response#cookies()` will provide the last one set. Generally it is better to use the [Jsoup.newSession](https://jsoup.org/cookbook/web/request-session) method to maintain a cookie jar, as that applies appropriate path selection on cookies when making requests. [1831](https://github.com/jhy/jsoup/issues/1831)\r\n* When parsing named HTML entities, base entities should resolve if they are a prefix of the input token (and not in an attribute). [2207](https://github.com/jhy/jsoup/issues/2207)\r\n* Fixed incorrect tracking of source ranges for attributes merged from late-occurring elements that were implicitly created (`html` or `body`). [2204](https://github.com/jhy/jsoup/issues/2204)\r\n* Follow the current HTML specification in the tokenizer to allow `<` as part of a tag name, instead of emitting it as a character node. [2230](https://github.com/jhy/jsoup/issues/2230)\r\n* Similarly, allow a `<` as the start of an attribute name, vs creating a new element. The previous behavior was intended to parse closer to what we anticipated the author's intent to be, but that does not align to the spec or to how browsers behave. [1483](https://github.com/jhy/jsoup/issues/1483)", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.18.2", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.18.2", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.18.2", "url": "https://api.github.com/repos/jhy/jsoup/releases/187688059", "release_id": 187688059, "date_created": "2024-11-27T00:52:17Z", "date_published": "2024-11-27T01:37:37Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/164745249", "tag": "jsoup-1.18.1", "name": "jsoup-1.18.1", "author": {"name": "jhy", "type": "User"}, "description": "https://jsoup.org/news/release-1.18.1\r\n\r\n### Improvements\r\n\r\n* **Stream Parser**: A `StreamParser` provides a progressive parse of its input. As each `Element` is completed, it is\r\n  emitted via a `Stream` or `Iterator` interface. Elements returned will be complete with all their children, and an\r\n  (empty) next sibling, if applicable. Elements (or their children) may be removed from the DOM during the parse,\r\n  for e.g. to conserve memory, providing a mechanism to parse an input document that would otherwise be too large to fit\r\n  into memory, yet still providing a DOM interface to the document and its elements. Additionally, the parser provides\r\n  a `selectFirst(String query)` / `selectNext(String query)`, which will run the parser until a hit is found, at which\r\n  point the parse is suspended. It can be resumed via another `select()` call, or via the `stream()` or `iterator()`\r\n  methods. [2096](https://github.com/jhy/jsoup/pull/2096)\r\n* **Download Progress**: added a Response Progress event interface, which reports progress and URLs are downloaded (and\r\n  parsed). Supported on both a session and a single connection\r\n  level. [2164](https://github.com/jhy/jsoup/pull/2164), [656](https://github.com/jhy/jsoup/issues/656)\r\n* Added `Path` accepting parse methods: `Jsoup.parse(Path)`, `Jsoup.parse(path, charsetName, baseUri, parser)`,\r\n  etc. [2055](https://github.com/jhy/jsoup/pull/2055)\r\n* Updated the `button` tag configuration to include a space between multiple button elements in the `Element.text()`\r\n  method. [2105](https://github.com/jhy/jsoup/issues/2105)\r\n* Added support for the `ns|*` all elements in namespace Selector. [1811](https://github.com/jhy/jsoup/issues/1811)\r\n* When normalising attribute names during serialization, invalid characters are now replaced with `_`, vs being\r\n  stripped. This should make the process clearer, and generally prevent an invalid attribute name being coerced\r\n  unexpectedly. [2143](https://github.com/jhy/jsoup/issues/2143)\r\n\r\n### Changes\r\n\r\n* Removed previously deprecated internal classes and methods. [2094](https://github.com/jhy/jsoup/pull/2094)\r\n* Build change: the built jar's OSGi manifest no longer imports itself. [2158](https://github.com/jhy/jsoup/issues/2158)\r\n\r\n### Bug Fixes\r\n\r\n* When tracking source positions, if the first node was a TextNode, its position was incorrectly set\r\n  to `-1.` [2106](https://github.com/jhy/jsoup/issues/2106)\r\n* When connecting (or redirecting) to URLs with characters such as `{`, `}` in the path, a Malformed URL exception would\r\n  be thrown (if in development), or the URL might otherwise not be escaped correctly (if in\r\n  production). The URL encoding process has been improved to handle these characters\r\n  correctly. [2142](https://github.com/jhy/jsoup/issues/2142)\r\n* When using `W3CDom` with a custom output Document, a Null Pointer Exception would be\r\n  thrown. [2114](https://github.com/jhy/jsoup/pull/2114)\r\n* The `:has()` selector did not match correctly when using sibling combinators (like\r\n  e.g.: `h1:has(+h2)`). [2137](https://github.com/jhy/jsoup/issues/2137)\r\n* The `:empty` selector incorrectly matched elements that started with a blank text node and were followed by \r\n  non-empty nodes, due to an incorrect short-circuit. [2130](https://github.com/jhy/jsoup/issues/2130) \r\n* `Element.cssSelector()` would fail with \"Did not find balanced marker\" when building a selector for elements that had\r\n  a `(` or `[` in their class names. And selectors with those characters escaped would not match as\r\n  expected. [2146](https://github.com/jhy/jsoup/issues/2146)\r\n* Updated `Entities.escape(string)` to make the escaped text suitable for both text nodes and attributes (previously was\r\n  only for text nodes). This does not impact the output of `Element.html()` which correctly applies a minimal escape\r\n  depending on if the use will be for text data or in a quoted\r\n  attribute. [1278](https://github.com/jhy/jsoup/issues/1278)\r\n* Fuzz: a Stack Overflow exception could occur when resolving a crafted `<base href>` URL, in the normalizing regex.\r\n  [2165](https://github.com/jhy/jsoup/issues/2165)", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.18.1", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.18.1", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.18.1", "url": "https://api.github.com/repos/jhy/jsoup/releases/164745249", "release_id": 164745249, "date_created": "2024-07-10T06:46:42Z", "date_published": "2024-07-10T08:00:02Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/135329854", "tag": "jsoup-1.17.2", "name": "jsoup Java HTML Parser release 1.17.2", "author": {"name": "jhy", "type": "User"}, "description": "### Improvements\r\n\r\n* **Attribute object accessors**: Added `Element.attribute(String)` and `Attributes.attribute(String)` to more simply\r\n  obtain an `Attribute` object. [2069](https://github.com/jhy/jsoup/issues/2069)\r\n* **Attribute source tracking**: If source tracking is on, and an Attribute's key is changed (\r\n  via `Attribute.setKey(String)`), the source range is now still tracked\r\n  in `Attribute.sourceRange()`. [2070](https://github.com/jhy/jsoup/issues/2070)\r\n* **Wildcard attribute selector**: Added support for the `[*]` element with any attribute selector. And also restored\r\n  support for selecting by an empty attribute name prefix (`[^]`). [2079](https://github.com/jhy/jsoup/issues/2079)\r\n\r\n### Bug Fixes\r\n\r\n* **Mixed-cased source position**: When tracking the source position of attributes, if the source attribute name was\r\n  mix-cased but the parser was lower-case normalizing attribute names, the source position for that attribute was not\r\n  tracked correctly. [2067](https://github.com/jhy/jsoup/issues/2067)\r\n* **Source position NPE**: When tracking the source position of a body fragment parse, a null pointer\r\n  exception was thrown. [2068](https://github.com/jhy/jsoup/issues/2068)\r\n* **Multi-point emoji entity**: A multi-point encoded emoji entity may be incorrectly decoded to the replacement\r\n  character. [2074](https://github.com/jhy/jsoup/issues/2074)\r\n* **Selector sub-expressions**: (Regression) in a selector like `parent [attr=va], other`, the `, OR` was binding\r\n  to `[attr=va]` instead of `parent [attr=va]`, causing incorrect selections. The fix includes a EvaluatorDebug class\r\n  that generates a sexpr to represent the query, allowing simpler and more thorough query parse\r\n  tests. [2073](https://github.com/jhy/jsoup/issues/2073)\r\n* **XML CData output**: When generating XML-syntax output from parsed HTML, script nodes containing (pseudo) CData\r\n  sections would have an extraneous CData section added, causing script execution errors. Now, the data content is\r\n  emitted in a HTML/XML/XHTML polyglot format, if the data is not already within a CData\r\n  section. [2078](https://github.com/jhy/jsoup/issues/2078)\r\n* **Thread safety**: The `:has` evaluator held a non-thread-safe Iterator, and so if an Evaluator object was\r\n  shared across multiple concurrent threads, a NoSuchElement exception may be thrown, and the selected results may be\r\n  incorrect. Now, the iterator object is a thread-local. [2088](https://github.com/jhy/jsoup/issues/2088)", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.17.2", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.17.2", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.17.2", "url": "https://api.github.com/repos/jhy/jsoup/releases/135329854", "release_id": 135329854, "date_created": "2023-12-29T02:43:45Z", "date_published": "2023-12-29T03:29:07Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/131489705", "tag": "jsoup-1.17.1", "name": "jsoup 1.17.1", "author": {"name": "jhy", "type": "User"}, "description": "<p><b>jsoup 1.17.1</b> is out now with support for request-level authentication, attribute name &amp; value source ranges, stream() iterable support, and a bunch of other improvements and bug fixes.</p>\r\n\r\n<p>Many thanks to everyone who contributed to this release!</p>\r\n\r\n<h2>Improvements</h2>\r\n     <ul>\r\n      <li><b>Request-Level Authentication</b>: Added support for request-level authentication in Jsoup.connect(), enabling authentication to proxies and servers. <small><a href=\"https://github.com/jhy/jsoup/pull/2046\">More.</a></small></li>\r\n     </ul>\r\n     <ul>\r\n      <li><b>Elements DOM Mutators</b>: In the <code><a href=\"//jsoup.org/apidocs/org/jsoup/select/Elements.html\" title=\"A list of Elements, with methods that act on every element in the list.\">Elements</a></code> list, added direct support for <code><a href=\"//jsoup.org/apidocs/org/jsoup/select/Elements.html#set(int,org.jsoup.nodes.Element)\" title=\"Replace the Element at the specified index in this list, and in the DOM.\">Elements#set(int, Element)</a></code>, <code><a href=\"//jsoup.org/apidocs/org/jsoup/select/Elements.html#remove(int)\" title=\"Remove the Element at the specified index in this ist, and from the DOM.\">Elements#remove(int)</a></code>, <code><a href=\"//jsoup.org/apidocs/org/jsoup/select/Elements.html#remove(java.lang.Object)\" title=\"Remove the specified Element from this list, and from th DOM\">Elements#remove(Object)</a></code>, <code><a href=\"//jsoup.org/apidocs/org/jsoup/select/Elements.html#clear()\" title=\"Removes all the elements from this list, and each of them from the DOM.\">Elements#clear()</a></code>, <code><a href=\"//jsoup.org/apidocs/org/jsoup/select/Elements.html#removeAll(java.util.Collection)\" title=\"Removes from this list, and from the DOM, each of the elements that are contained in the specified collection and are in this list.\">Elements#removeAll()</a></code>, <code><a href=\"//jsoup.org/apidocs/org/jsoup/select/Elements.html#retainAll(java.util.Collection)\" title=\"Retain in this list, and in the DOM, only the elements that are in the specified collection and are in this list.\">Elements#retainAll()</a></code>, <code><a href=\"//jsoup.org/apidocs/org/jsoup/select/Elements.html#removeIf(java.util.function.Predicate)\" title=\"Remove from the list, and from the DOM, all elements in this list that mach the given filter.\">Elements#removeIf()</a></code>, <code><a href=\"//jsoup.org/apidocs/org/jsoup/select/Elements.html#replaceAll(java.util.function.UnaryOperator)\" title=\"Replace each element in this list with the result of the operator, and update the DOM.\">Elements#replaceAll()</a></code>. These methods update the original DOM, as well as the Elements list. <small><a href=\"https://github.com/jhy/jsoup/pull/2017\">More.</a></small></li>\r\n     </ul>\r\n     <ul>\r\n      <li><b>Stream Interface</b>: Introduced the <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/NodeIterator.html\" title=\"Iterate through a Node and its tree of descendants, in document order, and returns nodes of the specified type.\">NodeIterator</a></code> class for efficient node tree traversal using the Iterator interface. Added Stream <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/Element.html#stream()\" title=\"Returns a Stream of this Element and all of its descendant Elements.\">Element#stream()</a></code> and <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/Node.html#nodeStream()\" title=\"Returns a Stream of this Node and all of its descendant Nodes.\">Node#nodeStream()</a></code> methods for fluent composable stream pipelines of node traversals. <small><a href=\"https://github.com/jhy/jsoup/pull/2051\">More.</a></small></li>\r\n     </ul>\r\n     <ul>\r\n      <li><b>XML OutputSettings</b>: Automatically sets the xhtml <code>EscapeMode</code> as default when changing the <code>OutputSettings</code> syntax to <code>XML</code>.</li>\r\n     </ul>\r\n     <ul>\r\n      <li><b>is() Selector</b>: Added the <code>:is(selector list)</code> pseudo-selector to find elements that match any selectors in the selector list. This enhances readability for large <code>OR</code>ed selectors. <small><a href=\"//jsoup.org/apidocs/org/jsoup/select/Selector.html\">More.</a></small></li>\r\n     </ul>\r\n     <ul>\r\n      <li><b>JPMS Module Support</b>: Repackaged the library with native JPMS module support. <small><a href=\"https://github.com/jhy/jsoup/pull/2025\">More.</a></small></li>\r\n     </ul>\r\n     <ul>\r\n      <li><b>Source Position Fidelity</b>: Improved fidelity of source positions when tracking is enabled. Implicitly created or closed elements are now trackable via <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/Range.html#isImplicit()\" title=\"Checks if the range represents a node that was implicitly created / closed.\">Range.isImplicit()</a></code>. <small><a href=\"https://github.com/jhy/jsoup/pull/2056\">More.</a></small></li>\r\n     </ul>\r\n     <ul>\r\n      <li><b>Attribute Source Positions</b>: Enabled source position for attribute names and values when source tracking is on. <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/Attribute.html#sourceRange()\" title=\"Get the source ranges (start to end positions) in the original input source from which this attribute's name and value were parsed.\">Attribute#sourceRange()</a></code> provides the ranges. <small><a href=\"https://github.com/jhy/jsoup/pull/2057\">More.</a></small></li>\r\n     </ul>\r\n     <ul>\r\n      <li><b>Virtual Threads</b>: Enhanced performance under Java 21+ Virtual Threads by replacing the internal <code>ConstrainableInputStream</code> with <code>ControllableInputStream</code>. <small><a href=\"https://github.com/jhy/jsoup/issues/2054\">More.</a></small></li>\r\n     </ul>\r\n     <ul>\r\n      <li><b>XML Mimetype Support</b>: Extended XML mimetype support in <code><a href=\"//jsoup.org/apidocs/org/jsoup/Jsoup.html#connect(java.lang.String)\" title=\"Creates a new Connection (session), with the defined request URL.\">Jsoup.connect()</a></code> to include any XML mimetype. <small><a href=\"https://github.com/jhy/jsoup/issues/2059\">More.</a></small></li>\r\n     </ul>\r\n     <h2>Bug Fixes</h2>\r\n     <ul>\r\n      <li><b>XML Data Nodes</b>: Fixed a bug where HTML elements parsed as data nodes were not correctly emitted as <code>CDATA</code> nodes when outputting with <code>XML</code> syntax. <small><a href=\"https://github.com/jhy/jsoup/pull/1720\">More.</a></small></li>\r\n     </ul>\r\n     <ul>\r\n      <li><b>Immediate Parent Selector</b>: Corrected a bug where the Immediate Parent selector <code>&gt;</code> could match elements above the root context element. <small><a href=\"https://github.com/jhy/jsoup/issues/2018\">More.</a></small></li>\r\n     </ul>\r\n     <ul>\r\n      <li><b>Sub-Query Parsing</b>: Resolved a bug where combinators following the <code>,</code> Or combinator in a sub-query were incorrectly skipped. <small><a href=\"https://github.com/jhy/jsoup/issues/1707\">More.</a></small></li>\r\n     </ul>\r\n     <ul>\r\n      <li><b>Empty Doctype</b>: Fixed a bug in <code><a href=\"//jsoup.org/apidocs/org/jsoup/helper/W3CDom.html\" title=\"Helper class to transform a Document to a org.w3c.dom.Document, for integration with toolsets that use the W3C DOM.\">W3CDom</a></code> where the conversion would fail if the jsoup input document contained an empty doctype. The doctype is now discarded, and the conversion continues.</li>\r\n     </ul>\r\n     <ul>\r\n      <li><b>SVG Elements Cleaning</b>: Fixed incorrect nesting when cleaning a document containing SVG elements or other foreign elements with preserved-case names. <small><a href=\"https://github.com/jhy/jsoup/issues/2049\">More.</a></small></li>\r\n     </ul>\r\n     <ul>\r\n      <li><b>Unknown Self-Closing Tags</b>: Preserved the output style of unknown self-closing tags from the input when cleaning a document. <small><a href=\"https://github.com/jhy/jsoup/issues/2049\">More.</a></small></li>\r\n     </ul>\r\n     <h2>Build Improvements</h2>\r\n     <ul>\r\n      <li><b>Local Test Proxy</b>: Added a local test proxy implementation for proxy integration tests. <small><a href=\"https://github.com/jhy/jsoup/pull/2029\">More.</a></small></li>\r\n     </ul>\r\n     <ul>\r\n      <li><b>HTTPS Request Tests</b>: Added tests for HTTPS request support using a local self-signed certificate. Includes proxy tests. <small><a href=\"https://github.com/jhy/jsoup/pull/2032\">More.</a></small></li>\r\n     </ul>\r\n     <h2>Changes</h2>\r\n     <ul>\r\n      <li><b>Response BodyStream</b>: The InputStream returned in <code><a href=\"//jsoup.org/apidocs/org/jsoup/Connection.Response.html#bodyStream()\" title=\"Get the body of the response as a (buffered) InputStream.\">Connection.Response.bodyStream()</a></code> is now a plain <code>BufferedInputStream</code>. <small><a href=\"https://github.com/jhy/jsoup/issues/2054\">More.</a></small></li>\r\n     </ul>", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.17.1", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.17.1", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.17.1", "url": "https://api.github.com/repos/jhy/jsoup/releases/131489705", "release_id": 131489705, "date_created": "2023-11-27T01:24:32Z", "date_published": "2023-11-27T02:57:10Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/125912819", "tag": "jsoup-1.16.2", "name": "jsoup 1.16.2", "author": {"name": "jhy", "type": "User"}, "description": "<h2>Improvements</h2>\r\n<ul>\r\n<li>Optimized the performance of complex CSS selectors, by adding a cost-based query planner. Evaluators are sorted by their relative execution cost, and executed in order of lower to higher cost. This speeds the matching process by ensuring that simpler evaluations (such as a tag name match) are conducted prior to more complex evaluations (such as an attribute regex, or a deep child scan with a :has).</li>\r\n</ul>\r\n<ul>\r\n<li>Added support for <code>&lt;svg&gt;</code> and <code>&lt;math&gt;</code> tags (and their children). This includes tag namespaces and case preservation on applicable tags and attributes. <code><a href=\"https://github.com/jhy/jsoup/pull/2008\">#2008</a></code></li>\r\n</ul>\r\n<ul>\r\n<li>When converting jsoup Documents to W3C Documents in <code><a href=\"//jsoup.org/apidocs/org/jsoup/helper/W3CDom.html\" title=\"Helper class to transform a Document to a org.w3c.dom.Document, for integration with toolsets that use the W3C DOM.\">W3CDom</a></code>, HTML documents will be placed in the <code>http://www.w3.org/1999/xhtml</code> namespace by default, per the HTML5 spec. This can be controlled by setting <code><a href=\"//jsoup.org/apidocs/org/jsoup/helper/W3CDom.html#namespaceAware(boolean)\" title=\"Update the namespace aware setting.\">W3CDom#namespaceAware(boolean false)</a></code>. <code><a href=\"https://github.com/jhy/jsoup/pull/1848\">#1848</a></code></li>\r\n</ul>\r\n<ul>\r\n<li>Speed optimized the Structural Evaluators by memoizing previous evaluations. Particularly the <code>~</code> (any preceding sibling) and <code>:nth-of-type</code> selectors are improved. <code><a href=\"https://github.com/jhy/jsoup/issues/1956\">#1956</a></code></li>\r\n</ul>\r\n<ul>\r\n<li>Tweaked the performance of the <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/Element.html\" title=\"An HTML Element consists of a tag name, attributes, and child nodes (including text nodes and other elements).\">Element</a></code> <code>nextElementSibling</code>, <code>previousElementSibling</code>, <code>firstElementSibling</code>, <code>lastElementSibling</code>, <code>firstElementChild</code>, and `lastElementChild. They now inplace filter/skip in the child-node list, vs having to allocate and scan a complete Element filtered list.</li>\r\n</ul>\r\n<ul>\r\n<li>Optimized internal methods that previously called <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/Element.html#children()\" title=\"Get this element's child elements.\">Element.children()</a></code> to use filter/skip child-node list accessors instead, reducing new Element List allocations.</li>\r\n</ul>\r\n<ul>\r\n<li>Tweaked the performance of parsing <code>:pseudo</code> selectors.</li>\r\n</ul>\r\n<ul>\r\n<li>When using the <code>:empty</code> pseudo-selector, blank textnodes are now considered empty. Previously, an element containing any whitespace was not considered empty. <code><a href=\"https://github.com/jhy/jsoup/issues/1976\">#1976</a></code></li>\r\n</ul>\r\n<ul>\r\n<li>In forms, <code>&lt;input type=\"image\"&gt;</code> should be excluded from <code>Element.formData()</code> (and hence from form submissions). <code><a href=\"https://github.com/jhy/jsoup/pull/2010\">#2010</a></code></li>\r\n</ul>\r\n<ul>\r\n<li>In <code><a href=\"//jsoup.org/apidocs/org/jsoup/safety/Safelist.html\" title=\"Safe-lists define what HTML (elements and attributes) to allow through the cleaner.\">Safelist</a></code>, made <code>isSafeTag()</code> and <code>isSafeAttribute()</code> public methods, for extensibility. <code><a href=\"https://github.com/jhy/jsoup/issues/1780\">#1780</a></code></li>\r\n</ul>\r\n<h2>Bug Fixes</h2>\r\n<ul>\r\n<li>Bugfix: <code>form</code> elements and empty elements (such as <code>img</code>) did not have their attributes de-duplicated. <code><a href=\"https://github.com/jhy/jsoup/pull/1950\">#1950</a></code></li>\r\n</ul>\r\n<ul>\r\n<li>If <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/Document.OutputSettings.html\" title=\"A Document's output settings control the form of the text() and html() methods.\">Document.OutputSettings</a></code> was cloned from a clone, an NPE would be thrown when used. <code><a href=\"https://github.com/jhy/jsoup/pull/1964\">#1964</a></code></li>\r\n</ul>\r\n<ul>\r\n<li>In <code><a href=\"//jsoup.org/apidocs/org/jsoup/Jsoup.html#connect(java.lang.String)\" title=\"Creates a new Connection (session), with the defined request URL.\">Jsoup.connect(String url)</a></code>, URL paths containing a %2B were incorrectly recoded to a '+', or a '+' was recoded to a ' '. Fixed by reverting to the previous behavior of not encoding supplied paths, other than normalizing to ASCII. <code><a href=\"https://github.com/jhy/jsoup/issues/1952\">#1952</a></code></li>\r\n</ul>\r\n<ul>\r\n<li>In <code><a href=\"//jsoup.org/apidocs/org/jsoup/Jsoup.html#connect(java.lang.String)\" title=\"Creates a new Connection (session), with the defined request URL.\">Jsoup.connect(String url)</a></code>, strings containing supplemental characters (e.g. emoji) were not URL escaped correctly.</li>\r\n</ul>\r\n<ul>\r\n<li>In <code><a href=\"//jsoup.org/apidocs/org/jsoup/Jsoup.html#connect(java.lang.String)\" title=\"Creates a new Connection (session), with the defined request URL.\">Jsoup.connect(String url)</a></code>, the ConstrainableInputStream would clear Thread interrupts when reading the body. This precluded callers from spawning a thread, running a number of requests for a length of time, then joining that thread after interrupting it. <code><a href=\"https://github.com/jhy/jsoup/issues/1991\">#1991</a></code></li>\r\n</ul>\r\n<ul>\r\n<li>When tracking HTML source positions, the closing tags for <code>H1</code>...<code>H6</code> elements were not tracked correctly. <code><a href=\"https://github.com/jhy/jsoup/issues/1987\">#1987</a></code></li>\r\n</ul>\r\n<ul>\r\n<li>In <code><a href=\"//jsoup.org/apidocs/org/jsoup/Jsoup.html#connect(java.lang.String)\" title=\"Creates a new Connection (session), with the defined request URL.\">Jsoup.connect()</a></code>, a <code><a href=\"//jsoup.org/apidocs/org/jsoup/Connection.Method.html#DELETE\">DELETE</a></code> method request did not support a request body. <code><a href=\"https://github.com/jhy/jsoup/issues/1972\">#1972</a></code></li>\r\n</ul>\r\n<ul>\r\n<li>When calling <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/Element.html#cssSelector()\" title=\"Get a CSS selector that will uniquely select this element.\">Element.cssSelector()</a></code> on an extremely deeply nested element, a <code>StackOverflowError</code> could occur. Further, a <code>StackOverflowError</code> may occur when running the query. <code><a href=\"https://github.com/jhy/jsoup/issues/2001\">#2001</a></code></li>\r\n</ul>\r\n<ul>\r\n<li>Appending a node back to its original <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/Element.html\" title=\"An HTML Element consists of a tag name, attributes, and child nodes (including text nodes and other elements).\">Element</a></code> after <code><a href=\"//jsoup.org/apidocs/org/jsoup/select/Elements.html#empty()\" title=\"Empty (remove all child nodes from) each matched element.\">empty()</a></code> would throw an Index out of bounds exception. Also, now the child nodes that were removed have their parent node cleared, fully detaching them from the original parent. <code><a href=\"https://github.com/jhy/jsoup/issues/2013\">#2013</a></code></li>\r\n</ul>\r\n<ul>\r\n<li>In <code><a href=\"//jsoup.org/apidocs/org/jsoup/Connection.html\" title=\"The Connection interface is a convenient HTTP client and session object to fetch content from the web, and parse them into Documents.\">Connection</a></code> when adding headers, the value may have been assumed to be an incorrectly decoded <code>ISO_8859_1</code> string, and re-encoded as <code>UTF-8</code>. The value is now left as-is.</li>\r\n</ul>\r\n<h2>Changes</h2>\r\n<ul>\r\n<li>Removed previously deprecated methods <code>Document.normalise()</code>, <code>Element.forEach(org.jsoup.helper.Consumer&lt;&gt;)</code>, <code>Node.forEach(org.jsoup.helper.Consumer&lt;&gt;)</code>, and the <code>org.jsoup.helper.Consumer</code> interface; the latter being a previously required compatibility shim prior to Android's de-sugaring support.</li>\r\n</ul>\r\n<ul>\r\n<li>The previous compatibility shim <code><a href=\"//jsoup.org/apidocs/org/jsoup/UncheckedIOException.html\" title=\"Deprecated. Use UncheckedIOException instead. This class acted as a compatibility shim for Java versions prior to 1.8.\">org.jsoup.UncheckedIOException</a></code> is deprecated in favor of the now supported <code>java.io.UncheckedIOException</code>. If you are catching the former, modify your code to catch the latter instead. <code><a href=\"https://github.com/jhy/jsoup/pull/1989\">#1989</a></code></li>\r\n</ul>\r\n<ul>\r\n<li>Blocked <code>noscript</code> tags from being added to Safelists, due to incompatibilities between parsers with and without script-mode enabled.</li>\r\n</ul>\r\n<p></p>", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.16.2", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.16.2", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.16.2", "url": "https://api.github.com/repos/jhy/jsoup/releases/125912819", "release_id": 125912819, "date_created": "2023-10-20T04:08:35Z", "date_published": "2023-10-20T05:48:19Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/101363550", "tag": "jsoup-1.16.1", "name": "jsoup 1.16.1", "author": {"name": "jhy", "type": "User"}, "description": "<h1>jsoup Java HTML Parser release 1.16.1</h1>\r\n\r\n<h2>Improvements</h2>\r\n<ul>\r\n<li>In <code><a href=\"//jsoup.org/apidocs/org/jsoup/Jsoup.html#connect(java.lang.String)\" title=\"Creates a new Connection (session), with the defined request URL.\">Jsoup.connect(String url)</a></code>, natively support URLs with Unicode characters in the path or query string, without having to be escaped by the caller. <a href=\"https://github.com/jhy/jsoup/issues/1914\">#1914</a></li>\r\n</ul>\r\n<ul>\r\n<li>Calling <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/Node.html#remove()\" title=\"Remove (delete) this node from the DOM tree.\">Node.remove()</a></code> on a node with no parent is now a no-op, vs a validation error. <a href=\"https://github.com/jhy/jsoup/issues/1898\">#1898</a></li>\r\n</ul>\r\n<h2>Bug Fixes</h2>\r\n<ul>\r\n<li>Aligned the HTML Tree Builder processing steps for <code>AfterBody</code> and <code>AfterAfterBody</code> to the updated WHATWG standard, to not pop the stack to close <code>&lt;body&gt;</code> or <code>&lt;html&gt;</code> elements. This prevents an errant <code>&lt;/html&gt;</code> closing the preceding structure. Also added appropriate error message outputs in this case. <a href=\"https://github.com/jhy/jsoup/issues/1851\">#1851</a></li>\r\n</ul>\r\n<ul>\r\n<li>Corrected support for ruby elements (<code>&lt;ruby&gt;</code>, <code>&lt;rp&gt;</code>, <code>&lt;rt&gt;</code>, and <code>&lt;rtc&gt;</code>) to current spec. <a href=\"https://github.com/jhy/jsoup/issues/1294\">#1294</a></li>\r\n</ul>\r\n<ul>\r\n<li>When using <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/Node.html#before(org.jsoup.nodes.Node)\" title=\"Insert the specified node into the DOM before this node (as a preceding sibling).\">Node.before(Node)</a></code> or <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/Node.html#after(org.jsoup.nodes.Node)\" title=\"Insert the specified node into the DOM after this node (as a following sibling).\">Node.after(Node)</a></code>, if the incoming node was a sibling of the context node, the incoming node may be inserted into the wrong relative location. <a href=\"https://github.com/jhy/jsoup/issues/1898\">#1898</a></li>\r\n</ul>\r\n<ul>\r\n<li>In <code><a href=\"//jsoup.org/apidocs/org/jsoup/Jsoup.html#connect(java.lang.String)\" title=\"Creates a new Connection (session), with the defined request URL.\">Jsoup.connect(String url)</a></code>, if the input URL had components that were already <code>%</code> escaped, they would be escaped again, causing errors when fetched. <a href=\"https://github.com/jhy/jsoup/issues/1902\">#1902</a></li>\r\n</ul>\r\n<ul>\r\n<li>When tracking input source positions, text in tables that was fostered had invalid positions. <a href=\"https://github.com/jhy/jsoup/issues/1927\">#1927</a></li>\r\n</ul>\r\n<ul>\r\n<li>If the <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/Document.OutputSettings.html\" title=\"A Document's output settings control the form of the text() and html() methods.\">Document.OutputSettings</a></code> class was initialized, and then <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/Entities.html#escape(java.lang.String)\" title=\"HTML escape an input string, using the default settings (UTF-8, base entities).\">Entities.escape(String)</a></code> called, an NPE may be thrown due to a class loading circular dependency. <a href=\"https://github.com/jhy/jsoup/issues/1910\">#1910</a></li>\r\n</ul>\r\n<ul>\r\n<li>When pretty-printing, the first inline <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/Element.html\" title=\"An HTML Element consists of a tag name, attributes, and child nodes (including text nodes and other elements).\">Element</a></code> or <code><a href=\"//jsoup.org/apidocs/org/jsoup/nodes/Comment.html\" title=\"A comment node.\">Comment</a></code> in a block would not be wrap-indented if it were preceded by a blank text node. <a href=\"https://github.com/jhy/jsoup/issues/1906\">#1906</a></li>\r\n</ul>\r\n<ul>\r\n<li>When pretty-printing a <code>&lt;pre&gt;</code> containing block tags, those tags were incorrectly indented. <a href=\"https://github.com/jhy/jsoup/issues/1891\">#1891</a></li>\r\n</ul>\r\n<ul>\r\n<li>When pretty-printing nested inlineable blocks (such as a <code>&lt;p&gt;</code> in a <code>&lt;td&gt;</code>), the inner element should be indented. <a href=\"https://github.com/jhy/jsoup/issues/1926\">#1926</a></li>\r\n</ul>\r\n<ul>\r\n<li><code>&lt;br&gt;</code> tags should be wrap-indented when in block tags (and not when in inline tags). <a href=\"https://github.com/jhy/jsoup/issues/1911\">#1911</a></li>\r\n</ul>\r\n<ul>\r\n<li>The contents of a sufficiently large <code>&lt;textarea&gt;</code> with un-escaped HTML closing tags may be incorrectly parsed to an empty node. <a href=\"https://github.com/jhy/jsoup/issues/1929\">#1929</a></li>\r\n</ul>", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.16.1", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.16.1", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.16.1", "url": "https://api.github.com/repos/jhy/jsoup/releases/101363550", "release_id": 101363550, "date_created": "2023-04-29T04:17:47Z", "date_published": "2023-04-29T06:32:45Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/92900674", "tag": "jsoup-1.15.4", "name": "jsoup 1.15.4", "author": {"name": "jhy", "type": "User"}, "description": "<h1>jsoup Java HTML Parser release 1.15.4</h1>\r\n     <p><b>jsoup 1.15.4</b> is out now, and includes a bunch of improvements, particularly when pretty-printing HTML, and bug fixes.</p>\r\n     <p><b>jsoup</b> is a Java library for working with real-world HTML. It provides a very convenient API for extracting and manipulating data, using the best of HTML5 DOM methods and CSS selectors.</p>\r\n     <p><a href=\"https://jsoup.org/download\"><b>Download</b></a> jsoup now.</p>\r\n     <h2>Improvements</h2>\r\n     <ul>\r\n      <li>Added the ability to escape CSS selectors (tags, IDs, classes) to match elements that don't follow regular CSS syntax. For example, to match by classname <code>&lt;p class=\"one.two\"&gt;</code>, use <code>document.select(\"p.one\\\\.two\");</code> <a href=\"https://github.com/jhy/jsoup/issues/838\">#838</a></li>\r\n     </ul>\r\n     <ul>\r\n      <li>When pretty-printing, wrap text that follows a <code>&lt;br&gt;</code> tag. <a href=\"https://github.com/jhy/jsoup/issues/1858\">#1858</a></li>\r\n     </ul>\r\n     <ul>\r\n      <li>When pretty-printing, normalize newlines that follow self-closing tags in custom tags. <a href=\"https://github.com/jhy/jsoup/issues/1852\">#1852</a></li>\r\n     </ul>\r\n     <ul>\r\n      <li>When pretty-printing, collapse non-significant whitespace between a block and an inline tag. <a href=\"https://github.com/jhy/jsoup/issues/1802\">#1802</a></li>\r\n     </ul>\r\n     <ul>\r\n      <li>In <code><a href=\"https://jsoup.org/apidocs/org/jsoup/nodes/Element.html#forEach(java.util.function.Consumer)\" title=\"Perform the supplied action on this Element and each of its descendant Elements, during a depth-first traversal.\">Element.forEach()</a></code> and <code><a href=\"https://jsoup.org/apidocs/org/jsoup/nodes/Node.html#forEachNode(java.util.function.Consumer)\" title=\"Perform the supplied action on this Node and each of its descendants, during a depth-first traversal.\">Node.forEachNode()</a></code>, use <code>java.util.function.Consumer</code> instead of the previous Android compatibility shim <code><a href=\"https://jsoup.org/apidocs/org/jsoup/helper/Consumer.html\" title=\"Deprecated. Use Consumer instead. This interface will be removed in the next release. If you are targeting Android, see how to enable desugaring.\">org.jsoup.helper.Consumer</a></code>. Subsequently, the latter has been deprecated. <a href=\"https://github.com/jhy/jsoup/pull/1870\">#1870</a></li>\r\n     </ul>\r\n     <ul>\r\n      <li>Added a new method <code><a href=\"https://jsoup.org/apidocs/org/jsoup/nodes/Document.html#forms()\" title=\"Get each of the <form> elements contained in this document.\">Document.forms()</a></code>, to conveniently retrieve a <code>List&lt;FormElement&gt;</code> containing the <code>&lt;form&gt;</code> elements in a document.</li>\r\n     </ul>\r\n     <ul>\r\n      <li>Added a new method <code><a href=\"https://jsoup.org/apidocs/org/jsoup/nodes/Document.html#expectForm(java.lang.String)\" title=\"Selects the first FormElement in this document that matches the query.\">Document.expectForm()</a></code>, to find the first matching <code><a href=\"https://jsoup.org/apidocs/org/jsoup/nodes/FormElement.html\" title=\"A HTML Form Element provides ready access to the form fields/controls that are associated with it.\">FormElement</a></code>, or blow up trying.</li>\r\n     </ul>\r\n     <h2>Bug Fixes</h2>\r\n     <ul>\r\n      <li>URLs containing characters such as <code><a href=\"</code>\">and &lt;code&gt;</a></code> were not escaped correctly, and would throw a <code>MalformedURLException</code> when fetched. <a href=\"https://github.com/jhy/jsoup/issues/1873\">#1873</a></li>\r\n     </ul>\r\n     <ul>\r\n      <li><code><a href=\"https://jsoup.org/apidocs/org/jsoup/nodes/Element.html#cssSelector()\" title=\"Get a CSS selector that will uniquely select this element.\">Element.cssSelector()</a></code> would create invalid selectors for elements where the tag name, ID, or classnames needed to be escaped (e.g. if a class name contained a <code>:</code> or <code>.</code>). <a href=\"https://github.com/jhy/jsoup/issues/1742\">#1742</a></li>\r\n     </ul>\r\n     <ul>\r\n      <li><code><a href=\"https://jsoup.org/apidocs/org/jsoup/nodes/Element.html#text()\" title=\"Gets the normalized, combined text of this element and all its children.\">Element.text()</a></code> should have a space between a block and an inline element. <a href=\"https://github.com/jhy/jsoup/issues/1877\">#1877</a></li>\r\n     </ul>\r\n     <ul>\r\n      <li>If a <code><a href=\"https://jsoup.org/apidocs/org/jsoup/nodes/Node.html\" title=\"The base, abstract Node model.\">Node</a></code> or an <code><a href=\"https://jsoup.org/apidocs/org/jsoup/nodes/Element.html\" title=\"An HTML Element consists of a tag name, attributes, and child nodes (including text nodes and other elements).\">Element</a></code> was replaced with itself, that node would incorrectly be orphaned. <a href=\"https://github.com/jhy/jsoup/issues/1843\">#1843</a></li>\r\n     </ul>\r\n     <ul>\r\n      <li>Form data on a previous request was copied to a new request in <code><a href=\"https://jsoup.org/apidocs/org/jsoup/helper/HttpConnection.html#newRequest()\">newRequest()</a></code>, resulting in an accumulation of form data when executing multi-step form submissions, or data sent to later requests incorrectly. Now, <code><a href=\"https://jsoup.org/apidocs/org/jsoup/helper/HttpConnection.html#newRequest()\">newRequest()</a></code> only copies session related settings (cookies, proxy settings, user-agent, etc) but not the request data nor the body. <a href=\"https://github.com/jhy/jsoup/issues/1778\">#1778</a></li>\r\n     </ul>\r\n     <ul>\r\n      <li>Fixed an issue in <code><a href=\"https://jsoup.org/apidocs/org/jsoup/safety/Safelist.html#removeAttributes(java.lang.String,java.lang.String...)\" title=\"Remove a list of allowed attributes from a tag.\">Safelist.removeAttributes()</a></code> which could throw a <code>ConcurrentModificationException</code> when using the <code>:all</code> pseudo-attribute.</li>\r\n     </ul>\r\n     <ul>\r\n      <li>Given extremely deeply nested HTML, a number of methods in <code><a href=\"https://jsoup.org/apidocs/org/jsoup/nodes/Element.html\" title=\"An HTML Element consists of a tag name, attributes, and child nodes (including text nodes and other elements).\">Element</a></code> could throw a <code>StackOverflowError</code> due to excessive recursion. Namely: <code>#data()</code>, <code>#hasText()</code>, <code>#parents()</code>, and <code>#wrap(html)</code>. <a href=\"https://github.com/jhy/jsoup/issues/1864\">#1864</a></li>\r\n     </ul>\r\n     <h2>Changes</h2>\r\n     <ul>\r\n      <li>Deprecated the unused <code><a href=\"https://jsoup.org/apidocs/org/jsoup/nodes/Document.html#normalise()\" title=\"Deprecated. as normalization occurs during the HTML parse, this method is no longer useful and will be retired in the next release.\">Document.normalise()</a></code> method. Normalization occurs during the HTML tree construction, and no longer as a distinct phase.</li>\r\n     </ul>\r\n     <p></p>\r\n     <hr>\r\n     <p></p>\r\n     <p>My sincere thanks to everyone who contributed patches, suggestions, and bug reports. If you have any suggestions for the next release, I would love to hear them; please get in touch with me <a href=\"https://jhy.io/\">directly</a>.</p>\r\n     <p>You can also <a rel=\"me\" href=\"https://tilde.zone/@jhy\">follow me</a> (<b><a rel=\"me\" href=\"https://tilde.zone/@jhy\">@jhy@tilde.zone</a></b>) on Mastodon / Fediverse to receive occasional notes about jsoup releases.</p>", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.15.4", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.15.4", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.15.4", "url": "https://api.github.com/repos/jhy/jsoup/releases/92900674", "release_id": 92900674, "date_created": "2023-02-18T00:31:55Z", "date_published": "2023-02-18T01:46:46Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/75168032", "tag": "jsoup-1.15.3", "name": "jsoup 1.15.3", "author": {"name": "jhy", "type": "User"}, "description": "**jsoup 1.15.3** is out now, and includes a security fix for potential XSS attacks, along with other bug fixes and improvements, including more descriptive validation error messages.\r\n\r\nDetails:\r\n\r\n- [Security advisory](https://github.com/jhy/jsoup/security/advisories/GHSA-gp7f-rwcx-9369)\r\n- [Release notes](https://jsoup.org/news/release-1.15.3)\r\n- [Download](https://jsoup.org/download)", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.15.3", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.15.3", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.15.3", "url": "https://api.github.com/repos/jhy/jsoup/releases/75168032", "release_id": 75168032, "date_created": "2022-08-24T00:10:45Z", "date_published": "2022-08-24T00:49:25Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/71172623", "tag": "jsoup-1.15.2", "name": "jsoup 1.15.2", "author": {"name": "jhy", "type": "User"}, "description": "jsoup 1.15.2 is out now with a bunch of [improvements and bug fixes](https://jsoup.org/news/release-1.15.2).", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.15.2", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.15.2", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.15.2", "url": "https://api.github.com/repos/jhy/jsoup/releases/71172623", "release_id": 71172623, "date_created": "2022-07-04T06:40:35Z", "date_published": "2022-07-04T07:13:36Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/66893993", "tag": "jsoup-1.15.1", "name": "jsoup 1.15.1", "author": {"name": "jhy", "type": "User"}, "description": "jsoup 1.15.1 is out now with a bunch of [improvements and bug fixes](https://jsoup.org/news/release-1.15.1).", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.15.1", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.15.1", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.15.1", "url": "https://api.github.com/repos/jhy/jsoup/releases/66893993", "release_id": 66893993, "date_created": "2022-05-15T05:34:03Z", "date_published": "2022-05-15T06:38:43Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/50527585", "tag": "jsoup-1.14.3", "name": "jsoup 1.14.3", "author": {"name": "jhy", "type": "User"}, "description": "**jsoup 1.14.3** is out now, adding native **XPath** selector support, improved `<template>` support, and also includes a bunch of bug fixes, improvements, and performance enhancements.\r\n\r\nSee the [release announcement](https://jsoup.org/news/release-1.14.3) for the full changelog.", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.14.3", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.14.3", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.14.3", "url": "https://api.github.com/repos/jhy/jsoup/releases/50527585", "release_id": 50527585, "date_created": "2021-09-30T07:08:28Z", "date_published": "2021-09-30T07:36:55Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/47864659", "tag": "jsoup-1.14.2", "name": "jsoup 1.14.2", "author": {"name": "jhy", "type": "User"}, "description": "Caught by the fuzz! **jsoup 1.14.2** is out now, and includes a set of parser bug fixes and improvements for handling rough HTML and XML, as identified by the Jazzer JVM fuzzer. This release also includes other fixes and improvements.\r\n\r\nSee the [release announcement](https://jsoup.org/news/release-1.14.2) for the full changelog.", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.14.2", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.14.2", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.14.2", "url": "https://api.github.com/repos/jhy/jsoup/releases/47864659", "release_id": 47864659, "date_created": "2021-08-15T05:39:15Z", "date_published": "2021-08-15T07:24:49Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/45995173", "tag": "jsoup-1.14.1", "name": "jsoup 1.14.1", "author": {"name": "jhy", "type": "User"}, "description": "jsoup **1.14.1** is out now, with simple request session management, increased parse robustness, and a ton of other improvements, speed-ups, and bug fixes.\r\n\r\nSee the full [announcement](https://jsoup.org/news/release-1.14.1) for all the details on what's changed.", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.14.1", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.14.1", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.14.1", "url": "https://api.github.com/repos/jhy/jsoup/releases/45995173", "release_id": 45995173, "date_created": "2021-07-10T02:14:03Z", "date_published": "2021-07-10T02:24:54Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/24105193", "tag": "jsoup-1.13.1", "name": "jsoup 1.13.1", "author": {"name": "jhy", "type": "User"}, "description": "jsoup 1.13.1\r\n\r\nSee the [release notes](https://jsoup.org/news/release-1.13.1).\r\n\r\n```\r\n<dependency>\r\n  <!-- jsoup HTML parser library @ https://jsoup.org/ -->\r\n  <groupId>org.jsoup</groupId>\r\n  <artifactId>jsoup</artifactId>\r\n  <version>1.13.1</version>\r\n</dependency>\r\n```", "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.13.1", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.13.1", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.13.1", "url": "https://api.github.com/repos/jhy/jsoup/releases/24105193", "release_id": 24105193, "date_created": "2020-03-01T01:21:19Z", "date_published": "2020-03-01T02:29:24Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/jhy/jsoup/releases/23509384", "tag": "jsoup-1.12.2", "name": "jsoup-1.12.2", "author": {"name": "jhy", "type": "User"}, "tarball_url": "https://api.github.com/repos/jhy/jsoup/tarball/jsoup-1.12.2", "zipball_url": "https://api.github.com/repos/jhy/jsoup/zipball/jsoup-1.12.2", "html_url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.12.2", "url": "https://api.github.com/repos/jhy/jsoup/releases/23509384", "release_id": 23509384, "date_created": "2020-02-09T02:09:41Z", "date_published": "2020-02-09T02:49:46Z"}, "confidence": 1, "technique": "GitHub_API"}], "has_build_file": [{"result": {"value": "https://raw.githubusercontent.com/jhy/jsoup/master/pom.xml", "type": "Url", "format": "pom.xml"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/pom.xml"}], "package_id": [{"result": {"value": "org.jsoup.jsoup", "type": "String"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/pom.xml"}], "version": [{"result": {"value": "1.21.1-SNAPSHOT", "type": "Release"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/pom.xml"}], "package_distribution": [{"result": {"value": "https://github.com/jhy/jsoup", "type": "Url"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/pom.xml"}], "requirements": [{"result": {"value": [{"groupId": "org.junit.jupiter", "artifactId": "junit-jupiter", "version": "5.12.2"}, {"groupId": "com.google.code.gson", "artifactId": "gson", "version": "2.13.1"}, {"groupId": "org.eclipse.jetty", "artifactId": "jetty-server", "version": "${jetty.version}"}, {"groupId": "org.eclipse.jetty", "artifactId": "jetty-servlet", "version": "${jetty.version}"}, {"groupId": "org.eclipse.jetty", "artifactId": "jetty-proxy", "version": "${jetty.version}"}, {"groupId": "org.jspecify", "artifactId": "jspecify", "version": "1.0.0"}], "type": "Url"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/pom.xml"}], "authors": [{"result": {"value": [{"name": "Jonathan Hedley", "email": "jonathan@hedley.net", "url": null, "organization": null, "value": "Jonathan Hedley"}], "type": "Url"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/pom.xml"}], "has_package_file": [{"result": {"value": "pom.xml", "type": "Url"}, "confidence": 1, "technique": "code_parser", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/pom.xml"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/jhy/jsoup/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "continuous_integration": [{"result": {"value": "https://raw.githubusercontent.com/jhy/jsoup/master/.github/workflows/build.yml", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/jhy/jsoup/master/.github/workflows/cifuzz.yml", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/jhy/jsoup/master/.github/workflows/codeql.yml", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "usage": [{"result": {"value": "Fetch the [Wikipedia](https://en.wikipedia.org/wiki/Main_Page) homepage, parse it to a [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction), and select the headlines from the *In the News* section into a list of [Elements](https://jsoup.org/apidocs/org/jsoup/select/Elements.html):\n\n```java\nDocument doc = Jsoup.connect(\"https://en.wikipedia.org/\").get();\nlog(doc.title());\nElements newsHeadlines = doc.select(\"#mp-itn b a\");\nfor (Element headline : newsHeadlines) {\n  log(\"%s\\n\\t%s\", \n    headline.attr(\"title\"), headline.absUrl(\"href\"));\n}\n```\n[Online sample](https://try.jsoup.org/~LGB7rk_atM2roavV0d-czMt3J_g), [full source](https://github.com/jhy/jsoup/blob/master/src/main/java/org/jsoup/examples/Wikipedia.java).\n", "type": "Text_excerpt", "original_header": "Example", "parent_header": ["jsoup: Java HTML Parser"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/README.md"}, {"result": {"value": "1. [Download](https://jsoup.org/download) the latest jsoup jar (or add it to your Maven/Gradle build)\n2. Read the [cookbook](https://jsoup.org/cookbook/)\n3. Enjoy!\n", "type": "Text_excerpt", "original_header": "Getting started", "parent_header": ["jsoup: Java HTML Parser"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/README.md"}], "support": [{"result": {"value": "When used in Android projects, [core library desugaring](https://developer.android.com/studio/write/java8-support#library-desugaring) with the [NIO specification](https://developer.android.com/studio/write/java11-nio-support-table) should be enabled to support Java 8+ features.\n", "type": "Text_excerpt", "original_header": "Android support", "parent_header": ["jsoup: Java HTML Parser", "Getting started"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/README.md"}, {"result": {"value": "If you have any questions on how to use jsoup, or have ideas for future development, please get in touch via [jsoup Discussions](https://github.com/jhy/jsoup/discussions).\n\nIf you find any issues, please file a [bug](https://jsoup.org/bugs) after checking for duplicates.\n\nThe [colophon](https://jsoup.org/colophon) talks about the history of and tools used to build jsoup.\n", "type": "Text_excerpt", "original_header": "Development and support", "parent_header": ["jsoup: Java HTML Parser"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/README.md"}], "citation": [{"result": {"value": "If you use jsoup in research or technical documentation, you can cite it as:\n\n> **Jonathan Hedley & jsoup contributors. jsoup: Java HTML Parser (2009\u2013present).** Available at: https://jsoup.org\n\n```plaintext\n@misc{jsoup,\n  author = {Jonathan Hedley and jsoup contributors},\n  title = {jsoup: Java HTML Parser},\n  year = {2025},\n  url = {https://jsoup.org}\n}\n```\n", "type": "Text_excerpt", "original_header": "Citing jsoup", "parent_header": ["jsoup: Java HTML Parser"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/README.md"}, {"result": {"value": "@misc{jsoup,\n    url = {https://jsoup.org},\n    year = {2025},\n    title = {jsoup: Java HTML Parser},\n    author = {Jonathan Hedley and jsoup contributors},\n}", "type": "Text_excerpt", "format": "bibtex", "title": "jsoup: Java HTML Parser", "author": "Jonathan Hedley and jsoup contributors", "url": "https://jsoup.org"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/README.md"}], "application_domain": [{"result": {"type": "String", "value": "Semantic web"}, "confidence": 0.9826310511607776, "technique": "supervised_classification"}], "full_title": [{"result": {"type": "String", "value": "jsoup: Java HTML Parser"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/jhy/jsoup/master/README.md"}]}